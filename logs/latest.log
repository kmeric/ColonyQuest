[16:18:00] [main/INFO]: ModLauncher running: args [--username, Keirtain, --version, forge-39.0.10, --gameDir, /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack, --assetsDir, /Users/matt/Documents/curseforge/minecraft/Install/assets, --assetIndex, 1.18, --uuid, 98b32eeccc264f65b3b57573eef3939e, --accessToken, ❄❄❄❄❄❄❄❄, --clientId, QjRGOERBMkU5NEQ0NDYxNjgzNzgyQTlENTRGRTcxOUQ=, --xuid, , --userType, mojang, --versionType, release, --width, 1024, --height, 768, --launchTarget, forgeclient, --fml.forgeVersion, 39.0.10, --fml.mcVersion, 1.18.1, --fml.forgeGroup, net.minecraftforge, --fml.mcpVersion, 20211210.034407]
[16:18:00] [main/INFO]: ModLauncher 9.0.7+91+master.8569cdf starting: java version 17.0.1 by Microsoft
[16:18:00] [main/INFO]: SpongePowered MIXIN Subsystem Version=0.8.5 Source=union:/Users/matt/Documents/curseforge/minecraft/Install/libraries/org/spongepowered/mixin/0.8.5/mixin-0.8.5.jar%2319! Service=ModLauncher Env=CLIENT
[16:18:01] [main/INFO]: Found mod file AI-Improvements-1.18-0.4.0.jar of type MOD with locator {mods folder locator at /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/mods}
[16:18:01] [main/INFO]: Found mod file alexsmobs-1.15.1.jar of type MOD with locator {mods folder locator at /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/mods}
[16:18:01] [main/INFO]: Found mod file AmbientEnvironment-forge-1.18.1-7.0.3.jar of type MOD with locator {mods folder locator at /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/mods}
[16:18:01] [main/INFO]: Found mod file Apotheosis-1.18.1-5.0.0.jar of type MOD with locator {mods folder locator at /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/mods}
[16:18:01] [main/INFO]: Found mod file appleskin-forge-mc1.18-2.2.0.jar of type MOD with locator {mods folder locator at /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/mods}
[16:18:01] [main/INFO]: Found mod file Aquaculture-1.18.1-2.3.2.jar of type MOD with locator {mods folder locator at /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/mods}
[16:18:01] [main/INFO]: Found mod file architectury-3.4.9.jar of type MOD with locator {mods folder locator at /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/mods}
[16:18:01] [main/INFO]: Found mod file ars_nouveau-1.18.1-2.0.5.jar of type MOD with locator {mods folder locator at /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/mods}
[16:18:01] [main/INFO]: Found mod file artifacts-1.18.1-4.0.2.jar of type MOD with locator {mods folder locator at /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/mods}
[16:18:01] [main/INFO]: Found mod file AttributeFix-Forge-1.18.1-13.0.3.jar of type MOD with locator {mods folder locator at /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/mods}
[16:18:01] [main/INFO]: Found mod file AutoRegLib-1.7-52.jar of type MOD with locator {mods folder locator at /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/mods}
[16:18:01] [main/INFO]: Found mod file balm-2.4.0+0.jar of type MOD with locator {mods folder locator at /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/mods}
[16:18:01] [main/INFO]: Found mod file baubley-heart-canisters-1.18-1.0.0.jar of type MOD with locator {mods folder locator at /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/mods}
[16:18:01] [main/INFO]: Found mod file BetterAdvancements-1.18.1-0.1.2.122.jar of type MOD with locator {mods folder locator at /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/mods}
[16:18:01] [main/INFO]: Found mod file BiomesOPlenty-1.18.1-15.0.0.90-universal.jar of type MOD with locator {mods folder locator at /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/mods}
[16:18:01] [main/INFO]: Found mod file blockui-1.18-0.0.34-ALPHA.jar of type MOD with locator {mods folder locator at /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/mods}
[16:18:01] [main/INFO]: Found mod file buildinggadgets-3.10.1-build.3+mc1.18.jar of type MOD with locator {mods folder locator at /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/mods}
[16:18:01] [main/INFO]: Found mod file caelus-forge-1.18-3.0.0.1.jar of type MOD with locator {mods folder locator at /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/mods}
[16:18:01] [main/INFO]: Found mod file catalogue-1.6.0-1.18.1.jar of type MOD with locator {mods folder locator at /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/mods}
[16:18:01] [main/INFO]: Found mod file citadel-1.10.8-1.18.jar of type MOD with locator {mods folder locator at /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/mods}
[16:18:01] [main/INFO]: Found mod file clienttweaks-forge-1.18-7.0.0.jar of type MOD with locator {mods folder locator at /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/mods}
[16:18:01] [main/INFO]: Found mod file cloth-config-6.1.48-forge.jar of type MOD with locator {mods folder locator at /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/mods}
[16:18:01] [main/INFO]: Found mod file Clumps-forge-1.18.1-8.0.4.jar of type MOD with locator {mods folder locator at /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/mods}
[16:18:01] [main/INFO]: Found mod file collective-1.18.1-3.8.jar of type MOD with locator {mods folder locator at /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/mods}
[16:18:01] [main/INFO]: Found mod file comforts-forge-1.18-5.0.0.1.jar of type MOD with locator {mods folder locator at /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/mods}
[16:18:01] [main/INFO]: Found mod file Controlling-forge-1.18.1-9.0.10.jar of type MOD with locator {mods folder locator at /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/mods}
[16:18:01] [main/INFO]: Found mod file cookingforblockheads-forge-1.18-11.0.0.jar of type MOD with locator {mods folder locator at /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/mods}
[16:18:01] [main/INFO]: Found mod file CosmeticArmorReworked-1.18.1-v1a.jar of type MOD with locator {mods folder locator at /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/mods}
[16:18:01] [main/INFO]: Found mod file create-mc1.18.1_v0.4b.jar of type MOD with locator {mods folder locator at /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/mods}
[16:18:01] [main/INFO]: Found mod file createchunkloading-0.3.1.jar of type MOD with locator {mods folder locator at /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/mods}
[16:18:01] [main/INFO]: Found mod file createdeco-1.2.2-1.18.jar of type MOD with locator {mods folder locator at /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/mods}
[16:18:01] [main/INFO]: Found mod file Croptopia-1.18-FORGE-1.8.0.jar of type MOD with locator {mods folder locator at /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/mods}
[16:18:01] [main/INFO]: Found mod file Cucumber-1.18.1-5.0.2.jar of type MOD with locator {mods folder locator at /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/mods}
[16:18:01] [main/INFO]: Found mod file curios-forge-1.18.1-5.0.4.2.jar of type MOD with locator {mods folder locator at /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/mods}
[16:18:01] [main/INFO]: Found mod file curiouselytra-forge-1.18.1-5.0.0.1.jar of type MOD with locator {mods folder locator at /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/mods}
[16:18:01] [main/INFO]: Found mod file Customized-Dungeon-Loot-1.17.x-(v.2.1.0).jar of type MOD with locator {mods folder locator at /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/mods}
[16:18:01] [main/INFO]: Found mod file Cyclic-1.18.1-1.6.9.jar of type MOD with locator {mods folder locator at /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/mods}
[16:18:01] [main/INFO]: Found mod file defaultoptions-forge-1.18-14.0.0.jar of type MOD with locator {mods folder locator at /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/mods}
[16:18:01] [main/INFO]: Found mod file dimdungeons-1.13.1-forge-1.18.1.jar of type MOD with locator {mods folder locator at /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/mods}
[16:18:01] [main/INFO]: Found mod file DoggyTalents-1.18.1-2.4.0.jar of type MOD with locator {mods folder locator at /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/mods}
[16:18:01] [main/INFO]: Found mod file domum_ornamentum-1.18-1.0.31-ALPHA-universal.jar of type MOD with locator {mods folder locator at /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/mods}
[16:18:01] [main/INFO]: Found mod file DungeonCrawl-1.18.1-2.3.6.jar of type MOD with locator {mods folder locator at /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/mods}
[16:18:01] [main/INFO]: Found mod file EasyMagic-v3.2.1-1.18.1-Forge.jar of type MOD with locator {mods folder locator at /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/mods}
[16:18:01] [main/INFO]: Found mod file EnchantmentDescriptions-Forge-1.18.1-9.0.8.jar of type MOD with locator {mods folder locator at /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/mods}
[16:18:01] [main/INFO]: Found mod file enderchests-1.18-1.9.0.jar of type MOD with locator {mods folder locator at /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/mods}
[16:18:01] [main/INFO]: Found mod file endertanks-1.18-1.11.0.jar of type MOD with locator {mods folder locator at /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/mods}
[16:18:01] [main/INFO]: Found mod file EquipmentCompare-1.18.1-1.2.10.jar of type MOD with locator {mods folder locator at /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/mods}
[16:18:01] [main/INFO]: Found mod file expandability-5.0.0-forge.jar of type MOD with locator {mods folder locator at /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/mods}
[16:18:01] [main/INFO]: Found mod file ExtraDisks-1.18.1-2.0.2.jar of type MOD with locator {mods folder locator at /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/mods}
[16:18:01] [main/INFO]: Found mod file ExtraStorage-1.18.1-2.0.1.jar of type MOD with locator {mods folder locator at /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/mods}
[16:18:01] [main/INFO]: Found mod file FarmersDelight-1.18.1-1.0.1.jar of type MOD with locator {mods folder locator at /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/mods}
[16:18:01] [main/INFO]: Found mod file farmingforblockheads-forge-1.18.1-9.0.2.jar of type MOD with locator {mods folder locator at /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/mods}
[16:18:01] [main/INFO]: Found mod file FastFurnace-1.18.1-6.0.1.jar of type MOD with locator {mods folder locator at /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/mods}
[16:18:01] [main/INFO]: Found mod file FastLeafDecay-27.2.jar of type MOD with locator {mods folder locator at /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/mods}
[16:18:01] [main/INFO]: Found mod file FastWorkbench-1.18.1-6.0.0.jar of type MOD with locator {mods folder locator at /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/mods}
[16:18:01] [main/INFO]: Found mod file ferritecore-4.0.0-forge.jar of type MOD with locator {mods folder locator at /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/mods}
[16:18:01] [main/INFO]: Found mod file flywheel-forge-1.18-0.5.0a.jar of type MOD with locator {mods folder locator at /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/mods}
[16:18:01] [main/INFO]: Found mod file ftb-chunks-forge-1801.3.3-build.108.jar of type MOD with locator {mods folder locator at /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/mods}
[16:18:01] [main/INFO]: Found mod file ftb-library-forge-1801.3.5-build.106.jar of type MOD with locator {mods folder locator at /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/mods}
[16:18:01] [main/INFO]: Found mod file ftb-quests-forge-1801.3.7-build.87.jar of type MOD with locator {mods folder locator at /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/mods}
[16:18:01] [main/INFO]: Found mod file ftb-teams-forge-1801.2.4-build.46.jar of type MOD with locator {mods folder locator at /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/mods}
[16:18:01] [main/INFO]: Found mod file furniture-7.0.0-pre27-1.18.1.jar of type MOD with locator {mods folder locator at /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/mods}
[16:18:01] [main/INFO]: Found mod file geckolib-1.18-forge-3.0.3.jar of type MOD with locator {mods folder locator at /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/mods}
[16:18:01] [main/INFO]: Found mod file guardvillagers-1.18.1.4.0.jar of type MOD with locator {mods folder locator at /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/mods}
[16:18:01] [main/INFO]: Found mod file Iceberg-1.18.1-1.0.33.jar of type MOD with locator {mods folder locator at /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/mods}
[16:18:01] [main/INFO]: Found mod file ImmersiveEngineering-1.18.1-7.1.0-145.jar of type MOD with locator {mods folder locator at /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/mods}
[16:18:01] [main/INFO]: Found mod file Industrial Agriculture[Core]-1.18.1-1.8.14.3.jar of type MOD with locator {mods folder locator at /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/mods}
[16:18:01] [main/INFO]: Found mod file Industrial Agriculture[Silent's Gems]-1.18.1-1.8.14.jar of type MOD with locator {mods folder locator at /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/mods}
[16:18:01] [main/INFO]: Found mod file InventoryHud_[1.18].forge-3.4.4.jar of type MOD with locator {mods folder locator at /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/mods}
[16:18:01] [main/INFO]: Found mod file item-filters-forge-1801.2.6-build.16.jar of type MOD with locator {mods folder locator at /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/mods}
[16:18:01] [main/INFO]: Found mod file jei-1.18.1-9.1.2.61.jar of type MOD with locator {mods folder locator at /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/mods}
[16:18:01] [main/INFO]: Found mod file jmi-1.18.1-0.5-27.jar of type MOD with locator {mods folder locator at /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/mods}
[16:18:01] [main/INFO]: Found mod file journeymap-1.18.1-5.8.0beta6.jar of type MOD with locator {mods folder locator at /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/mods}
[16:18:01] [main/INFO]: Found mod file JustEnoughResources-1.18.1-0.13.1.141.jar of type MOD with locator {mods folder locator at /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/mods}
[16:18:01] [main/INFO]: Found mod file kleeslabs-forge-1.18-11.0.0.jar of type MOD with locator {mods folder locator at /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/mods}
[16:18:01] [main/INFO]: Found mod file kubejs-create-1801.2.0-build.14.jar of type MOD with locator {mods folder locator at /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/mods}
[16:18:01] [main/INFO]: Found mod file kubejs-forge-1801.4.1-build.271.jar of type MOD with locator {mods folder locator at /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/mods}
[16:18:01] [main/INFO]: Found mod file kubejs-immersive-engineering-1801.2.0-build.16.jar of type MOD with locator {mods folder locator at /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/mods}
[16:18:01] [main/INFO]: Found mod file light-overlay-6.0.4-forge.jar of type MOD with locator {mods folder locator at /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/mods}
[16:18:01] [main/INFO]: Found mod file lootr-1.18-0.1.13.40.jar of type MOD with locator {mods folder locator at /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/mods}
[16:18:01] [main/INFO]: Found mod file MagicalTorches-1.18.1-2.0.0.jar of type MOD with locator {mods folder locator at /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/mods}
[16:18:01] [main/INFO]: Found mod file mahoutsukai-1.18.1-v1.33.7.jar of type MOD with locator {mods folder locator at /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/mods}
[16:18:01] [main/INFO]: Found mod file mcjtylib-1.18-6.0.5.jar of type MOD with locator {mods folder locator at /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/mods}
[16:18:01] [main/INFO]: Found mod file mcw-bridges-2.0.1-mc1.18.1.jar of type MOD with locator {mods folder locator at /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/mods}
[16:18:01] [main/INFO]: Found mod file mcw-doors-1.0.5-mc1.18.1.jar of type MOD with locator {mods folder locator at /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/mods}
[16:18:01] [main/INFO]: Found mod file mcw-fences-1.0.2-mc1.18.1.jar of type MOD with locator {mods folder locator at /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/mods}
[16:18:01] [main/INFO]: Found mod file mcw-trapdoors-1.0.4-mc1.18.1.jar of type MOD with locator {mods folder locator at /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/mods}
[16:18:01] [main/INFO]: Found mod file mcw-windows-2.0.2-mc1.18.1.jar of type MOD with locator {mods folder locator at /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/mods}
[16:18:01] [main/INFO]: Found mod file minecolonies-1.18.1-1.0.278-RELEASE.jar of type MOD with locator {mods folder locator at /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/mods}
[16:18:01] [main/INFO]: Found mod file modnametooltip-1.18.1-1.18.0.jar of type MOD with locator {mods folder locator at /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/mods}
[16:18:01] [main/INFO]: Found mod file morevillagers-FORGE-1.18.1-3.1.1.jar of type MOD with locator {mods folder locator at /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/mods}
[16:18:01] [main/INFO]: Found mod file MouseTweaks-forge-mc1.18-2.21.jar of type MOD with locator {mods folder locator at /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/mods}
[16:18:01] [main/INFO]: Found mod file multi-piston-1.18-1.2.2-ALPHA.jar of type MOD with locator {mods folder locator at /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/mods}
[16:18:01] [main/INFO]: Found mod file MysticalAgradditions-1.18.1-5.0.2.jar of type MOD with locator {mods folder locator at /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/mods}
[16:18:01] [main/INFO]: Found mod file MysticalAgriculture-1.18.1-5.0.1.jar of type MOD with locator {mods folder locator at /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/mods}
[16:18:01] [main/INFO]: Found mod file NaturesCompass-1.18.1-1.9.4-forge.jar of type MOD with locator {mods folder locator at /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/mods}
[16:18:01] [main/INFO]: Found mod file netherportalfix-forge-1.18-9.0.0.jar of type MOD with locator {mods folder locator at /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/mods}
[16:18:01] [main/INFO]: Found mod file OreExcavation-1.10.159.jar of type MOD with locator {mods folder locator at /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/mods}
[16:18:01] [main/INFO]: Found mod file out_of_sight-1.18.1-1.0.1.jar of type MOD with locator {mods folder locator at /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/mods}
[16:18:01] [main/INFO]: Found mod file Patchouli-1.18.1-64.jar of type MOD with locator {mods folder locator at /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/mods}
[16:18:01] [main/INFO]: Found mod file Placebo-1.18.1-6.0.3.jar of type MOD with locator {mods folder locator at /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/mods}
[16:18:01] [main/INFO]: Found mod file polymorph-forge-1.18.1-0.35.jar of type MOD with locator {mods folder locator at /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/mods}
[16:18:01] [main/INFO]: Found mod file PuzzlesLib-v3.1.3-1.18.1-Forge.jar of type MOD with locator {mods folder locator at /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/mods}
[16:18:01] [main/INFO]: Found mod file Quark-3.0-334.jar of type MOD with locator {mods folder locator at /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/mods}
[16:18:01] [main/INFO]: Found mod file refinedpipes-0.6.0.jar of type MOD with locator {mods folder locator at /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/mods}
[16:18:01] [main/INFO]: Found mod file refinedstorage-1.10.0-beta.4.jar of type MOD with locator {mods folder locator at /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/mods}
[16:18:01] [main/INFO]: Found mod file refinedstorageaddons-0.8.1.jar of type MOD with locator {mods folder locator at /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/mods}
[16:18:01] [main/INFO]: Found mod file repurposed_structures_forge-4.1.0+1.18.1.jar of type MOD with locator {mods folder locator at /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/mods}
[16:18:01] [main/INFO]: Found mod file rftoolsbase-1.18-3.0.1.jar of type MOD with locator {mods folder locator at /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/mods}
[16:18:01] [main/INFO]: Found mod file rftoolspower-1.18-4.0.1.jar of type MOD with locator {mods folder locator at /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/mods}
[16:18:01] [main/INFO]: Found mod file rhino-forge-1800.1.7-build.92.jar of type MOD with locator {mods folder locator at /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/mods}
[16:18:01] [main/INFO]: Found mod file rsgauges-1.18.1-1.2.13-b1.jar of type MOD with locator {mods folder locator at /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/mods}
[16:18:01] [main/INFO]: Found mod file selene-1.18-1.11.jar of type MOD with locator {mods folder locator at /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/mods}
[16:18:01] [main/INFO]: Found mod file shetiphiancore-1.18-3.10.0.jar of type MOD with locator {mods folder locator at /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/mods}
[16:18:01] [main/INFO]: Found mod file silent-gear-1.18.1-2.8.3.jar of type MOD with locator {mods folder locator at /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/mods}
[16:18:01] [main/INFO]: Found mod file silent-lib-1.18-6.0.0.jar of type MOD with locator {mods folder locator at /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/mods}
[16:18:01] [main/INFO]: Found mod file silents-gems-1.18-4.2.0.jar of type MOD with locator {mods folder locator at /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/mods}
[16:18:01] [main/INFO]: Found mod file sit-1.18-1.3.1.jar of type MOD with locator {mods folder locator at /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/mods}
[16:18:01] [main/INFO]: Found mod file SoL-Carrot-1.18.1-1.12.0.jar of type MOD with locator {mods folder locator at /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/mods}
[16:18:01] [main/INFO]: Found mod file sophisticatedbackpacks-1.18.1-3.15.1.505.jar of type MOD with locator {mods folder locator at /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/mods}
[16:18:01] [main/INFO]: Found mod file StorageDrawers-1.18.1-10.1.0.jar of type MOD with locator {mods folder locator at /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/mods}
[16:18:01] [main/INFO]: Found mod file structurize-1.18.1-1.0.319-BETA.jar of type MOD with locator {mods folder locator at /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/mods}
[16:18:01] [main/INFO]: Found mod file supermartijn642corelib-1.0.16-mc1.18.jar of type MOD with locator {mods folder locator at /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/mods}
[16:18:01] [main/INFO]: Found mod file supplementaries-1.18.1-1.1.5.jar of type MOD with locator {mods folder locator at /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/mods}
[16:18:01] [main/INFO]: Found mod file swingthroughgrass-1.18.1-1.8.0.jar of type MOD with locator {mods folder locator at /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/mods}
[16:18:01] [main/INFO]: Found mod file TerraBlender-1.18.1-1.0.0.24-universal.jar of type MOD with locator {mods folder locator at /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/mods}
[16:18:01] [main/INFO]: Found mod file TerraForged-1.18.1-0.3.0-alpha-2.jar of type MOD with locator {mods folder locator at /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/mods}
[16:18:01] [main/INFO]: Found mod file theoneprobe-1.18-5.0.2.jar of type MOD with locator {mods folder locator at /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/mods}
[16:18:01] [main/INFO]: Found mod file ToastControl-1.18.1-6.0.0.jar of type MOD with locator {mods folder locator at /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/mods}
[16:18:01] [main/INFO]: Found mod file tombstone-7.3.3-1.18.jar of type MOD with locator {mods folder locator at /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/mods}
[16:18:01] [main/INFO]: Found mod file torchmaster-18.0.2-beta.jar of type MOD with locator {mods folder locator at /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/mods}
[16:18:01] [main/INFO]: Found mod file trashcans-1.0.12-mc1.18.jar of type MOD with locator {mods folder locator at /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/mods}
[16:18:01] [main/INFO]: Found mod file treasure-bags-1.18-1.6.0.jar of type MOD with locator {mods folder locator at /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/mods}
[16:18:01] [main/INFO]: Found mod file villagespawnpoint_1.18.1-1.9.jar of type MOD with locator {mods folder locator at /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/mods}
[16:18:01] [main/INFO]: Found mod file waystones-forge-1.18.1-9.0.1.jar of type MOD with locator {mods folder locator at /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/mods}
[16:18:01] [main/INFO]: Found mod file WitherSkeletonTweaks-1.18.1-7.0.1.jar of type MOD with locator {mods folder locator at /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/mods}
[16:18:01] [main/INFO]: Found mod file xnet-1.18-4.0.2.jar of type MOD with locator {mods folder locator at /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/mods}
[16:18:01] [main/INFO]: Found mod file fmlcore-1.18.1-39.0.10.jar of type LIBRARY with locator net.minecraftforge.fml.loading.moddiscovery.MinecraftLocator@58783f6c
[16:18:01] [main/INFO]: Found mod file javafmllanguage-1.18.1-39.0.10.jar of type LANGPROVIDER with locator net.minecraftforge.fml.loading.moddiscovery.MinecraftLocator@58783f6c
[16:18:01] [main/INFO]: Found mod file mclanguage-1.18.1-39.0.10.jar of type LANGPROVIDER with locator net.minecraftforge.fml.loading.moddiscovery.MinecraftLocator@58783f6c
[16:18:01] [main/INFO]: Found mod file client-1.18.1-20211210.034407-srg.jar of type MOD with locator net.minecraftforge.fml.loading.moddiscovery.MinecraftLocator@58783f6c
[16:18:01] [main/INFO]: Found mod file forge-1.18.1-39.0.10-universal.jar of type MOD with locator net.minecraftforge.fml.loading.moddiscovery.MinecraftLocator@58783f6c
[16:18:05] [main/INFO]: Compatibility level set to JAVA_17
[16:18:05] [main/INFO]: Successfully loaded Mixin Connector [shetiphian.endertanks.mixins.MixinConnector]
[16:18:05] [main/INFO]: Successfully loaded Mixin Connector [shetiphian.core.mixins.MixinConnector]
[16:18:05] [main/INFO]: Launching target 'forgeclient' with arguments [--version, forge-39.0.10, --gameDir, /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack, --assetsDir, /Users/matt/Documents/curseforge/minecraft/Install/assets, --uuid, 98b32eeccc264f65b3b57573eef3939e, --username, Keirtain, --assetIndex, 1.18, --accessToken, ❄❄❄❄❄❄❄❄, --clientId, QjRGOERBMkU5NEQ0NDYxNjgzNzgyQTlENTRGRTcxOUQ=, --xuid, , --userType, mojang, --versionType, release, --width, 1024, --height, 768]
[16:18:06] [main/WARN]: Reference map 'createdeco.refmap.json' for createdeco.mixins.json could not be read. If this is a development environment you can ignore this message
[16:18:06] [main/WARN]: Reference map 'croptopia.refmap.json' for croptopia.mixins.json could not be read. If this is a development environment you can ignore this message
[16:18:06] [main/WARN]: Reference map 'rhino-forge-refmap.json' for rhino.mixins.json could not be read. If this is a development environment you can ignore this message
[16:18:07] [main/INFO]: Patching ServerResources#<init>
[16:18:07] [main/WARN]: Error loading class: de/maxhenkel/gravestone/events/DeathEvents (java.lang.ClassNotFoundException: de.maxhenkel.gravestone.events.DeathEvents)
[16:18:07] [main/WARN]: Error loading class: de/maxhenkel/corpse/events/DeathEvents (java.lang.ClassNotFoundException: de.maxhenkel.corpse.events.DeathEvents)
[16:18:24] [Render thread/WARN]: Assets URL 'union:/Users/matt/Documents/curseforge/minecraft/Install/libraries/net/minecraft/client/1.18.1-20211210.034407/client-1.18.1-20211210.034407-srg.jar%23190!/assets/.mcassetsroot' uses unexpected schema
[16:18:24] [Render thread/WARN]: Assets URL 'union:/Users/matt/Documents/curseforge/minecraft/Install/libraries/net/minecraft/client/1.18.1-20211210.034407/client-1.18.1-20211210.034407-srg.jar%23190!/data/.mcassetsroot' uses unexpected schema
[16:18:24] [Render thread/INFO]: Environment: authHost='https://authserver.mojang.com', accountsHost='https://api.mojang.com', sessionHost='https://sessionserver.mojang.com', servicesHost='https://api.minecraftservices.com', name='PROD'
[16:18:27] [Render thread/INFO]: Setting user: Keirtain
[16:18:27] [Render thread/ERROR]: java.io.FileNotFoundException: File system element for parameter 'source' does not exist: '/Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/defaultoptions/servers.dat'
[16:18:27] [Render thread/INFO]: Backend library: LWJGL version 3.2.1 SNAPSHOT
[16:18:27] [Render thread/ERROR]: GLFW error collected during initialization: GLFW error during init: [0x10008]13052432640
[16:18:27] [Render thread/INFO]: Loaded client.properties
[16:18:29] [modloading-worker-0/INFO]: Environment:
[16:18:29] [modloading-worker-0/INFO]: - Dev:       false
[16:18:29] [modloading-worker-0/INFO]: - Profiling: false
[16:18:29] [modloading-worker-0/INFO]: - Unlimited: false
[16:18:29] [modloading-worker-0/INFO]: - Debugging: false
[16:18:29] [modloading-worker-0/INFO]: - Data Gen:  false
[16:18:29] [modloading-worker-0/INFO]: Gauges and Switches GIT id #eaa41e8.
[16:18:29] [modloading-worker-0/INFO]: - Cores:     10
[16:18:29] [modloading-worker-0/INFO]: Set TerraForged API: ForgeCommonAPI
[16:18:30] [modloading-worker-0/INFO]: Set TerraForged API: ForgeClientAPI
[16:18:31] [modloading-worker-0/WARN]: Config field without expected type, will not validate list content (disabledCompat in net.blay09.mods.kleeslabs.KleeSlabsConfigData)
[16:18:32] [modloading-worker-0/INFO]: Patching ServerResources#<init>
[16:18:34] [modloading-worker-0/INFO]: Loading Config
[16:18:35] [modloading-worker-0/INFO]: Found 1 RS API injection point
[16:18:35] [modloading-worker-0/INFO]: Injected RS API in com.refinedmods.refinedstorageaddons.RSAddons RSAPI
[16:18:35] [modloading-worker-0/WARN]: Config field without expected type, will not validate list content (torchItems in net.blay09.mods.clienttweaks.ClientTweaksConfigData$Customization)
[16:18:35] [modloading-worker-0/WARN]: Config field without expected type, will not validate list content (torchTools in net.blay09.mods.clienttweaks.ClientTweaksConfigData$Customization)
[16:18:35] [modloading-worker-0/WARN]: Config field without expected type, will not validate list content (offhandTorchTools in net.blay09.mods.clienttweaks.ClientTweaksConfigData$Customization)
[16:18:35] [modloading-worker-0/WARN]: Config field without expected type, will not validate list content (shieldWeapons in net.blay09.mods.clienttweaks.ClientTweaksConfigData$Customization)
[16:18:35] [modloading-worker-0/WARN]: Config field without expected type, will not validate list content (leashedDenyList in net.blay09.mods.waystones.config.WaystonesConfigData$Restrictions)
[16:18:35] [modloading-worker-0/WARN]: Config field without expected type, will not validate list content (dimensionalWarpAllowList in net.blay09.mods.waystones.config.WaystonesConfigData$Restrictions)
[16:18:35] [modloading-worker-0/WARN]: Config field without expected type, will not validate list content (dimensionalWarpDenyList in net.blay09.mods.waystones.config.WaystonesConfigData$Restrictions)
[16:18:35] [modloading-worker-0/WARN]: Config field without expected type, will not validate list content (dimensionAllowList in net.blay09.mods.waystones.config.WaystonesConfigData$WorldGen)
[16:18:35] [modloading-worker-0/WARN]: Config field without expected type, will not validate list content (dimensionDenyList in net.blay09.mods.waystones.config.WaystonesConfigData$WorldGen)
[16:18:35] [modloading-worker-0/WARN]: Config field without expected type, will not validate list content (customWaystoneNames in net.blay09.mods.waystones.config.WaystonesConfigData$WorldGen)
[16:18:35] [modloading-worker-0/INFO]: Here we go! Launching Dungeon Crawl 2.3.6...
[16:18:35] [modloading-worker-0/WARN]: Config field without expected type, will not validate list content (merchantNames in net.blay09.mods.farmingforblockheads.FarmingForBlockheadsConfigData)
[16:18:35] [modloading-worker-0/INFO]: 14 blocks registered.
[16:18:35] [modloading-worker-0/INFO]: 29 items registered.
[16:18:35] [modloading-worker-0/INFO]: 13 tiles registered.
[16:18:35] [modloading-worker-0/INFO]: 13 containers registered.
[16:18:35] [modloading-worker-0/INFO]: Looking for KubeJS plugins...
[16:18:35] [modloading-worker-0/INFO]: Forge mod loading, version 39.0.10, for MC 1.18.1 with MCP 20211210.034407
[16:18:35] [modloading-worker-0/INFO]: MinecraftForge v39.0.10 Initialized
[16:18:35] [modloading-worker-0/INFO]: Found kubejs plugin
[16:18:35] [modloading-worker-0/INFO]: Loaded config file.
[16:18:35] [modloading-worker-0/INFO]: Saved config file.
[16:18:35] [modloading-worker-0/INFO]: Found ftbchunks plugin
[16:18:35] [modloading-worker-0/INFO]: Found ftbquests plugin
[16:18:35] [modloading-worker-0/INFO]: Found kubejs_create plugin
[16:18:35] [modloading-worker-0/INFO]: Found kubejs_immersive_engineering plugin
[16:18:35] [modloading-worker-0/INFO]: Done in 0 s
[16:18:35] [modloading-worker-0/INFO]: Optifine not detected.
[16:18:35] [modloading-worker-0/INFO]: Loaded common.properties
[16:18:35] [modloading-worker-0/INFO]: Detected new forge version, registering events reflectively.
[16:18:35] [modloading-worker-0/INFO]: Registered plugin: com.blakebr0.mysticalagriculture.lib.ModCorePlugin
[16:18:36] [modloading-worker-0/INFO]: Registered plugin: com.github.elrol.industrialagriculture.init.IAMysticalAgricultrePlugin
[16:18:36] [modloading-worker-0/INFO]: Successfully loaded com.jozufozu.flywheel.mixin.PausedPartialTickAccessor
[16:18:36] [modloading-worker-0/INFO]: Registered plugin: com.blakebr0.mysticalagradditions.lib.ModCorePlugin
[16:18:36] [modloading-worker-0/INFO]: Detected new forge version, registering events reflectively.
[16:18:36] [modloading-worker-0/INFO]: ExpandAbility here, who dis?
[16:18:36] [modloading-worker-0/INFO]: Registered condition serializer 'silentgear:not'
[16:18:36] [modloading-worker-0/INFO]: Registered condition serializer 'silentgear:and'
[16:18:36] [modloading-worker-0/INFO]: Registered condition serializer 'silentgear:or'
[16:18:36] [modloading-worker-0/INFO]: Registered condition serializer 'silentgear:gear_type'
[16:18:36] [modloading-worker-0/INFO]: Registered condition serializer 'silentgear:material_count'
[16:18:36] [modloading-worker-0/INFO]: Registered condition serializer 'silentgear:material_ratio'
[16:18:36] [modloading-worker-0/INFO]: Registered serializer 'silentgear:simple_trait'
[16:18:36] [modloading-worker-0/INFO]: Registered serializer 'silentgear:damage_type'
[16:18:36] [modloading-worker-0/INFO]: Registered serializer 'silentgear:durability'
[16:18:36] [modloading-worker-0/INFO]: Registered serializer 'silentgear:enchantment'
[16:18:36] [modloading-worker-0/INFO]: Registered serializer 'silentgear:nbt'
[16:18:36] [modloading-worker-0/INFO]: Registered serializer 'silentgear:wielder_effect'
[16:18:36] [modloading-worker-0/INFO]: Registered serializer 'silentgear:stat_modifier'
[16:18:36] [modloading-worker-0/INFO]: Registered serializer 'silentgear:attribute'
[16:18:36] [modloading-worker-0/INFO]: Registered serializer 'silentgear:block_placer'
[16:18:36] [modloading-worker-0/INFO]: Registered serializer 'silentgear:block_filler'
[16:18:36] [modloading-worker-0/INFO]: Registered serializer 'silentgear:synergy'
[16:18:36] [modloading-worker-0/INFO]: Registered serializer 'silentgear:target_effect'
[16:18:36] [modloading-worker-0/INFO]: Registered serializer 'silentgear:bonus_drops'
[16:18:36] [modloading-worker-0/INFO]: Registered serializer 'silentgear:cancel_effects'
[16:18:36] [modloading-worker-0/INFO]: Registered serializer 'silentgear:self_repair'
[16:18:36] [modloading-worker-0/INFO]: Registered serializer 'silentgear:stellar'
[16:18:36] [modloading-worker-0/INFO]: Registered serializer 'silentgems:critical_strike'
[16:18:36] [modloading-worker-0/INFO]: Hello, World! (You will only see this line once in console, during startup)
[16:18:36] [modloading-worker-0/INFO]: Loaded script startup_scripts:script.js in 0.154 s
[16:18:36] [modloading-worker-0/INFO]: Loaded 1/1 KubeJS startup scripts in 0.661 s
[16:18:37] [modloading-worker-0/INFO]: Hello, World! (You will see this line every time client resources reload)
[16:18:37] [modloading-worker-0/INFO]: Loaded script client_scripts:script.js in 0.005 s
[16:18:37] [modloading-worker-0/INFO]: Loaded 1/1 KubeJS client scripts in 0.03 s
[16:18:38] [Render thread/INFO]: Potentially Dangerous alternative prefix `minecraft` for name `spawner`, expected `apotheosis`. This could be a intended override, but in most cases indicates a broken mod.
[16:18:38] [Render thread/INFO]: Potentially Dangerous alternative prefix `minecraft` for name `spawner`, expected `apotheosis`. This could be a intended override, but in most cases indicates a broken mod.
[16:18:38] [Render thread/INFO]: Potentially Dangerous alternative prefix `minecraft` for name `cactus`, expected `apotheosis`. This could be a intended override, but in most cases indicates a broken mod.
[16:18:38] [Render thread/INFO]: Potentially Dangerous alternative prefix `minecraft` for name `cactus`, expected `apotheosis`. This could be a intended override, but in most cases indicates a broken mod.
[16:18:38] [Render thread/INFO]: Potentially Dangerous alternative prefix `minecraft` for name `sugar_cane`, expected `apotheosis`. This could be a intended override, but in most cases indicates a broken mod.
[16:18:38] [Render thread/INFO]: Potentially Dangerous alternative prefix `minecraft` for name `sugar_cane`, expected `apotheosis`. This could be a intended override, but in most cases indicates a broken mod.
[16:18:38] [Render thread/INFO]: Potentially Dangerous alternative prefix `minecraft` for name `bamboo`, expected `apotheosis`. This could be a intended override, but in most cases indicates a broken mod.
[16:18:38] [Render thread/INFO]: Potentially Dangerous alternative prefix `minecraft` for name `bamboo`, expected `apotheosis`. This could be a intended override, but in most cases indicates a broken mod.
[16:18:38] [Render thread/INFO]: Potentially Dangerous alternative prefix `minecraft` for name `fletching_table`, expected `apotheosis`. This could be a intended override, but in most cases indicates a broken mod.
[16:18:38] [Render thread/INFO]: Potentially Dangerous alternative prefix `minecraft` for name `fletching_table`, expected `apotheosis`. This could be a intended override, but in most cases indicates a broken mod.
[16:18:39] [Render thread/INFO]: blocks registering
[16:18:39] [Render thread/INFO]: finished blocks registering
[16:18:40] [Render thread/INFO]: Updating Crops
[16:18:40] [Render thread/INFO]: panda = com.blakebr0.mysticalagriculture.api.crop.Crop@76bd03be. Has been registered
[16:18:40] [Render thread/INFO]: ravager = com.blakebr0.mysticalagriculture.api.crop.Crop@411e16d. Has been registered
[16:18:40] [Render thread/INFO]: classic_set = com.blakebr0.mysticalagriculture.api.crop.Crop@1aecb796. Has been registered
[16:18:40] [Render thread/INFO]: fox = com.blakebr0.mysticalagriculture.api.crop.Crop@7ece6588. Has been registered
[16:18:40] [Render thread/INFO]: magma_cube = com.blakebr0.mysticalagriculture.api.crop.Crop@60f0391c. Has been registered
[16:18:40] [Render thread/INFO]: pillager = com.blakebr0.mysticalagriculture.api.crop.Crop@6be1b6e6. Has been registered
[16:18:40] [Render thread/INFO]: llama = com.blakebr0.mysticalagriculture.api.crop.Crop@144efc0b. Has been registered
[16:18:40] [Render thread/INFO]: bat = com.blakebr0.mysticalagriculture.api.crop.Crop@19a1392f. Has been registered
[16:18:40] [Render thread/INFO]: husk = com.blakebr0.mysticalagriculture.api.crop.Crop@78f8dbde. Has been registered
[16:18:40] [Render thread/INFO]: zombified_piglin = com.blakebr0.mysticalagriculture.api.crop.Crop@1e4804a1. Has been registered
[16:18:40] [Render thread/INFO]: piglin = com.blakebr0.mysticalagriculture.api.crop.Crop@7d851dc7. Has been registered
[16:18:40] [Render thread/INFO]: endermite = com.blakebr0.mysticalagriculture.api.crop.Crop@6dfd2b19. Has been registered
[16:18:40] [Render thread/INFO]: cat = com.blakebr0.mysticalagriculture.api.crop.Crop@53653b53. Has been registered
[16:18:40] [Render thread/INFO]: silverfish = com.blakebr0.mysticalagriculture.api.crop.Crop@dd65092. Has been registered
[16:18:40] [Render thread/INFO]: drowned = com.blakebr0.mysticalagriculture.api.crop.Crop@58680fca. Has been registered
[16:18:40] [Render thread/INFO]: guardian = com.blakebr0.mysticalagriculture.api.crop.Crop@5cc9423d. Has been registered
[16:18:40] [Render thread/INFO]: dolphin = com.blakebr0.mysticalagriculture.api.crop.Crop@260c5554. Has been registered
[16:18:40] [Render thread/INFO]: stray = com.blakebr0.mysticalagriculture.api.crop.Crop@1961c3c7. Has been registered
[16:18:40] [Render thread/INFO]: shulker = com.blakebr0.mysticalagriculture.api.crop.Crop@16f897e. Has been registered
[16:18:40] [Render thread/INFO]: wolf = com.blakebr0.mysticalagriculture.api.crop.Crop@17a1fbc4. Has been registered
[16:18:40] [Render thread/INFO]: villager = com.blakebr0.mysticalagriculture.api.crop.Crop@5343aa91. Has been registered
[16:18:40] [Render thread/INFO]: vex = com.blakebr0.mysticalagriculture.api.crop.Crop@442b24c5. Has been registered
[16:18:40] [Render thread/INFO]: piglin_brute = com.blakebr0.mysticalagriculture.api.crop.Crop@39727147. Has been registered
[16:18:40] [Render thread/INFO]: polar_bear = com.blakebr0.mysticalagriculture.api.crop.Crop@2115d276. Has been registered
[16:18:40] [Render thread/INFO]: horse = com.blakebr0.mysticalagriculture.api.crop.Crop@6f4ce3e7. Has been registered
[16:18:40] [Render thread/INFO]: vindicator = com.blakebr0.mysticalagriculture.api.crop.Crop@725cefc7. Has been registered
[16:18:40] [Render thread/INFO]: phantom = com.blakebr0.mysticalagriculture.api.crop.Crop@580e5082. Has been registered
[16:18:40] [Render thread/INFO]: evoker = com.blakebr0.mysticalagriculture.api.crop.Crop@5707af97. Has been registered
[16:18:40] [Render thread/INFO]: mooshroom = com.blakebr0.mysticalagriculture.api.crop.Crop@5f5c2d4b. Has been registered
[16:18:40] [Render thread/INFO]: witch = com.blakebr0.mysticalagriculture.api.crop.Crop@4aebd3b0. Has been registered
[16:18:40] [Render thread/INFO]: parrot = com.blakebr0.mysticalagriculture.api.crop.Crop@60cb002f. Has been registered
[16:18:40] [Render thread/WARN]: Registry minecraft:item: The object debug has been registered twice for the same name citadel:debug.
[16:18:40] [Render thread/WARN]: Registry minecraft:item: The object citadel_book has been registered twice for the same name citadel:citadel_book.
[16:18:40] [Render thread/WARN]: Registry minecraft:item: The object effect_item has been registered twice for the same name citadel:effect_item.
[16:18:40] [Render thread/WARN]: Registry minecraft:item: The object fancy_item has been registered twice for the same name citadel:fancy_item.
[16:18:41] [Render thread/INFO]: Potentially Dangerous alternative prefix `minecraft` for name `shulker_shell`, expected `supplementaries`. This could be a intended override, but in most cases indicates a broken mod.
[16:18:41] [Render thread/INFO]: items registering
[16:18:41] [Render thread/INFO]: finished items registering
[16:18:41] [Render thread/INFO]: Potentially Dangerous alternative prefix `minecraft` for name `white_wool`, expected `doggytalents`. This could be a intended override, but in most cases indicates a broken mod.
[16:18:41] [Render thread/INFO]: Potentially Dangerous alternative prefix `minecraft` for name `orange_wool`, expected `doggytalents`. This could be a intended override, but in most cases indicates a broken mod.
[16:18:41] [Render thread/INFO]: Potentially Dangerous alternative prefix `minecraft` for name `magenta_wool`, expected `doggytalents`. This could be a intended override, but in most cases indicates a broken mod.
[16:18:41] [Render thread/INFO]: Potentially Dangerous alternative prefix `minecraft` for name `light_blue_wool`, expected `doggytalents`. This could be a intended override, but in most cases indicates a broken mod.
[16:18:41] [Render thread/INFO]: Potentially Dangerous alternative prefix `minecraft` for name `yellow_wool`, expected `doggytalents`. This could be a intended override, but in most cases indicates a broken mod.
[16:18:41] [Render thread/INFO]: Potentially Dangerous alternative prefix `minecraft` for name `lime_wool`, expected `doggytalents`. This could be a intended override, but in most cases indicates a broken mod.
[16:18:41] [Render thread/INFO]: Potentially Dangerous alternative prefix `minecraft` for name `pink_wool`, expected `doggytalents`. This could be a intended override, but in most cases indicates a broken mod.
[16:18:41] [Render thread/INFO]: Potentially Dangerous alternative prefix `minecraft` for name `gray_wool`, expected `doggytalents`. This could be a intended override, but in most cases indicates a broken mod.
[16:18:41] [Render thread/INFO]: Potentially Dangerous alternative prefix `minecraft` for name `light_gray_wool`, expected `doggytalents`. This could be a intended override, but in most cases indicates a broken mod.
[16:18:41] [Render thread/INFO]: Potentially Dangerous alternative prefix `minecraft` for name `cyan_wool`, expected `doggytalents`. This could be a intended override, but in most cases indicates a broken mod.
[16:18:41] [Render thread/INFO]: Potentially Dangerous alternative prefix `minecraft` for name `purple_wool`, expected `doggytalents`. This could be a intended override, but in most cases indicates a broken mod.
[16:18:41] [Render thread/INFO]: Potentially Dangerous alternative prefix `minecraft` for name `blue_wool`, expected `doggytalents`. This could be a intended override, but in most cases indicates a broken mod.
[16:18:41] [Render thread/INFO]: Potentially Dangerous alternative prefix `minecraft` for name `brown_wool`, expected `doggytalents`. This could be a intended override, but in most cases indicates a broken mod.
[16:18:41] [Render thread/INFO]: Potentially Dangerous alternative prefix `minecraft` for name `green_wool`, expected `doggytalents`. This could be a intended override, but in most cases indicates a broken mod.
[16:18:41] [Render thread/INFO]: Potentially Dangerous alternative prefix `minecraft` for name `red_wool`, expected `doggytalents`. This could be a intended override, but in most cases indicates a broken mod.
[16:18:41] [Render thread/INFO]: Potentially Dangerous alternative prefix `minecraft` for name `black_wool`, expected `doggytalents`. This could be a intended override, but in most cases indicates a broken mod.
[16:18:41] [Render thread/INFO]: Potentially Dangerous alternative prefix `minecraft` for name `oak_planks`, expected `doggytalents`. This could be a intended override, but in most cases indicates a broken mod.
[16:18:41] [Render thread/INFO]: Potentially Dangerous alternative prefix `minecraft` for name `spruce_planks`, expected `doggytalents`. This could be a intended override, but in most cases indicates a broken mod.
[16:18:41] [Render thread/INFO]: Potentially Dangerous alternative prefix `minecraft` for name `birch_planks`, expected `doggytalents`. This could be a intended override, but in most cases indicates a broken mod.
[16:18:41] [Render thread/INFO]: Potentially Dangerous alternative prefix `minecraft` for name `jungle_planks`, expected `doggytalents`. This could be a intended override, but in most cases indicates a broken mod.
[16:18:41] [Render thread/INFO]: Potentially Dangerous alternative prefix `minecraft` for name `acacia_planks`, expected `doggytalents`. This could be a intended override, but in most cases indicates a broken mod.
[16:18:41] [Render thread/INFO]: Potentially Dangerous alternative prefix `minecraft` for name `dark_oak_planks`, expected `doggytalents`. This could be a intended override, but in most cases indicates a broken mod.
[16:18:41] [Render thread/INFO]: Potentially Dangerous alternative prefix `minecraft` for name `crimson_planks`, expected `doggytalents`. This could be a intended override, but in most cases indicates a broken mod.
[16:18:41] [Render thread/INFO]: Potentially Dangerous alternative prefix `minecraft` for name `warped_planks`, expected `doggytalents`. This could be a intended override, but in most cases indicates a broken mod.
[16:18:41] [Render thread/INFO]: Potentially Dangerous alternative prefix `biomesoplenty` for name `cherry_planks`, expected `doggytalents`. This could be a intended override, but in most cases indicates a broken mod.
[16:18:41] [Render thread/INFO]: Potentially Dangerous alternative prefix `biomesoplenty` for name `umbran_planks`, expected `doggytalents`. This could be a intended override, but in most cases indicates a broken mod.
[16:18:41] [Render thread/INFO]: Potentially Dangerous alternative prefix `biomesoplenty` for name `fir_planks`, expected `doggytalents`. This could be a intended override, but in most cases indicates a broken mod.
[16:18:41] [Render thread/INFO]: Potentially Dangerous alternative prefix `biomesoplenty` for name `dead_planks`, expected `doggytalents`. This could be a intended override, but in most cases indicates a broken mod.
[16:18:41] [Render thread/INFO]: Potentially Dangerous alternative prefix `biomesoplenty` for name `magic_planks`, expected `doggytalents`. This could be a intended override, but in most cases indicates a broken mod.
[16:18:41] [Render thread/INFO]: Potentially Dangerous alternative prefix `biomesoplenty` for name `palm_planks`, expected `doggytalents`. This could be a intended override, but in most cases indicates a broken mod.
[16:18:41] [Render thread/INFO]: Potentially Dangerous alternative prefix `biomesoplenty` for name `redwood_planks`, expected `doggytalents`. This could be a intended override, but in most cases indicates a broken mod.
[16:18:41] [Render thread/INFO]: Potentially Dangerous alternative prefix `biomesoplenty` for name `willow_planks`, expected `doggytalents`. This could be a intended override, but in most cases indicates a broken mod.
[16:18:41] [Render thread/INFO]: Potentially Dangerous alternative prefix `biomesoplenty` for name `hellbark_planks`, expected `doggytalents`. This could be a intended override, but in most cases indicates a broken mod.
[16:18:41] [Render thread/INFO]: Potentially Dangerous alternative prefix `biomesoplenty` for name `jacaranda_planks`, expected `doggytalents`. This could be a intended override, but in most cases indicates a broken mod.
[16:18:41] [Render thread/INFO]: Potentially Dangerous alternative prefix `biomesoplenty` for name `mahogany_planks`, expected `doggytalents`. This could be a intended override, but in most cases indicates a broken mod.
[16:18:41] [Render thread/INFO]: Potentially Dangerous alternative prefix `minecraft` for name `milk`, expected `forge`. This could be a intended override, but in most cases indicates a broken mod.
[16:18:41] [Render thread/INFO]: Potentially Dangerous alternative prefix `minecraft` for name `flowing_milk`, expected `forge`. This could be a intended override, but in most cases indicates a broken mod.
[16:18:42] [Render thread/INFO]: loaded in item colorizer
[16:18:42] [Render thread/INFO]: Registered material modifier silentgear:grade
[16:18:42] [Render thread/INFO]: Registered material modifier silentgear:starcharged
[16:18:43] [Render thread/ERROR]: Error while loading the narrator : java.lang.NoClassDefFoundError: com/sun/jna/PointerTool
[16:18:43] [Render thread/INFO]: Registering model layer quark:crab#main
[16:18:43] [Render thread/INFO]: Registering model layer quark:shiba#main
[16:18:43] [Render thread/INFO]: Registering model layer quark:frog#main
[16:18:43] [Render thread/INFO]: Registering model layer quark:wraith#main
[16:18:43] [Render thread/INFO]: Registering model layer quark:forgotten_hat#main
[16:18:43] [Render thread/INFO]: Registering model layer quark:stoneling#main
[16:18:43] [Render thread/INFO]: Registering model layer quark:toretoise#main
[16:18:43] [Render thread/INFO]: Registering model layer quark:foxhound#main
[16:18:43] [Render thread/INFO]: Registering model layer quark:backpack#main
[16:18:44] [Render thread/INFO]: Reloading ResourceManager: Default, Mod Resources, quark-emote-pack, KubeJS Resource Pack [assets]
[16:18:44] [modloading-worker-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:18:44] [modloading-worker-0/WARN]: Incorrect key noAdvancementBooks was corrected from [] to its default, []. 
[16:18:44] [modloading-worker-0/INFO]: Loading client config for easymagic
[16:18:45] [Worker-Main-14/INFO]: Reloading material model files
[16:18:46] [modloading-worker-0/INFO]: Loading Module Redstone Randomizer
[16:18:46] [modloading-worker-0/INFO]: Loading Module Pistons Move Tile Entities
[16:18:46] [modloading-worker-0/INFO]: Loading Module Obsidian Plate
[16:18:46] [modloading-worker-0/INFO]: Loading Module Metal Buttons
[16:18:46] [modloading-worker-0/INFO]: Loading Module Jukebox Automation
[16:18:46] [modloading-worker-0/INFO]: Loading Module Iron Rod
[16:18:46] [modloading-worker-0/INFO]: Loading Module Gravisand
[16:18:46] [modloading-worker-0/INFO]: Loading Module Feeding Trough
[16:18:46] [modloading-worker-0/INFO]: Loading Module Ender Watcher
[16:18:46] [modloading-worker-0/INFO]: Loading Module Dispensers Place Blocks
[16:18:46] [modloading-worker-0/INFO]: Loading Module Chute
[16:18:46] [modloading-worker-0/INFO]: Loading Module Chains Connect Blocks
[16:18:46] [modloading-worker-0/INFO]: Loading Module Wooden Posts
[16:18:46] [modloading-worker-0/INFO]: Loading Module Vertical Slabs
[16:18:46] [modloading-worker-0/INFO]: Loading Module Variant Ladders
[16:18:46] [modloading-worker-0/INFO]: Loading Module Variant Furnaces
[16:18:46] [modloading-worker-0/INFO]: Loading Module Variant Chests
[16:18:46] [modloading-worker-0/INFO]: Loading Module Variant Bookshelves
[16:18:46] [modloading-worker-0/INFO]: Loading Module Thatch
[16:18:46] [modloading-worker-0/INFO]: Loading Module Sturdy Stone
[16:18:46] [modloading-worker-0/INFO]: Loading Module Stools
[16:18:46] [modloading-worker-0/INFO]: Loading Module Soul Sandstone
[16:18:46] [modloading-worker-0/INFO]: Loading Module Shingles
[16:18:46] [modloading-worker-0/INFO]: Loading Module Shear Vines
[16:18:46] [modloading-worker-0/INFO]: Loading Module Rope
[16:18:46] [modloading-worker-0/INFO]: Loading Module Oriental Palette
[16:18:46] [modloading-worker-0/INFO]: Loading Module Nether Brick Fence Gate
[16:18:46] [modloading-worker-0/INFO]: Loading Module More Stone Variants
[16:18:46] [modloading-worker-0/INFO]: Loading Module More Potted Plants
[16:18:46] [modloading-worker-0/INFO]: Loading Module More Brick Types
[16:18:46] [modloading-worker-0/INFO]: Loading Module Midori
[16:18:46] [modloading-worker-0/INFO]: Loading Module Leaf Carpet
[16:18:46] [modloading-worker-0/INFO]: Loading Module Industrial Palette
[16:18:46] [modloading-worker-0/INFO]: Loading Module Hedges
[16:18:46] [modloading-worker-0/INFO]: Loading Module Grate
[16:18:46] [modloading-worker-0/INFO]: Loading Module Gold Bars
[16:18:46] [modloading-worker-0/INFO]: Loading Module Glass Item Frame
[16:18:46] [modloading-worker-0/INFO]: Loading Module Framed Glass
[16:18:46] [modloading-worker-0/INFO]: Loading Module Duskbound Blocks
[16:18:46] [modloading-worker-0/INFO]: Loading Module Compressed Blocks
[16:18:46] [modloading-worker-0/INFO]: Loading Module Celebratory Lamps
[16:18:46] [modloading-worker-0/INFO]: Loading Module Item Sharing
[16:18:46] [modloading-worker-0/INFO]: Loading Module Inventory Sorting
[16:18:46] [modloading-worker-0/INFO]: Loading Module Hotbar Changer
[16:18:46] [modloading-worker-0/INFO]: Loading Module Expanded Item Interactions
[16:18:46] [modloading-worker-0/INFO]: Loading Module Easy Transfering
[16:18:46] [modloading-worker-0/INFO]: Loading Module Chests In Boats
[16:18:46] [modloading-worker-0/INFO]: Loading Module Trowel
[16:18:46] [modloading-worker-0/INFO]: Loading Module Slime In A Bucket
[16:18:46] [modloading-worker-0/INFO]: Loading Module Seed Pouch
[16:18:46] [modloading-worker-0/INFO]: Loading Module Pickarang
[16:18:46] [modloading-worker-0/INFO]: Loading Module Pathfinder Maps
[16:18:46] [modloading-worker-0/INFO]: Loading Module Endermosh Music Disc
[16:18:46] [modloading-worker-0/INFO]: Loading Module Color Runes
[16:18:46] [modloading-worker-0/INFO]: Loading Module Camera
[16:18:46] [modloading-worker-0/INFO]: Loading Module Bundle Recipe
[16:18:46] [modloading-worker-0/INFO]: Loading Module Bottled Cloud
[16:18:46] [modloading-worker-0/INFO]: Loading Module Beacon Redirection
[16:18:46] [modloading-worker-0/INFO]: Loading Module Ancient Tomes
[16:18:46] [modloading-worker-0/INFO]: Loading Module Ambient Discs
[16:18:46] [modloading-worker-0/INFO]: Loading Module Abacus
[16:18:46] [modloading-worker-0/INFO]: Loading Module Villagers Follow Emeralds
[16:18:46] [modloading-worker-0/INFO]: Loading Module Utility Recipes
[16:18:46] [modloading-worker-0/INFO]: Loading Module Snow Golem Player Heads
[16:18:46] [modloading-worker-0/INFO]: Loading Module Simple Harvest
[16:18:46] [modloading-worker-0/INFO]: Loading Module Sign Editing
[16:18:46] [modloading-worker-0/INFO]: Loading Module Replace Scaffolding
[16:18:46] [modloading-worker-0/INFO]: Loading Module Reacharound Placing
[16:18:46] [modloading-worker-0/INFO]: Loading Module Poison Potato Usage
[16:18:46] [modloading-worker-0/INFO]: Loading Module Pat The Dogs
[16:18:46] [modloading-worker-0/INFO]: Loading Module Note Block Mob Sounds
[16:18:46] [modloading-worker-0/INFO]: Loading Module More Banner Layers
[16:18:46] [modloading-worker-0/INFO]: Loading Module Lock Rotation
[16:18:46] [modloading-worker-0/INFO]: Loading Module Hoe Harvesting
[16:18:46] [modloading-worker-0/INFO]: Loading Module Glass Shard
[16:18:46] [modloading-worker-0/INFO]: Loading Module Enhanced Ladders
[16:18:46] [modloading-worker-0/INFO]: Loading Module Emotes
[16:18:46] [modloading-worker-0/INFO]: Loading Module Dragon Scales
[16:18:46] [modloading-worker-0/INFO]: Loading Module Double Door Opening
[16:18:46] [modloading-worker-0/INFO]: Loading Module Compasses Work Everywhere
[16:18:46] [modloading-worker-0/INFO]: Loading Module Campfires Boost Elytra
[16:18:46] [modloading-worker-0/INFO]: Loading Module Better Elytra Rocket
[16:18:46] [modloading-worker-0/INFO]: Loading Module Automatic Recipe Unlock
[16:18:46] [modloading-worker-0/INFO]: Loading Module Armed Armor Stands
[16:18:46] [modloading-worker-0/INFO]: Loading Module Skull Pikes
[16:18:46] [modloading-worker-0/INFO]: Loading Module Spiral Spires
[16:18:46] [modloading-worker-0/INFO]: Loading Module Permafrost
[16:18:46] [modloading-worker-0/INFO]: Loading Module New Stone Types
[16:18:46] [modloading-worker-0/INFO]: Loading Module Nether Obsidian Spikes
[16:18:46] [modloading-worker-0/INFO]: Loading Module Monster Box
[16:18:46] [modloading-worker-0/INFO]: Loading Module Fairy Rings
[16:18:46] [modloading-worker-0/INFO]: Loading Module Corundum
[16:18:46] [modloading-worker-0/INFO]: Loading Module Chorus Vegetation
[16:18:46] [modloading-worker-0/INFO]: Loading Module Blossom Trees
[16:18:46] [modloading-worker-0/INFO]: Loading Module Big Stone Clusters
[16:18:46] [modloading-worker-0/INFO]: Loading Module Big Dungeon
[16:18:46] [modloading-worker-0/INFO]: Loading Module Wraith
[16:18:46] [modloading-worker-0/INFO]: Loading Module Toretoise
[16:18:46] [modloading-worker-0/INFO]: Loading Module Stonelings
[16:18:46] [modloading-worker-0/INFO]: Loading Module Shiba
[16:18:46] [modloading-worker-0/INFO]: Loading Module Frogs
[16:18:46] [modloading-worker-0/INFO]: Loading Module Foxhound
[16:18:46] [modloading-worker-0/INFO]: Loading Module Forgotten
[16:18:46] [modloading-worker-0/INFO]: Loading Module Crabs
[16:18:46] [modloading-worker-0/INFO]: Loading Module Variant Animal Textures
[16:18:46] [modloading-worker-0/INFO]: Loading Module Usage Ticker
[16:18:46] [modloading-worker-0/INFO]: Loading Module Microcrafting Helper
[16:18:46] [modloading-worker-0/INFO]: Loading Module Improved Tooltips
[16:18:46] [modloading-worker-0/INFO]: Loading Module Greener Grass
[16:18:46] [modloading-worker-0/INFO]: Loading Module Chest Searching
[16:18:46] [modloading-worker-0/INFO]: Loading Module Back Button Keybind
[16:18:46] [modloading-worker-0/INFO]: Loading Module Auto Walk Keybind
[16:18:46] [modloading-worker-0/INFO]: Loading Module Overlay Shader
[16:18:46] [modloading-worker-0/INFO]: Loading Module Narrator Readout
[16:18:46] [modloading-worker-0/INFO]: Loading Module Game Nerfs
[16:18:46] [modloading-worker-0/INFO]: Loading Module Adjustable Chat
[16:18:46] [modloading-worker-0/INFO]: Loading Module Totem Of Holding
[16:18:46] [modloading-worker-0/INFO]: Loading Module Pipes
[16:18:46] [modloading-worker-0/INFO]: Loading Module Matrix Enchanting
[16:18:46] [modloading-worker-0/INFO]: Loading Module Magnets
[16:18:46] [modloading-worker-0/INFO]: Loading Module Crate
[16:18:46] [modloading-worker-0/INFO]: Loading Module Backpack
[16:18:47] [Worker-Main-14/INFO]: Reloading part model files
[16:18:47] [Worker-Main-14/INFO]: Found custom dog skin at doggytalents:textures/entity/dog/custom/doggytex0.png with hash bad647ebc2ac822563eaedaa3cb64881d8d7fd24
[16:18:47] [Worker-Main-14/INFO]: Found custom dog skin at doggytalents:textures/entity/dog/custom/doggytex1.png with hash c22b2f6d7a902c13d2f9c377f360127b6ae2dd65
[16:18:47] [Worker-Main-14/INFO]: Found custom dog skin at doggytalents:textures/entity/dog/custom/doggytex10.png with hash 9846a3d8b29589e2ed125b5ce8b8fe398ee4b389
[16:18:47] [Worker-Main-14/INFO]: Found custom dog skin at doggytalents:textures/entity/dog/custom/doggytex11.png with hash 62b05471528c8268c5de6ec514ba801eea812e99
[16:18:47] [Worker-Main-14/INFO]: Found custom dog skin at doggytalents:textures/entity/dog/custom/doggytex12.png with hash 9a6c7833aebe88d09e2c4807cf9ab7b2107ce23b
[16:18:47] [Worker-Main-14/INFO]: Found custom dog skin at doggytalents:textures/entity/dog/custom/doggytex13.png with hash b4b0b25d37c7790b886e5feafcc794e13d801d2f
[16:18:47] [Worker-Main-14/INFO]: Found custom dog skin at doggytalents:textures/entity/dog/custom/doggytex14.png with hash 08bf1e51a9a64e1b82518360c05fddd711ba0071
[16:18:47] [Worker-Main-14/INFO]: Found custom dog skin at doggytalents:textures/entity/dog/custom/doggytex15.png with hash 3390dbaac3719895fd14386b52105b69ca59b8eb
[16:18:47] [Worker-Main-14/INFO]: Found custom dog skin at doggytalents:textures/entity/dog/custom/doggytex16.png with hash 75d98338408966e365cabf92c15323f40a678035
[16:18:47] [Worker-Main-14/INFO]: Found custom dog skin at doggytalents:textures/entity/dog/custom/doggytex17.png with hash a170ca2633df2df937540cecfb127857f6552d4d
[16:18:47] [Worker-Main-14/INFO]: Found custom dog skin at doggytalents:textures/entity/dog/custom/doggytex18.png with hash 84886ad82bf93839008afe3ba6889a491bb8307a
[16:18:47] [Worker-Main-14/INFO]: Found custom dog skin at doggytalents:textures/entity/dog/custom/doggytex19.png with hash 95350edfde4b407476ab67d9d93b58becfc3cc8a
[16:18:47] [Worker-Main-14/INFO]: Found custom dog skin at doggytalents:textures/entity/dog/custom/doggytex2.png with hash bea8cace65c013ca9cdae76b0664f4176502e4fb
[16:18:47] [Worker-Main-14/INFO]: Found custom dog skin at doggytalents:textures/entity/dog/custom/doggytex20.png with hash a6f74bd5781685428549cc14d383a292cccd57c9
[16:18:47] [Worker-Main-14/INFO]: Found custom dog skin at doggytalents:textures/entity/dog/custom/doggytex3.png with hash df167655cf5db4147e28d6920862636ce94c22cd
[16:18:47] [Worker-Main-14/INFO]: Found custom dog skin at doggytalents:textures/entity/dog/custom/doggytex4.png with hash b82d3e99a8ef342fbdc5f5a3f6c91b3940f80f55
[16:18:47] [Worker-Main-14/INFO]: Found custom dog skin at doggytalents:textures/entity/dog/custom/doggytex5.png with hash 84426b389b050105b2cc8883a28e21ded8502d15
[16:18:47] [Worker-Main-14/INFO]: Found custom dog skin at doggytalents:textures/entity/dog/custom/doggytex6.png with hash 7281214e5b1c928e124de44af6040d34100ef11e
[16:18:47] [Worker-Main-14/INFO]: Found custom dog skin at doggytalents:textures/entity/dog/custom/doggytex7.png with hash 7229d8e7b8e5a291d2d8edb7082e43974bc409f9
[16:18:47] [Worker-Main-14/INFO]: Found custom dog skin at doggytalents:textures/entity/dog/custom/doggytex8.png with hash 40cde1ba3ab392860432d00042dde4ea5ae2accd
[16:18:47] [Worker-Main-14/INFO]: Found custom dog skin at doggytalents:textures/entity/dog/custom/doggytex9.png with hash 7a50feaf4e5d9a332946afa66731430282adaf06
[16:18:47] [Worker-Main-14/INFO]: Loaded override for bad647ebc2ac822563eaedaa3cb64881d8d7fd24 -> doggytalents:textures/entity/dog/custom/doggytex0.png
[16:18:47] [Worker-Main-14/INFO]: Loaded override for c22b2f6d7a902c13d2f9c377f360127b6ae2dd65 -> doggytalents:textures/entity/dog/custom/doggytex1.png
[16:18:47] [Worker-Main-14/INFO]: Loaded override for bea8cace65c013ca9cdae76b0664f4176502e4fb -> doggytalents:textures/entity/dog/custom/doggytex2.png
[16:18:47] [Worker-Main-14/INFO]: Loaded override for df167655cf5db4147e28d6920862636ce94c22cd -> doggytalents:textures/entity/dog/custom/doggytex3.png
[16:18:47] [Worker-Main-14/INFO]: Loaded override for b82d3e99a8ef342fbdc5f5a3f6c91b3940f80f55 -> doggytalents:textures/entity/dog/custom/doggytex4.png
[16:18:47] [Worker-Main-14/INFO]: Loaded override for 84426b389b050105b2cc8883a28e21ded8502d15 -> doggytalents:textures/entity/dog/custom/doggytex5.png
[16:18:47] [Worker-Main-14/INFO]: Loaded override for 7281214e5b1c928e124de44af6040d34100ef11e -> doggytalents:textures/entity/dog/custom/doggytex6.png
[16:18:47] [Worker-Main-14/INFO]: Loaded override for 7229d8e7b8e5a291d2d8edb7082e43974bc409f9 -> doggytalents:textures/entity/dog/custom/doggytex7.png
[16:18:47] [Worker-Main-14/INFO]: Loaded override for 40cde1ba3ab392860432d00042dde4ea5ae2accd -> doggytalents:textures/entity/dog/custom/doggytex8.png
[16:18:47] [Worker-Main-14/INFO]: Loaded override for 7a50feaf4e5d9a332946afa66731430282adaf06 -> doggytalents:textures/entity/dog/custom/doggytex9.png
[16:18:47] [Worker-Main-14/INFO]: Loaded override for 9846a3d8b29589e2ed125b5ce8b8fe398ee4b389 -> doggytalents:textures/entity/dog/custom/doggytex10.png
[16:18:47] [Worker-Main-14/INFO]: Loaded override for 62b05471528c8268c5de6ec514ba801eea812e99 -> doggytalents:textures/entity/dog/custom/doggytex11.png
[16:18:47] [Worker-Main-14/INFO]: Loaded override for 9a6c7833aebe88d09e2c4807cf9ab7b2107ce23b -> doggytalents:textures/entity/dog/custom/doggytex12.png
[16:18:47] [Worker-Main-14/INFO]: Loaded override for b4b0b25d37c7790b886e5feafcc794e13d801d2f -> doggytalents:textures/entity/dog/custom/doggytex13.png
[16:18:47] [Worker-Main-14/INFO]: Loaded override for 08bf1e51a9a64e1b82518360c05fddd711ba0071 -> doggytalents:textures/entity/dog/custom/doggytex14.png
[16:18:47] [Worker-Main-14/INFO]: Loaded override for 3390dbaac3719895fd14386b52105b69ca59b8eb -> doggytalents:textures/entity/dog/custom/doggytex15.png
[16:18:47] [Worker-Main-14/INFO]: Loaded override for 75d98338408966e365cabf92c15323f40a678035 -> doggytalents:textures/entity/dog/custom/doggytex16.png
[16:18:47] [Worker-Main-14/INFO]: Loaded override for a170ca2633df2df937540cecfb127857f6552d4d -> doggytalents:textures/entity/dog/custom/doggytex17.png
[16:18:47] [Worker-Main-14/INFO]: Loaded override for 84886ad82bf93839008afe3ba6889a491bb8307a -> doggytalents:textures/entity/dog/custom/doggytex18.png
[16:18:47] [Worker-Main-14/INFO]: Loaded override for 95350edfde4b407476ab67d9d93b58becfc3cc8a -> doggytalents:textures/entity/dog/custom/doggytex19.png
[16:18:47] [Worker-Main-14/INFO]: Loaded override for a6f74bd5781685428549cc14d383a292cccd57c9 -> doggytalents:textures/entity/dog/custom/doggytex20.png
[16:18:48] [Worker-Main-12/INFO]: Registering recipe condition processor ...
[16:18:50] [Worker-Main-12/INFO]: FTBChunk integration loaded.
[16:18:50] [Worker-Main-12/INFO]: Waystones integration loaded.
[16:18:50] [Worker-Main-12/INFO]: Setup method registered.
[16:18:50] [Worker-Main-12/INFO]: Found @Ljourneymap/client/api/ClientPlugin;: frankv.jmi.JourneyMapPlugin
[16:18:50] [Worker-Main-12/INFO]: Found @Ljourneymap/client/api/ClientPlugin;: journeymap.client.ui.fullscreen.event.FullscreenEventReceiver
[16:18:50] [Worker-Main-12/INFO]: Common Setup
[16:18:50] [Worker-Main-12/INFO]: Whitelisted Dimensions:
[16:18:50] [Worker-Main-12/INFO]: minecraft:overworld
[16:18:50] [Immersive Engineering Contributors Thread/INFO]: Attempting to download special revolvers from GitHub
[16:18:50] [Forge Version Check/INFO]: [doggytalents] Starting version check at https://www.dropbox.com/s/raw/q6ckhwos45jires/version-doggytalents.json
[16:18:51] [Worker-Main-12/INFO]: New compacting rule 4 clay_ball = 1 clay
[16:18:51] [Worker-Main-12/INFO]: New compacting rule 4 snowball = 1 snow_block
[16:18:51] [Worker-Main-12/INFO]: New compacting rule 4 glowstone_dust = 1 glowstone
[16:18:51] [Worker-Main-12/INFO]: New compacting rule 4 brick = 1 bricks
[16:18:51] [Worker-Main-12/INFO]: New compacting rule 4 nether_brick = 1 nether_bricks
[16:18:51] [Worker-Main-12/INFO]: New compacting rule 9 nether_wart = 1 nether_wart_block
[16:18:51] [Worker-Main-12/INFO]: New compacting rule 4 quartz = 1 quartz_block
[16:18:51] [Worker-Main-12/INFO]: New compacting rule 9 melon_slice = 1 melon
[16:18:51] [Worker-Main-12/INFO]: New compacting rule 4 sand = 1 sandstone
[16:18:51] [Worker-Main-12/INFO]: New compacting rule 4 red_sand = 1 red_sandstone
[16:18:51] [Worker-Main-12/INFO]: New compacting rule 4 clay_ball = 1 clay
[16:18:51] [Render thread/INFO]: Registering world-gen core codecs
[16:18:51] [Render thread/INFO]: Registering world-gen component codecs
[16:18:52] [Render thread/INFO]: Locking mod world-gen registries
[16:18:52] [Render thread/INFO]: Registering world-gen content
[16:18:52] [Forge Version Check/INFO]: [doggytalents] Found status: BETA Current: 2.4.0 Target: 2.4.0
[16:18:52] [Forge Version Check/INFO]: [mcwwindows] Starting version check at https://raw.githubusercontent.com/sketchmacaw/macawsmods/master/window.json
[16:18:52] [Forge Version Check/INFO]: [mcwwindows] Found status: UP_TO_DATE Current: 2.0.2 Target: null
[16:18:52] [Forge Version Check/INFO]: [rsgauges] Starting version check at https://raw.githubusercontent.com/stfwi/rsgauges/1.16/meta/update.json
[16:18:52] [Forge Version Check/INFO]: [rsgauges] Found status: BETA Current: 1.2.13-b1 Target: null
[16:18:52] [Forge Version Check/INFO]: [controlling] Starting version check at https://updates.blamejared.com/get?n=controlling&gv=1.18.1
[16:18:53] [Forge Version Check/INFO]: [controlling] Found status: BETA_OUTDATED Current: 9.0.10 Target: 9.0.11
[16:18:53] [Forge Version Check/INFO]: [guardvillagers] Starting version check at https://raw.githubusercontent.com/seymourimadeit/guardvillagers/master/update.json
[16:18:53] [Forge Version Check/INFO]: [guardvillagers] Found status: UP_TO_DATE Current: 1.4.0 Target: null
[16:18:53] [Forge Version Check/INFO]: [mcwdoors] Starting version check at https://raw.githubusercontent.com/sketchmacaw/macawsmods/master/doors.json
[16:18:53] [Forge Version Check/INFO]: [mcwdoors] Found status: UP_TO_DATE Current: 1.0.5 Target: null
[16:18:53] [Forge Version Check/INFO]: [equipmentcompare] Starting version check at https://mc-curse-update-checker.herokuapp.com/502561
[16:18:54] [Forge Version Check/INFO]: [equipmentcompare] Found status: UP_TO_DATE Current: 1.2.10 Target: null
[16:18:54] [Forge Version Check/INFO]: [mcwbridges] Starting version check at https://raw.githubusercontent.com/sketchmacaw/macawsmods/master/bridges.json
[16:18:55] [Render thread/INFO]: Extracting default datapack to /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/terraforged/pack-v0
[16:18:55] [Forge Version Check/INFO]: [mcwbridges] Found status: UP_TO_DATE Current: 2.0.1 Target: null
[16:18:55] [Forge Version Check/INFO]: [mcwtrpdoors] Starting version check at https://raw.githubusercontent.com/sketchmacaw/macawsmods/master/trapdoors.json
[16:18:55] [Render thread/WARN]: Mod 'terraforged' took 3.266 s to run a deferred task.
[16:18:55] [Forge Version Check/INFO]: [mcwtrpdoors] Found status: UP_TO_DATE Current: 1.0.4 Target: null
[16:18:55] [Forge Version Check/INFO]: [mcwfences] Starting version check at https://raw.githubusercontent.com/sketchmacaw/macawsmods/master/fences.json
[16:18:55] [Render thread/INFO]: Registered biome provider minecraft:biome_provider to index 0
[16:18:55] [Render thread/INFO]: Removed biome provider minecraft:biome_provider
[16:18:55] [Render thread/INFO]: Registered biome provider minecraft:biome_provider to index 0
[16:18:55] [Render thread/INFO]: Registered biome provider biomesoplenty:biome_provider to index 1
[16:18:55] [Render thread/INFO]: Registered biome provider biomesoplenty:rare_biome_provider to index 2
[16:18:55] [Render thread/INFO]: Initializing Packet Registries
[16:18:55] [Forge Version Check/INFO]: [mcwfences] Found status: UP_TO_DATE Current: 1.0.2 Target: null
[16:18:55] [Forge Version Check/INFO]: [silentgear] Starting version check at https://raw.githubusercontent.com/SilentChaos512/Silent-Gear/1.18.x/update.json
[16:18:55] [Render thread/INFO]: Registering Structure Piece Types
[16:18:55] [Render thread/ERROR]: Adding duplicate key 'ResourceKey[minecraft:worldgen/configured_feature / minecraft:dimshard_nether]' to registry
[16:18:55] [Render thread/ERROR]: Adding duplicate key 'ResourceKey[minecraft:worldgen/placed_feature / minecraft:dimshard_nether]' to registry
[16:18:55] [Placebo Patreon Trail Loader/INFO]: Loading patreon trails data...
[16:18:55] [Placebo Patreon Wing Loader/INFO]: Loading patreon wing data...
[16:18:55] [Forge Version Check/INFO]: [silentgear] Found status: AHEAD Current: 2.8.3 Target: null
[16:18:55] [Forge Version Check/INFO]: [tombstone] Starting version check at https://raw.githubusercontent.com/Corail31/tombstone_lite/master/update.json
[16:18:55] [Worker-Main-12/INFO]: Client method registered.
[16:18:55] [Placebo Patreon Trail Loader/INFO]: Loaded 8 patreon trails.
[16:18:55] [Forge Version Check/INFO]: [tombstone] Found status: UP_TO_DATE Current: 7.3.3 Target: null
[16:18:55] [Forge Version Check/INFO]: [extrastorage] Starting version check at https://raw.githubusercontent.com/Edivad99/mod-version-controll/master/extrastorage_update.json
[16:18:55] [Placebo Patreon Wing Loader/INFO]: Loaded 8 patreon wings.
[16:18:55] [Render thread/INFO]: Registering custom overworld effects
[16:18:55] [Forge Version Check/INFO]: [extrastorage] Found status: UP_TO_DATE Current: 2.0.1 Target: null
[16:18:55] [Forge Version Check/INFO]: [cfm] Starting version check at https://mrcrayfish.com/modupdatejson?id=cfm
[16:18:56] [Forge Version Check/WARN]: Failed to process update information
java.lang.ClassCastException: class java.lang.Double cannot be cast to class java.lang.String (java.lang.Double and java.lang.String are in module java.base of loader 'bootstrap')
	at net.minecraftforge.fml.VersionChecker$1.process(VersionChecker.java:192) ~[fmlcore-1.18.1-39.0.10.jar%23191!:?]
	at java.lang.Iterable.forEach(Iterable.java:75) [?:?]
	at net.minecraftforge.fml.VersionChecker$1.run(VersionChecker.java:128) [fmlcore-1.18.1-39.0.10.jar%23191!:?]
[16:18:56] [Forge Version Check/INFO]: [fastleafdecay] Starting version check at https://www.olafkeijsers.net/fastleafdecay-update.json
[16:18:56] [Thread-0/INFO]: Config file changed rsgauges-common.toml
[16:18:56] [Thread-0/FATAL]: theoneprobe config just got changed on the file system!
[16:18:56] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:18:56] [Thread-0/FATAL]: theoneprobe config just got changed on the file system!
[16:18:56] [Thread-0/INFO]: Reloading client config for easymagic
[16:18:57] [Forge Version Check/INFO]: [fastleafdecay] Found status: AHEAD Current: 27.2 Target: null
[16:18:57] [Forge Version Check/INFO]: [cyclic] Starting version check at https://raw.githubusercontent.com/Lothrazar/cyclic/trunk/1.18/update.json
[16:18:57] [Forge Version Check/INFO]: [cyclic] Found status: BETA Current: 1.18.1-1.6.9 Target: 1.6.9
[16:18:57] [Forge Version Check/INFO]: [easymagic] Starting version check at https://raw.githubusercontent.com/Fuzss/modresources/main/update/easymagic.json
[16:18:57] [Forge Version Check/INFO]: [easymagic] Found status: UP_TO_DATE Current: 3.2.1 Target: null
[16:18:57] [Forge Version Check/INFO]: [clumps] Starting version check at https://updates.blamejared.com/get?n=clumps&gv=1.18
[16:18:57] [Forge Version Check/INFO]: [clumps] Found status: BETA Current: 8.0.4 Target: null
[16:18:57] [Forge Version Check/INFO]: [catalogue] Starting version check at https://mrcrayfish.com/modupdatejson?id=catalogue
[16:18:57] [Forge Version Check/WARN]: Failed to process update information
java.lang.ClassCastException: class java.lang.Double cannot be cast to class java.lang.String (java.lang.Double and java.lang.String are in module java.base of loader 'bootstrap')
	at net.minecraftforge.fml.VersionChecker$1.process(VersionChecker.java:192) ~[fmlcore-1.18.1-39.0.10.jar%23191!:?]
	at java.lang.Iterable.forEach(Iterable.java:75) [?:?]
	at net.minecraftforge.fml.VersionChecker$1.run(VersionChecker.java:128) [fmlcore-1.18.1-39.0.10.jar%23191!:?]
[16:18:57] [Forge Version Check/INFO]: [extradisks] Starting version check at https://assets.melanx.de/updates/extra-disks.json
[16:18:58] [Forge Version Check/INFO]: [extradisks] Found status: BETA Current: 1.18.1-2.0.2 Target: 1.18.1-2.0.2
[16:18:58] [Forge Version Check/INFO]: [forge] Starting version check at https://files.minecraftforge.net/net/minecraftforge/forge/promotions_slim.json
[16:18:58] [Forge Version Check/INFO]: [forge] Found status: BETA_OUTDATED Current: 39.0.10 Target: 39.0.14
[16:18:58] [Forge Version Check/INFO]: [enchdesc] Starting version check at https://updates.blamejared.com/get?n=enchdesc&gv=1.18.1
[16:18:58] [Forge Version Check/INFO]: [enchdesc] Found status: BETA Current: 9.0.8 Target: 9.0.8
[16:18:58] [Forge Version Check/INFO]: [immersiveengineering] Starting version check at https://raw.githubusercontent.com/BluSunrize/ImmersiveEngineering/1.18.1/changelog.json
[16:18:58] [Forge Version Check/INFO]: [immersiveengineering] Found status: UP_TO_DATE Current: 1.18.1-7.1.0-145 Target: null
[16:18:58] [Forge Version Check/INFO]: [silentlib] Starting version check at https://raw.githubusercontent.com/SilentChaos512/SilentLib/1.14/update.json
[16:18:58] [Forge Version Check/INFO]: [silentlib] Found status: BETA Current: 6.0.0 Target: null
[16:18:58] [Forge Version Check/INFO]: [iceberg] Starting version check at https://mc-curse-update-checker.herokuapp.com/520110
[16:18:59] [Forge Version Check/INFO]: [iceberg] Found status: UP_TO_DATE Current: 1.0.33 Target: null
[16:18:59] [Forge Version Check/INFO]: [inventoryhud] Starting version check at https://raw.githubusercontent.com/DmitryLovin/pluginUpdate/master/invupdate.json
[16:18:59] [Forge Version Check/INFO]: [inventoryhud] Found status: UP_TO_DATE Current: 3.4.4 Target: null
[16:18:59] [Forge Version Check/INFO]: [ambientenvironment] Starting version check at https://updates.blamejared.com/get?n=AmbientEnvironment&gv=1.18.1
[16:18:59] [Forge Version Check/INFO]: [ambientenvironment] Found status: BETA Current: 7.0.3 Target: 7.0.3
[16:18:59] [Forge Version Check/INFO]: [puzzleslib] Starting version check at https://raw.githubusercontent.com/Fuzss/modresources/main/update/puzzleslib.json
[16:18:59] [Forge Version Check/INFO]: [puzzleslib] Found status: UP_TO_DATE Current: 3.1.3 Target: null
[16:18:59] [Forge Version Check/INFO]: [silentgems] Starting version check at https://raw.githubusercontent.com/SilentChaos512/SilentGems/1.18.x/update.json
[16:18:59] [Forge Version Check/INFO]: [silentgems] Found status: OUTDATED Current: 4.2.0 Target: 4.2.1
[16:19:05] [Worker-Main-15/WARN]: Unable to load model: 'alexsmobs:block/three_very_cracked_crocodile_eggs' referenced from: alexsmobs:crocodile_egg#eggs=1,hatch=0: com.google.gson.JsonSyntaxException: com.google.gson.stream.MalformedJsonException: Use JsonReader.setLenient(true) to accept malformed JSON at line 1 column 3 path $.
[16:19:06] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:19:07] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'torchmaster:blockstates/invisible_light.json' missing model for variant: 'torchmaster:invisible_light#'
[16:19:07] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'torchmaster:blockstates/invisible_light.json' in resourcepack: 'Mod Resources': Neither 'variants' nor 'multipart' found
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: ars_nouveau:blockstates/glyph_press.json: java.io.FileNotFoundException: ars_nouveau:blockstates/glyph_press.json
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'ars_nouveau:blockstates/glyph_press.json' missing model for variant: 'ars_nouveau:glyph_press#stage=18'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'ars_nouveau:blockstates/glyph_press.json' missing model for variant: 'ars_nouveau:glyph_press#stage=19'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'ars_nouveau:blockstates/glyph_press.json' missing model for variant: 'ars_nouveau:glyph_press#stage=30'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'ars_nouveau:blockstates/glyph_press.json' missing model for variant: 'ars_nouveau:glyph_press#stage=31'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'ars_nouveau:blockstates/glyph_press.json' missing model for variant: 'ars_nouveau:glyph_press#stage=8'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'ars_nouveau:blockstates/glyph_press.json' missing model for variant: 'ars_nouveau:glyph_press#stage=10'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'ars_nouveau:blockstates/glyph_press.json' missing model for variant: 'ars_nouveau:glyph_press#stage=7'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'ars_nouveau:blockstates/glyph_press.json' missing model for variant: 'ars_nouveau:glyph_press#stage=11'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'ars_nouveau:blockstates/glyph_press.json' missing model for variant: 'ars_nouveau:glyph_press#stage=6'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'ars_nouveau:blockstates/glyph_press.json' missing model for variant: 'ars_nouveau:glyph_press#stage=12'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'ars_nouveau:blockstates/glyph_press.json' missing model for variant: 'ars_nouveau:glyph_press#stage=5'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'ars_nouveau:blockstates/glyph_press.json' missing model for variant: 'ars_nouveau:glyph_press#stage=13'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'ars_nouveau:blockstates/glyph_press.json' missing model for variant: 'ars_nouveau:glyph_press#stage=14'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'ars_nouveau:blockstates/glyph_press.json' missing model for variant: 'ars_nouveau:glyph_press#stage=15'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'ars_nouveau:blockstates/glyph_press.json' missing model for variant: 'ars_nouveau:glyph_press#stage=16'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'ars_nouveau:blockstates/glyph_press.json' missing model for variant: 'ars_nouveau:glyph_press#stage=9'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'ars_nouveau:blockstates/glyph_press.json' missing model for variant: 'ars_nouveau:glyph_press#stage=17'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'ars_nouveau:blockstates/glyph_press.json' missing model for variant: 'ars_nouveau:glyph_press#stage=29'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'ars_nouveau:blockstates/glyph_press.json' missing model for variant: 'ars_nouveau:glyph_press#stage=4'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'ars_nouveau:blockstates/glyph_press.json' missing model for variant: 'ars_nouveau:glyph_press#stage=3'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'ars_nouveau:blockstates/glyph_press.json' missing model for variant: 'ars_nouveau:glyph_press#stage=2'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'ars_nouveau:blockstates/glyph_press.json' missing model for variant: 'ars_nouveau:glyph_press#stage=1'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'ars_nouveau:blockstates/glyph_press.json' missing model for variant: 'ars_nouveau:glyph_press#stage=20'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'ars_nouveau:blockstates/glyph_press.json' missing model for variant: 'ars_nouveau:glyph_press#stage=21'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'ars_nouveau:blockstates/glyph_press.json' missing model for variant: 'ars_nouveau:glyph_press#stage=22'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'ars_nouveau:blockstates/glyph_press.json' missing model for variant: 'ars_nouveau:glyph_press#stage=23'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'ars_nouveau:blockstates/glyph_press.json' missing model for variant: 'ars_nouveau:glyph_press#stage=24'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'ars_nouveau:blockstates/glyph_press.json' missing model for variant: 'ars_nouveau:glyph_press#stage=25'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'ars_nouveau:blockstates/glyph_press.json' missing model for variant: 'ars_nouveau:glyph_press#stage=26'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'ars_nouveau:blockstates/glyph_press.json' missing model for variant: 'ars_nouveau:glyph_press#stage=27'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'ars_nouveau:blockstates/glyph_press.json' missing model for variant: 'ars_nouveau:glyph_press#stage=28'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: ars_nouveau:blockstates/imbuement_chamber.json: java.io.FileNotFoundException: ars_nouveau:blockstates/imbuement_chamber.json
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'ars_nouveau:blockstates/imbuement_chamber.json' missing model for variant: 'ars_nouveau:imbuement_chamber#'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: ars_nouveau:blockstates/redstone_air.json: java.io.FileNotFoundException: ars_nouveau:blockstates/redstone_air.json
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'ars_nouveau:blockstates/redstone_air.json' missing model for variant: 'ars_nouveau:redstone_air#power=0'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'ars_nouveau:blockstates/redstone_air.json' missing model for variant: 'ars_nouveau:redstone_air#power=2'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'ars_nouveau:blockstates/redstone_air.json' missing model for variant: 'ars_nouveau:redstone_air#power=1'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'ars_nouveau:blockstates/redstone_air.json' missing model for variant: 'ars_nouveau:redstone_air#power=4'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'ars_nouveau:blockstates/redstone_air.json' missing model for variant: 'ars_nouveau:redstone_air#power=3'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'ars_nouveau:blockstates/redstone_air.json' missing model for variant: 'ars_nouveau:redstone_air#power=6'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'ars_nouveau:blockstates/redstone_air.json' missing model for variant: 'ars_nouveau:redstone_air#power=13'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'ars_nouveau:blockstates/redstone_air.json' missing model for variant: 'ars_nouveau:redstone_air#power=5'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'ars_nouveau:blockstates/redstone_air.json' missing model for variant: 'ars_nouveau:redstone_air#power=12'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'ars_nouveau:blockstates/redstone_air.json' missing model for variant: 'ars_nouveau:redstone_air#power=8'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'ars_nouveau:blockstates/redstone_air.json' missing model for variant: 'ars_nouveau:redstone_air#power=15'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'ars_nouveau:blockstates/redstone_air.json' missing model for variant: 'ars_nouveau:redstone_air#power=7'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'ars_nouveau:blockstates/redstone_air.json' missing model for variant: 'ars_nouveau:redstone_air#power=14'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'ars_nouveau:blockstates/redstone_air.json' missing model for variant: 'ars_nouveau:redstone_air#power=9'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'ars_nouveau:blockstates/redstone_air.json' missing model for variant: 'ars_nouveau:redstone_air#power=11'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'ars_nouveau:blockstates/redstone_air.json' missing model for variant: 'ars_nouveau:redstone_air#power=10'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: ars_nouveau:blockstates/intangible_air.json: java.io.FileNotFoundException: ars_nouveau:blockstates/intangible_air.json
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'ars_nouveau:blockstates/intangible_air.json' missing model for variant: 'ars_nouveau:intangible_air#'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: ars_nouveau:blockstates/ritual_brazier.json: java.io.FileNotFoundException: ars_nouveau:blockstates/ritual_brazier.json
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'ars_nouveau:blockstates/ritual_brazier.json' missing model for variant: 'ars_nouveau:ritual_brazier#lit=false'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'ars_nouveau:blockstates/ritual_brazier.json' missing model for variant: 'ars_nouveau:ritual_brazier#lit=true'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'ars_nouveau:blockstates/sconce.json' in resourcepack: 'Mod Resources' for variant: 'facing=down': Unknown value: 'down' for blockstate property: 'facing' [north, south, west, east]
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'ars_nouveau:blockstates/sconce.json' in resourcepack: 'Mod Resources' for variant: 'facing=up': Unknown value: 'up' for blockstate property: 'facing' [north, south, west, east]
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: mysticalagriculture:blockstates/panda_crop.json: java.io.FileNotFoundException: mysticalagriculture:blockstates/panda_crop.json
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/panda_crop.json' missing model for variant: 'mysticalagriculture:panda_crop#age=7'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/panda_crop.json' missing model for variant: 'mysticalagriculture:panda_crop#age=6'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/panda_crop.json' missing model for variant: 'mysticalagriculture:panda_crop#age=5'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/panda_crop.json' missing model for variant: 'mysticalagriculture:panda_crop#age=4'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/panda_crop.json' missing model for variant: 'mysticalagriculture:panda_crop#age=3'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/panda_crop.json' missing model for variant: 'mysticalagriculture:panda_crop#age=2'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/panda_crop.json' missing model for variant: 'mysticalagriculture:panda_crop#age=1'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/panda_crop.json' missing model for variant: 'mysticalagriculture:panda_crop#age=0'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: mysticalagriculture:blockstates/ravager_crop.json: java.io.FileNotFoundException: mysticalagriculture:blockstates/ravager_crop.json
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/ravager_crop.json' missing model for variant: 'mysticalagriculture:ravager_crop#age=4'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/ravager_crop.json' missing model for variant: 'mysticalagriculture:ravager_crop#age=5'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/ravager_crop.json' missing model for variant: 'mysticalagriculture:ravager_crop#age=6'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/ravager_crop.json' missing model for variant: 'mysticalagriculture:ravager_crop#age=7'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/ravager_crop.json' missing model for variant: 'mysticalagriculture:ravager_crop#age=0'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/ravager_crop.json' missing model for variant: 'mysticalagriculture:ravager_crop#age=1'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/ravager_crop.json' missing model for variant: 'mysticalagriculture:ravager_crop#age=2'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/ravager_crop.json' missing model for variant: 'mysticalagriculture:ravager_crop#age=3'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: mysticalagriculture:blockstates/classic_set_crop.json: java.io.FileNotFoundException: mysticalagriculture:blockstates/classic_set_crop.json
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/classic_set_crop.json' missing model for variant: 'mysticalagriculture:classic_set_crop#age=2'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/classic_set_crop.json' missing model for variant: 'mysticalagriculture:classic_set_crop#age=1'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/classic_set_crop.json' missing model for variant: 'mysticalagriculture:classic_set_crop#age=4'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/classic_set_crop.json' missing model for variant: 'mysticalagriculture:classic_set_crop#age=3'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/classic_set_crop.json' missing model for variant: 'mysticalagriculture:classic_set_crop#age=6'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/classic_set_crop.json' missing model for variant: 'mysticalagriculture:classic_set_crop#age=5'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/classic_set_crop.json' missing model for variant: 'mysticalagriculture:classic_set_crop#age=7'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/classic_set_crop.json' missing model for variant: 'mysticalagriculture:classic_set_crop#age=0'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: mysticalagriculture:blockstates/fox_crop.json: java.io.FileNotFoundException: mysticalagriculture:blockstates/fox_crop.json
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/fox_crop.json' missing model for variant: 'mysticalagriculture:fox_crop#age=7'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/fox_crop.json' missing model for variant: 'mysticalagriculture:fox_crop#age=1'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/fox_crop.json' missing model for variant: 'mysticalagriculture:fox_crop#age=2'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/fox_crop.json' missing model for variant: 'mysticalagriculture:fox_crop#age=0'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/fox_crop.json' missing model for variant: 'mysticalagriculture:fox_crop#age=5'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/fox_crop.json' missing model for variant: 'mysticalagriculture:fox_crop#age=6'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/fox_crop.json' missing model for variant: 'mysticalagriculture:fox_crop#age=3'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/fox_crop.json' missing model for variant: 'mysticalagriculture:fox_crop#age=4'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: mysticalagriculture:blockstates/magma_cube_crop.json: java.io.FileNotFoundException: mysticalagriculture:blockstates/magma_cube_crop.json
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/magma_cube_crop.json' missing model for variant: 'mysticalagriculture:magma_cube_crop#age=1'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/magma_cube_crop.json' missing model for variant: 'mysticalagriculture:magma_cube_crop#age=2'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/magma_cube_crop.json' missing model for variant: 'mysticalagriculture:magma_cube_crop#age=3'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/magma_cube_crop.json' missing model for variant: 'mysticalagriculture:magma_cube_crop#age=4'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/magma_cube_crop.json' missing model for variant: 'mysticalagriculture:magma_cube_crop#age=5'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/magma_cube_crop.json' missing model for variant: 'mysticalagriculture:magma_cube_crop#age=6'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/magma_cube_crop.json' missing model for variant: 'mysticalagriculture:magma_cube_crop#age=7'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/magma_cube_crop.json' missing model for variant: 'mysticalagriculture:magma_cube_crop#age=0'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: mysticalagriculture:blockstates/pillager_crop.json: java.io.FileNotFoundException: mysticalagriculture:blockstates/pillager_crop.json
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/pillager_crop.json' missing model for variant: 'mysticalagriculture:pillager_crop#age=6'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/pillager_crop.json' missing model for variant: 'mysticalagriculture:pillager_crop#age=7'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/pillager_crop.json' missing model for variant: 'mysticalagriculture:pillager_crop#age=2'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/pillager_crop.json' missing model for variant: 'mysticalagriculture:pillager_crop#age=3'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/pillager_crop.json' missing model for variant: 'mysticalagriculture:pillager_crop#age=4'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/pillager_crop.json' missing model for variant: 'mysticalagriculture:pillager_crop#age=5'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/pillager_crop.json' missing model for variant: 'mysticalagriculture:pillager_crop#age=0'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/pillager_crop.json' missing model for variant: 'mysticalagriculture:pillager_crop#age=1'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: mysticalagriculture:blockstates/llama_crop.json: java.io.FileNotFoundException: mysticalagriculture:blockstates/llama_crop.json
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/llama_crop.json' missing model for variant: 'mysticalagriculture:llama_crop#age=3'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/llama_crop.json' missing model for variant: 'mysticalagriculture:llama_crop#age=4'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/llama_crop.json' missing model for variant: 'mysticalagriculture:llama_crop#age=1'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/llama_crop.json' missing model for variant: 'mysticalagriculture:llama_crop#age=2'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/llama_crop.json' missing model for variant: 'mysticalagriculture:llama_crop#age=7'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/llama_crop.json' missing model for variant: 'mysticalagriculture:llama_crop#age=5'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/llama_crop.json' missing model for variant: 'mysticalagriculture:llama_crop#age=6'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/llama_crop.json' missing model for variant: 'mysticalagriculture:llama_crop#age=0'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: mysticalagriculture:blockstates/bat_crop.json: java.io.FileNotFoundException: mysticalagriculture:blockstates/bat_crop.json
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/bat_crop.json' missing model for variant: 'mysticalagriculture:bat_crop#age=7'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/bat_crop.json' missing model for variant: 'mysticalagriculture:bat_crop#age=6'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/bat_crop.json' missing model for variant: 'mysticalagriculture:bat_crop#age=5'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/bat_crop.json' missing model for variant: 'mysticalagriculture:bat_crop#age=4'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/bat_crop.json' missing model for variant: 'mysticalagriculture:bat_crop#age=3'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/bat_crop.json' missing model for variant: 'mysticalagriculture:bat_crop#age=2'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/bat_crop.json' missing model for variant: 'mysticalagriculture:bat_crop#age=1'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/bat_crop.json' missing model for variant: 'mysticalagriculture:bat_crop#age=0'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: mysticalagriculture:blockstates/husk_crop.json: java.io.FileNotFoundException: mysticalagriculture:blockstates/husk_crop.json
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/husk_crop.json' missing model for variant: 'mysticalagriculture:husk_crop#age=0'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/husk_crop.json' missing model for variant: 'mysticalagriculture:husk_crop#age=7'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/husk_crop.json' missing model for variant: 'mysticalagriculture:husk_crop#age=5'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/husk_crop.json' missing model for variant: 'mysticalagriculture:husk_crop#age=6'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/husk_crop.json' missing model for variant: 'mysticalagriculture:husk_crop#age=3'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/husk_crop.json' missing model for variant: 'mysticalagriculture:husk_crop#age=4'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/husk_crop.json' missing model for variant: 'mysticalagriculture:husk_crop#age=1'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/husk_crop.json' missing model for variant: 'mysticalagriculture:husk_crop#age=2'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: mysticalagriculture:blockstates/zombified_piglin_crop.json: java.io.FileNotFoundException: mysticalagriculture:blockstates/zombified_piglin_crop.json
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/zombified_piglin_crop.json' missing model for variant: 'mysticalagriculture:zombified_piglin_crop#age=5'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/zombified_piglin_crop.json' missing model for variant: 'mysticalagriculture:zombified_piglin_crop#age=6'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/zombified_piglin_crop.json' missing model for variant: 'mysticalagriculture:zombified_piglin_crop#age=7'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/zombified_piglin_crop.json' missing model for variant: 'mysticalagriculture:zombified_piglin_crop#age=1'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/zombified_piglin_crop.json' missing model for variant: 'mysticalagriculture:zombified_piglin_crop#age=2'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/zombified_piglin_crop.json' missing model for variant: 'mysticalagriculture:zombified_piglin_crop#age=3'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/zombified_piglin_crop.json' missing model for variant: 'mysticalagriculture:zombified_piglin_crop#age=4'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/zombified_piglin_crop.json' missing model for variant: 'mysticalagriculture:zombified_piglin_crop#age=0'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: mysticalagriculture:blockstates/piglin_crop.json: java.io.FileNotFoundException: mysticalagriculture:blockstates/piglin_crop.json
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/piglin_crop.json' missing model for variant: 'mysticalagriculture:piglin_crop#age=1'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/piglin_crop.json' missing model for variant: 'mysticalagriculture:piglin_crop#age=2'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/piglin_crop.json' missing model for variant: 'mysticalagriculture:piglin_crop#age=0'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/piglin_crop.json' missing model for variant: 'mysticalagriculture:piglin_crop#age=5'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/piglin_crop.json' missing model for variant: 'mysticalagriculture:piglin_crop#age=6'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/piglin_crop.json' missing model for variant: 'mysticalagriculture:piglin_crop#age=3'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/piglin_crop.json' missing model for variant: 'mysticalagriculture:piglin_crop#age=4'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/piglin_crop.json' missing model for variant: 'mysticalagriculture:piglin_crop#age=7'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: mysticalagriculture:blockstates/endermite_crop.json: java.io.FileNotFoundException: mysticalagriculture:blockstates/endermite_crop.json
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/endermite_crop.json' missing model for variant: 'mysticalagriculture:endermite_crop#age=0'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/endermite_crop.json' missing model for variant: 'mysticalagriculture:endermite_crop#age=7'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/endermite_crop.json' missing model for variant: 'mysticalagriculture:endermite_crop#age=5'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/endermite_crop.json' missing model for variant: 'mysticalagriculture:endermite_crop#age=6'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/endermite_crop.json' missing model for variant: 'mysticalagriculture:endermite_crop#age=3'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/endermite_crop.json' missing model for variant: 'mysticalagriculture:endermite_crop#age=4'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/endermite_crop.json' missing model for variant: 'mysticalagriculture:endermite_crop#age=1'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/endermite_crop.json' missing model for variant: 'mysticalagriculture:endermite_crop#age=2'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: mysticalagriculture:blockstates/cat_crop.json: java.io.FileNotFoundException: mysticalagriculture:blockstates/cat_crop.json
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/cat_crop.json' missing model for variant: 'mysticalagriculture:cat_crop#age=4'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/cat_crop.json' missing model for variant: 'mysticalagriculture:cat_crop#age=5'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/cat_crop.json' missing model for variant: 'mysticalagriculture:cat_crop#age=6'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/cat_crop.json' missing model for variant: 'mysticalagriculture:cat_crop#age=7'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/cat_crop.json' missing model for variant: 'mysticalagriculture:cat_crop#age=0'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/cat_crop.json' missing model for variant: 'mysticalagriculture:cat_crop#age=1'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/cat_crop.json' missing model for variant: 'mysticalagriculture:cat_crop#age=2'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/cat_crop.json' missing model for variant: 'mysticalagriculture:cat_crop#age=3'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: mysticalagriculture:blockstates/silverfish_crop.json: java.io.FileNotFoundException: mysticalagriculture:blockstates/silverfish_crop.json
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/silverfish_crop.json' missing model for variant: 'mysticalagriculture:silverfish_crop#age=0'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/silverfish_crop.json' missing model for variant: 'mysticalagriculture:silverfish_crop#age=6'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/silverfish_crop.json' missing model for variant: 'mysticalagriculture:silverfish_crop#age=5'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/silverfish_crop.json' missing model for variant: 'mysticalagriculture:silverfish_crop#age=7'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/silverfish_crop.json' missing model for variant: 'mysticalagriculture:silverfish_crop#age=2'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/silverfish_crop.json' missing model for variant: 'mysticalagriculture:silverfish_crop#age=1'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/silverfish_crop.json' missing model for variant: 'mysticalagriculture:silverfish_crop#age=4'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/silverfish_crop.json' missing model for variant: 'mysticalagriculture:silverfish_crop#age=3'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: mysticalagriculture:blockstates/drowned_crop.json: java.io.FileNotFoundException: mysticalagriculture:blockstates/drowned_crop.json
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/drowned_crop.json' missing model for variant: 'mysticalagriculture:drowned_crop#age=4'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/drowned_crop.json' missing model for variant: 'mysticalagriculture:drowned_crop#age=3'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/drowned_crop.json' missing model for variant: 'mysticalagriculture:drowned_crop#age=6'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/drowned_crop.json' missing model for variant: 'mysticalagriculture:drowned_crop#age=5'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/drowned_crop.json' missing model for variant: 'mysticalagriculture:drowned_crop#age=0'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/drowned_crop.json' missing model for variant: 'mysticalagriculture:drowned_crop#age=2'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/drowned_crop.json' missing model for variant: 'mysticalagriculture:drowned_crop#age=1'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/drowned_crop.json' missing model for variant: 'mysticalagriculture:drowned_crop#age=7'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: mysticalagriculture:blockstates/guardian_crop.json: java.io.FileNotFoundException: mysticalagriculture:blockstates/guardian_crop.json
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/guardian_crop.json' missing model for variant: 'mysticalagriculture:guardian_crop#age=7'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/guardian_crop.json' missing model for variant: 'mysticalagriculture:guardian_crop#age=5'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/guardian_crop.json' missing model for variant: 'mysticalagriculture:guardian_crop#age=6'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/guardian_crop.json' missing model for variant: 'mysticalagriculture:guardian_crop#age=3'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/guardian_crop.json' missing model for variant: 'mysticalagriculture:guardian_crop#age=4'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/guardian_crop.json' missing model for variant: 'mysticalagriculture:guardian_crop#age=1'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/guardian_crop.json' missing model for variant: 'mysticalagriculture:guardian_crop#age=2'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/guardian_crop.json' missing model for variant: 'mysticalagriculture:guardian_crop#age=0'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: mysticalagriculture:blockstates/dolphin_crop.json: java.io.FileNotFoundException: mysticalagriculture:blockstates/dolphin_crop.json
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/dolphin_crop.json' missing model for variant: 'mysticalagriculture:dolphin_crop#age=0'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/dolphin_crop.json' missing model for variant: 'mysticalagriculture:dolphin_crop#age=1'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/dolphin_crop.json' missing model for variant: 'mysticalagriculture:dolphin_crop#age=2'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/dolphin_crop.json' missing model for variant: 'mysticalagriculture:dolphin_crop#age=3'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/dolphin_crop.json' missing model for variant: 'mysticalagriculture:dolphin_crop#age=4'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/dolphin_crop.json' missing model for variant: 'mysticalagriculture:dolphin_crop#age=5'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/dolphin_crop.json' missing model for variant: 'mysticalagriculture:dolphin_crop#age=6'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/dolphin_crop.json' missing model for variant: 'mysticalagriculture:dolphin_crop#age=7'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: mysticalagriculture:blockstates/stray_crop.json: java.io.FileNotFoundException: mysticalagriculture:blockstates/stray_crop.json
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/stray_crop.json' missing model for variant: 'mysticalagriculture:stray_crop#age=0'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/stray_crop.json' missing model for variant: 'mysticalagriculture:stray_crop#age=2'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/stray_crop.json' missing model for variant: 'mysticalagriculture:stray_crop#age=1'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/stray_crop.json' missing model for variant: 'mysticalagriculture:stray_crop#age=4'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/stray_crop.json' missing model for variant: 'mysticalagriculture:stray_crop#age=3'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/stray_crop.json' missing model for variant: 'mysticalagriculture:stray_crop#age=6'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/stray_crop.json' missing model for variant: 'mysticalagriculture:stray_crop#age=5'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/stray_crop.json' missing model for variant: 'mysticalagriculture:stray_crop#age=7'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: mysticalagriculture:blockstates/shulker_crop.json: java.io.FileNotFoundException: mysticalagriculture:blockstates/shulker_crop.json
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/shulker_crop.json' missing model for variant: 'mysticalagriculture:shulker_crop#age=0'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/shulker_crop.json' missing model for variant: 'mysticalagriculture:shulker_crop#age=1'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/shulker_crop.json' missing model for variant: 'mysticalagriculture:shulker_crop#age=2'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/shulker_crop.json' missing model for variant: 'mysticalagriculture:shulker_crop#age=3'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/shulker_crop.json' missing model for variant: 'mysticalagriculture:shulker_crop#age=4'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/shulker_crop.json' missing model for variant: 'mysticalagriculture:shulker_crop#age=5'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/shulker_crop.json' missing model for variant: 'mysticalagriculture:shulker_crop#age=6'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/shulker_crop.json' missing model for variant: 'mysticalagriculture:shulker_crop#age=7'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: mysticalagriculture:blockstates/wolf_crop.json: java.io.FileNotFoundException: mysticalagriculture:blockstates/wolf_crop.json
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/wolf_crop.json' missing model for variant: 'mysticalagriculture:wolf_crop#age=2'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/wolf_crop.json' missing model for variant: 'mysticalagriculture:wolf_crop#age=3'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/wolf_crop.json' missing model for variant: 'mysticalagriculture:wolf_crop#age=0'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/wolf_crop.json' missing model for variant: 'mysticalagriculture:wolf_crop#age=1'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/wolf_crop.json' missing model for variant: 'mysticalagriculture:wolf_crop#age=6'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/wolf_crop.json' missing model for variant: 'mysticalagriculture:wolf_crop#age=7'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/wolf_crop.json' missing model for variant: 'mysticalagriculture:wolf_crop#age=4'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/wolf_crop.json' missing model for variant: 'mysticalagriculture:wolf_crop#age=5'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: mysticalagriculture:blockstates/villager_crop.json: java.io.FileNotFoundException: mysticalagriculture:blockstates/villager_crop.json
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/villager_crop.json' missing model for variant: 'mysticalagriculture:villager_crop#age=7'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/villager_crop.json' missing model for variant: 'mysticalagriculture:villager_crop#age=6'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/villager_crop.json' missing model for variant: 'mysticalagriculture:villager_crop#age=5'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/villager_crop.json' missing model for variant: 'mysticalagriculture:villager_crop#age=4'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/villager_crop.json' missing model for variant: 'mysticalagriculture:villager_crop#age=3'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/villager_crop.json' missing model for variant: 'mysticalagriculture:villager_crop#age=2'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/villager_crop.json' missing model for variant: 'mysticalagriculture:villager_crop#age=1'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/villager_crop.json' missing model for variant: 'mysticalagriculture:villager_crop#age=0'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: mysticalagriculture:blockstates/vex_crop.json: java.io.FileNotFoundException: mysticalagriculture:blockstates/vex_crop.json
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/vex_crop.json' missing model for variant: 'mysticalagriculture:vex_crop#age=6'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/vex_crop.json' missing model for variant: 'mysticalagriculture:vex_crop#age=5'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/vex_crop.json' missing model for variant: 'mysticalagriculture:vex_crop#age=7'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/vex_crop.json' missing model for variant: 'mysticalagriculture:vex_crop#age=2'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/vex_crop.json' missing model for variant: 'mysticalagriculture:vex_crop#age=1'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/vex_crop.json' missing model for variant: 'mysticalagriculture:vex_crop#age=4'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/vex_crop.json' missing model for variant: 'mysticalagriculture:vex_crop#age=3'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/vex_crop.json' missing model for variant: 'mysticalagriculture:vex_crop#age=0'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: mysticalagriculture:blockstates/piglin_brute_crop.json: java.io.FileNotFoundException: mysticalagriculture:blockstates/piglin_brute_crop.json
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/piglin_brute_crop.json' missing model for variant: 'mysticalagriculture:piglin_brute_crop#age=2'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/piglin_brute_crop.json' missing model for variant: 'mysticalagriculture:piglin_brute_crop#age=3'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/piglin_brute_crop.json' missing model for variant: 'mysticalagriculture:piglin_brute_crop#age=0'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/piglin_brute_crop.json' missing model for variant: 'mysticalagriculture:piglin_brute_crop#age=1'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/piglin_brute_crop.json' missing model for variant: 'mysticalagriculture:piglin_brute_crop#age=6'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/piglin_brute_crop.json' missing model for variant: 'mysticalagriculture:piglin_brute_crop#age=7'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/piglin_brute_crop.json' missing model for variant: 'mysticalagriculture:piglin_brute_crop#age=4'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/piglin_brute_crop.json' missing model for variant: 'mysticalagriculture:piglin_brute_crop#age=5'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: mysticalagriculture:blockstates/polar_bear_crop.json: java.io.FileNotFoundException: mysticalagriculture:blockstates/polar_bear_crop.json
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/polar_bear_crop.json' missing model for variant: 'mysticalagriculture:polar_bear_crop#age=0'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/polar_bear_crop.json' missing model for variant: 'mysticalagriculture:polar_bear_crop#age=3'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/polar_bear_crop.json' missing model for variant: 'mysticalagriculture:polar_bear_crop#age=4'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/polar_bear_crop.json' missing model for variant: 'mysticalagriculture:polar_bear_crop#age=1'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/polar_bear_crop.json' missing model for variant: 'mysticalagriculture:polar_bear_crop#age=2'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/polar_bear_crop.json' missing model for variant: 'mysticalagriculture:polar_bear_crop#age=7'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/polar_bear_crop.json' missing model for variant: 'mysticalagriculture:polar_bear_crop#age=5'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/polar_bear_crop.json' missing model for variant: 'mysticalagriculture:polar_bear_crop#age=6'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: mysticalagriculture:blockstates/horse_crop.json: java.io.FileNotFoundException: mysticalagriculture:blockstates/horse_crop.json
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/horse_crop.json' missing model for variant: 'mysticalagriculture:horse_crop#age=0'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/horse_crop.json' missing model for variant: 'mysticalagriculture:horse_crop#age=7'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/horse_crop.json' missing model for variant: 'mysticalagriculture:horse_crop#age=5'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/horse_crop.json' missing model for variant: 'mysticalagriculture:horse_crop#age=6'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/horse_crop.json' missing model for variant: 'mysticalagriculture:horse_crop#age=3'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/horse_crop.json' missing model for variant: 'mysticalagriculture:horse_crop#age=4'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/horse_crop.json' missing model for variant: 'mysticalagriculture:horse_crop#age=1'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/horse_crop.json' missing model for variant: 'mysticalagriculture:horse_crop#age=2'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: mysticalagriculture:blockstates/vindicator_crop.json: java.io.FileNotFoundException: mysticalagriculture:blockstates/vindicator_crop.json
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/vindicator_crop.json' missing model for variant: 'mysticalagriculture:vindicator_crop#age=0'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/vindicator_crop.json' missing model for variant: 'mysticalagriculture:vindicator_crop#age=4'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/vindicator_crop.json' missing model for variant: 'mysticalagriculture:vindicator_crop#age=3'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/vindicator_crop.json' missing model for variant: 'mysticalagriculture:vindicator_crop#age=2'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/vindicator_crop.json' missing model for variant: 'mysticalagriculture:vindicator_crop#age=1'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/vindicator_crop.json' missing model for variant: 'mysticalagriculture:vindicator_crop#age=7'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/vindicator_crop.json' missing model for variant: 'mysticalagriculture:vindicator_crop#age=6'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/vindicator_crop.json' missing model for variant: 'mysticalagriculture:vindicator_crop#age=5'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: mysticalagriculture:blockstates/phantom_crop.json: java.io.FileNotFoundException: mysticalagriculture:blockstates/phantom_crop.json
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/phantom_crop.json' missing model for variant: 'mysticalagriculture:phantom_crop#age=0'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/phantom_crop.json' missing model for variant: 'mysticalagriculture:phantom_crop#age=1'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/phantom_crop.json' missing model for variant: 'mysticalagriculture:phantom_crop#age=2'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/phantom_crop.json' missing model for variant: 'mysticalagriculture:phantom_crop#age=3'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/phantom_crop.json' missing model for variant: 'mysticalagriculture:phantom_crop#age=4'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/phantom_crop.json' missing model for variant: 'mysticalagriculture:phantom_crop#age=5'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/phantom_crop.json' missing model for variant: 'mysticalagriculture:phantom_crop#age=6'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/phantom_crop.json' missing model for variant: 'mysticalagriculture:phantom_crop#age=7'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: mysticalagriculture:blockstates/evoker_crop.json: java.io.FileNotFoundException: mysticalagriculture:blockstates/evoker_crop.json
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/evoker_crop.json' missing model for variant: 'mysticalagriculture:evoker_crop#age=0'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/evoker_crop.json' missing model for variant: 'mysticalagriculture:evoker_crop#age=1'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/evoker_crop.json' missing model for variant: 'mysticalagriculture:evoker_crop#age=2'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/evoker_crop.json' missing model for variant: 'mysticalagriculture:evoker_crop#age=3'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/evoker_crop.json' missing model for variant: 'mysticalagriculture:evoker_crop#age=4'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/evoker_crop.json' missing model for variant: 'mysticalagriculture:evoker_crop#age=5'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/evoker_crop.json' missing model for variant: 'mysticalagriculture:evoker_crop#age=6'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/evoker_crop.json' missing model for variant: 'mysticalagriculture:evoker_crop#age=7'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: mysticalagriculture:blockstates/mooshroom_crop.json: java.io.FileNotFoundException: mysticalagriculture:blockstates/mooshroom_crop.json
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/mooshroom_crop.json' missing model for variant: 'mysticalagriculture:mooshroom_crop#age=0'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/mooshroom_crop.json' missing model for variant: 'mysticalagriculture:mooshroom_crop#age=7'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/mooshroom_crop.json' missing model for variant: 'mysticalagriculture:mooshroom_crop#age=5'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/mooshroom_crop.json' missing model for variant: 'mysticalagriculture:mooshroom_crop#age=6'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/mooshroom_crop.json' missing model for variant: 'mysticalagriculture:mooshroom_crop#age=3'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/mooshroom_crop.json' missing model for variant: 'mysticalagriculture:mooshroom_crop#age=4'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/mooshroom_crop.json' missing model for variant: 'mysticalagriculture:mooshroom_crop#age=1'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/mooshroom_crop.json' missing model for variant: 'mysticalagriculture:mooshroom_crop#age=2'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: mysticalagriculture:blockstates/witch_crop.json: java.io.FileNotFoundException: mysticalagriculture:blockstates/witch_crop.json
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/witch_crop.json' missing model for variant: 'mysticalagriculture:witch_crop#age=7'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/witch_crop.json' missing model for variant: 'mysticalagriculture:witch_crop#age=4'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/witch_crop.json' missing model for variant: 'mysticalagriculture:witch_crop#age=3'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/witch_crop.json' missing model for variant: 'mysticalagriculture:witch_crop#age=6'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/witch_crop.json' missing model for variant: 'mysticalagriculture:witch_crop#age=5'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/witch_crop.json' missing model for variant: 'mysticalagriculture:witch_crop#age=0'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/witch_crop.json' missing model for variant: 'mysticalagriculture:witch_crop#age=2'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/witch_crop.json' missing model for variant: 'mysticalagriculture:witch_crop#age=1'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: mysticalagriculture:blockstates/parrot_crop.json: java.io.FileNotFoundException: mysticalagriculture:blockstates/parrot_crop.json
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/parrot_crop.json' missing model for variant: 'mysticalagriculture:parrot_crop#age=3'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/parrot_crop.json' missing model for variant: 'mysticalagriculture:parrot_crop#age=2'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/parrot_crop.json' missing model for variant: 'mysticalagriculture:parrot_crop#age=1'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/parrot_crop.json' missing model for variant: 'mysticalagriculture:parrot_crop#age=0'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/parrot_crop.json' missing model for variant: 'mysticalagriculture:parrot_crop#age=7'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/parrot_crop.json' missing model for variant: 'mysticalagriculture:parrot_crop#age=6'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/parrot_crop.json' missing model for variant: 'mysticalagriculture:parrot_crop#age=5'
[16:19:09] [Worker-Main-15/WARN]: Exception loading blockstate definition: 'mysticalagriculture:blockstates/parrot_crop.json' missing model for variant: 'mysticalagriculture:parrot_crop#age=4'
[16:19:10] [Worker-Main-15/WARN]: Unable to load model: 'minecraft:andesite_catwalk' referenced from: createdeco:gold_catwalk#bottom=true,east=true,north=true,south=true,waterlogged=true,west=true: java.io.FileNotFoundException: minecraft:models/andesite_catwalk.json
[16:19:13] [Worker-Main-15/WARN]: Unable to load model: 'minecraft:blood_gun_empty' referenced from: alexsmobs:blood_sprayer#inventory: java.io.FileNotFoundException: minecraft:models/blood_gun_empty.json
[16:19:13] [Worker-Main-15/WARN]: Unable to load model: 'refinedstorage:cover#inventory' referenced from: refinedstorage:cover#inventory: java.io.FileNotFoundException: refinedstorage:models/item/cover.json
[16:19:13] [Worker-Main-15/WARN]: Unable to load model: 'refinedstorage:hollow_cover#inventory' referenced from: refinedstorage:hollow_cover#inventory: java.io.FileNotFoundException: refinedstorage:models/item/hollow_cover.json
[16:19:13] [Worker-Main-15/WARN]: Unable to load model: 'ars_nouveau:block/light_block/light_spell_block1' referenced from: ars_nouveau:light_block#inventory: java.io.FileNotFoundException: ars_nouveau:models/block/light_block/light_spell_block1.json
[16:19:13] [Worker-Main-15/WARN]: Unable to load model: 'ars_nouveau:portal#inventory' referenced from: ars_nouveau:portal#inventory: java.io.FileNotFoundException: ars_nouveau:models/item/portal.json
[16:19:13] [Worker-Main-15/WARN]: Unable to load model: 'mysticalagriculture:panda_essence#inventory' referenced from: mysticalagriculture:panda_essence#inventory: java.io.FileNotFoundException: mysticalagriculture:models/item/panda_essence.json
[16:19:13] [Worker-Main-15/WARN]: Unable to load model: 'mysticalagriculture:fox_essence#inventory' referenced from: mysticalagriculture:fox_essence#inventory: java.io.FileNotFoundException: mysticalagriculture:models/item/fox_essence.json
[16:19:13] [Worker-Main-15/WARN]: Unable to load model: 'mysticalagriculture:bat_essence#inventory' referenced from: mysticalagriculture:bat_essence#inventory: java.io.FileNotFoundException: mysticalagriculture:models/item/bat_essence.json
[16:19:13] [Worker-Main-15/WARN]: Unable to load model: 'mysticalagriculture:cat_essence#inventory' referenced from: mysticalagriculture:cat_essence#inventory: java.io.FileNotFoundException: mysticalagriculture:models/item/cat_essence.json
[16:19:13] [Worker-Main-15/WARN]: Unable to load model: 'mysticalagriculture:wolf_essence#inventory' referenced from: mysticalagriculture:wolf_essence#inventory: java.io.FileNotFoundException: mysticalagriculture:models/item/wolf_essence.json
[16:19:13] [Worker-Main-15/WARN]: Unable to load model: 'mysticalagriculture:parrot_essence#inventory' referenced from: mysticalagriculture:parrot_essence#inventory: java.io.FileNotFoundException: mysticalagriculture:models/item/parrot_essence.json
[16:19:13] [Worker-Main-15/WARN]: Unable to load model: 'mysticalagriculture:llama_essence#inventory' referenced from: mysticalagriculture:llama_essence#inventory: java.io.FileNotFoundException: mysticalagriculture:models/item/llama_essence.json
[16:19:13] [Worker-Main-15/WARN]: Unable to load model: 'mysticalagriculture:husk_essence#inventory' referenced from: mysticalagriculture:husk_essence#inventory: java.io.FileNotFoundException: mysticalagriculture:models/item/husk_essence.json
[16:19:13] [Worker-Main-15/WARN]: Unable to load model: 'mysticalagriculture:zombified_piglin_essence#inventory' referenced from: mysticalagriculture:zombified_piglin_essence#inventory: java.io.FileNotFoundException: mysticalagriculture:models/item/zombified_piglin_essence.json
[16:19:13] [Worker-Main-15/WARN]: Unable to load model: 'mysticalagriculture:silverfish_essence#inventory' referenced from: mysticalagriculture:silverfish_essence#inventory: java.io.FileNotFoundException: mysticalagriculture:models/item/silverfish_essence.json
[16:19:13] [Worker-Main-15/WARN]: Unable to load model: 'mysticalagriculture:drowned_essence#inventory' referenced from: mysticalagriculture:drowned_essence#inventory: java.io.FileNotFoundException: mysticalagriculture:models/item/drowned_essence.json
[16:19:13] [Worker-Main-15/WARN]: Unable to load model: 'mysticalagriculture:guardian_essence#inventory' referenced from: mysticalagriculture:guardian_essence#inventory: java.io.FileNotFoundException: mysticalagriculture:models/item/guardian_essence.json
[16:19:13] [Worker-Main-15/WARN]: Unable to load model: 'mysticalagriculture:dolphin_essence#inventory' referenced from: mysticalagriculture:dolphin_essence#inventory: java.io.FileNotFoundException: mysticalagriculture:models/item/dolphin_essence.json
[16:19:13] [Worker-Main-15/WARN]: Unable to load model: 'mysticalagriculture:stray_essence#inventory' referenced from: mysticalagriculture:stray_essence#inventory: java.io.FileNotFoundException: mysticalagriculture:models/item/stray_essence.json
[16:19:13] [Worker-Main-15/WARN]: Unable to load model: 'mysticalagriculture:vex_essence#inventory' referenced from: mysticalagriculture:vex_essence#inventory: java.io.FileNotFoundException: mysticalagriculture:models/item/vex_essence.json
[16:19:13] [Worker-Main-15/WARN]: Unable to load model: 'mysticalagriculture:polar_bear_essence#inventory' referenced from: mysticalagriculture:polar_bear_essence#inventory: java.io.FileNotFoundException: mysticalagriculture:models/item/polar_bear_essence.json
[16:19:13] [Worker-Main-15/WARN]: Unable to load model: 'mysticalagriculture:horse_essence#inventory' referenced from: mysticalagriculture:horse_essence#inventory: java.io.FileNotFoundException: mysticalagriculture:models/item/horse_essence.json
[16:19:13] [Worker-Main-15/WARN]: Unable to load model: 'mysticalagriculture:witch_essence#inventory' referenced from: mysticalagriculture:witch_essence#inventory: java.io.FileNotFoundException: mysticalagriculture:models/item/witch_essence.json
[16:19:13] [Worker-Main-15/WARN]: Unable to load model: 'mysticalagriculture:ravager_essence#inventory' referenced from: mysticalagriculture:ravager_essence#inventory: java.io.FileNotFoundException: mysticalagriculture:models/item/ravager_essence.json
[16:19:13] [Worker-Main-15/WARN]: Unable to load model: 'mysticalagriculture:classic_set_essence#inventory' referenced from: mysticalagriculture:classic_set_essence#inventory: java.io.FileNotFoundException: mysticalagriculture:models/item/classic_set_essence.json
[16:19:13] [Worker-Main-15/WARN]: Unable to load model: 'mysticalagriculture:magma_cube_essence#inventory' referenced from: mysticalagriculture:magma_cube_essence#inventory: java.io.FileNotFoundException: mysticalagriculture:models/item/magma_cube_essence.json
[16:19:13] [Worker-Main-15/WARN]: Unable to load model: 'mysticalagriculture:pillager_essence#inventory' referenced from: mysticalagriculture:pillager_essence#inventory: java.io.FileNotFoundException: mysticalagriculture:models/item/pillager_essence.json
[16:19:13] [Worker-Main-15/WARN]: Unable to load model: 'mysticalagriculture:piglin_essence#inventory' referenced from: mysticalagriculture:piglin_essence#inventory: java.io.FileNotFoundException: mysticalagriculture:models/item/piglin_essence.json
[16:19:13] [Worker-Main-15/WARN]: Unable to load model: 'mysticalagriculture:endermite_essence#inventory' referenced from: mysticalagriculture:endermite_essence#inventory: java.io.FileNotFoundException: mysticalagriculture:models/item/endermite_essence.json
[16:19:13] [Worker-Main-15/WARN]: Unable to load model: 'mysticalagriculture:shulker_essence#inventory' referenced from: mysticalagriculture:shulker_essence#inventory: java.io.FileNotFoundException: mysticalagriculture:models/item/shulker_essence.json
[16:19:13] [Worker-Main-15/WARN]: Unable to load model: 'mysticalagriculture:villager_essence#inventory' referenced from: mysticalagriculture:villager_essence#inventory: java.io.FileNotFoundException: mysticalagriculture:models/item/villager_essence.json
[16:19:13] [Worker-Main-15/WARN]: Unable to load model: 'mysticalagriculture:vindicator_essence#inventory' referenced from: mysticalagriculture:vindicator_essence#inventory: java.io.FileNotFoundException: mysticalagriculture:models/item/vindicator_essence.json
[16:19:13] [Worker-Main-15/WARN]: Unable to load model: 'mysticalagriculture:phantom_essence#inventory' referenced from: mysticalagriculture:phantom_essence#inventory: java.io.FileNotFoundException: mysticalagriculture:models/item/phantom_essence.json
[16:19:13] [Worker-Main-15/WARN]: Unable to load model: 'mysticalagriculture:mooshroom_essence#inventory' referenced from: mysticalagriculture:mooshroom_essence#inventory: java.io.FileNotFoundException: mysticalagriculture:models/item/mooshroom_essence.json
[16:19:13] [Worker-Main-15/WARN]: Unable to load model: 'mysticalagriculture:piglin_brute_essence#inventory' referenced from: mysticalagriculture:piglin_brute_essence#inventory: java.io.FileNotFoundException: mysticalagriculture:models/item/piglin_brute_essence.json
[16:19:13] [Worker-Main-15/WARN]: Unable to load model: 'mysticalagriculture:evoker_essence#inventory' referenced from: mysticalagriculture:evoker_essence#inventory: java.io.FileNotFoundException: mysticalagriculture:models/item/evoker_essence.json
[16:19:13] [Worker-Main-15/WARN]: Unable to load model: 'mysticalagriculture:panda_seeds#inventory' referenced from: mysticalagriculture:panda_seeds#inventory: java.io.FileNotFoundException: mysticalagriculture:models/item/panda_seeds.json
[16:19:13] [Worker-Main-15/WARN]: Unable to load model: 'mysticalagriculture:fox_seeds#inventory' referenced from: mysticalagriculture:fox_seeds#inventory: java.io.FileNotFoundException: mysticalagriculture:models/item/fox_seeds.json
[16:19:13] [Worker-Main-15/WARN]: Unable to load model: 'mysticalagriculture:bat_seeds#inventory' referenced from: mysticalagriculture:bat_seeds#inventory: java.io.FileNotFoundException: mysticalagriculture:models/item/bat_seeds.json
[16:19:13] [Worker-Main-15/WARN]: Unable to load model: 'mysticalagriculture:cat_seeds#inventory' referenced from: mysticalagriculture:cat_seeds#inventory: java.io.FileNotFoundException: mysticalagriculture:models/item/cat_seeds.json
[16:19:13] [Worker-Main-15/WARN]: Unable to load model: 'mysticalagriculture:wolf_seeds#inventory' referenced from: mysticalagriculture:wolf_seeds#inventory: java.io.FileNotFoundException: mysticalagriculture:models/item/wolf_seeds.json
[16:19:13] [Worker-Main-15/WARN]: Unable to load model: 'mysticalagriculture:parrot_seeds#inventory' referenced from: mysticalagriculture:parrot_seeds#inventory: java.io.FileNotFoundException: mysticalagriculture:models/item/parrot_seeds.json
[16:19:13] [Worker-Main-15/WARN]: Unable to load model: 'mysticalagriculture:llama_seeds#inventory' referenced from: mysticalagriculture:llama_seeds#inventory: java.io.FileNotFoundException: mysticalagriculture:models/item/llama_seeds.json
[16:19:13] [Worker-Main-15/WARN]: Unable to load model: 'mysticalagriculture:husk_seeds#inventory' referenced from: mysticalagriculture:husk_seeds#inventory: java.io.FileNotFoundException: mysticalagriculture:models/item/husk_seeds.json
[16:19:13] [Worker-Main-15/WARN]: Unable to load model: 'mysticalagriculture:zombified_piglin_seeds#inventory' referenced from: mysticalagriculture:zombified_piglin_seeds#inventory: java.io.FileNotFoundException: mysticalagriculture:models/item/zombified_piglin_seeds.json
[16:19:13] [Worker-Main-15/WARN]: Unable to load model: 'mysticalagriculture:silverfish_seeds#inventory' referenced from: mysticalagriculture:silverfish_seeds#inventory: java.io.FileNotFoundException: mysticalagriculture:models/item/silverfish_seeds.json
[16:19:13] [Worker-Main-15/WARN]: Unable to load model: 'mysticalagriculture:drowned_seeds#inventory' referenced from: mysticalagriculture:drowned_seeds#inventory: java.io.FileNotFoundException: mysticalagriculture:models/item/drowned_seeds.json
[16:19:13] [Worker-Main-15/WARN]: Unable to load model: 'mysticalagriculture:guardian_seeds#inventory' referenced from: mysticalagriculture:guardian_seeds#inventory: java.io.FileNotFoundException: mysticalagriculture:models/item/guardian_seeds.json
[16:19:13] [Worker-Main-15/WARN]: Unable to load model: 'mysticalagriculture:dolphin_seeds#inventory' referenced from: mysticalagriculture:dolphin_seeds#inventory: java.io.FileNotFoundException: mysticalagriculture:models/item/dolphin_seeds.json
[16:19:13] [Worker-Main-15/WARN]: Unable to load model: 'mysticalagriculture:stray_seeds#inventory' referenced from: mysticalagriculture:stray_seeds#inventory: java.io.FileNotFoundException: mysticalagriculture:models/item/stray_seeds.json
[16:19:13] [Worker-Main-15/WARN]: Unable to load model: 'mysticalagriculture:vex_seeds#inventory' referenced from: mysticalagriculture:vex_seeds#inventory: java.io.FileNotFoundException: mysticalagriculture:models/item/vex_seeds.json
[16:19:13] [Worker-Main-15/WARN]: Unable to load model: 'mysticalagriculture:polar_bear_seeds#inventory' referenced from: mysticalagriculture:polar_bear_seeds#inventory: java.io.FileNotFoundException: mysticalagriculture:models/item/polar_bear_seeds.json
[16:19:13] [Worker-Main-15/WARN]: Unable to load model: 'mysticalagriculture:horse_seeds#inventory' referenced from: mysticalagriculture:horse_seeds#inventory: java.io.FileNotFoundException: mysticalagriculture:models/item/horse_seeds.json
[16:19:13] [Worker-Main-15/WARN]: Unable to load model: 'mysticalagriculture:witch_seeds#inventory' referenced from: mysticalagriculture:witch_seeds#inventory: java.io.FileNotFoundException: mysticalagriculture:models/item/witch_seeds.json
[16:19:13] [Worker-Main-15/WARN]: Unable to load model: 'mysticalagriculture:ravager_seeds#inventory' referenced from: mysticalagriculture:ravager_seeds#inventory: java.io.FileNotFoundException: mysticalagriculture:models/item/ravager_seeds.json
[16:19:13] [Worker-Main-15/WARN]: Unable to load model: 'mysticalagriculture:classic_set_seeds#inventory' referenced from: mysticalagriculture:classic_set_seeds#inventory: java.io.FileNotFoundException: mysticalagriculture:models/item/classic_set_seeds.json
[16:19:13] [Worker-Main-15/WARN]: Unable to load model: 'mysticalagriculture:magma_cube_seeds#inventory' referenced from: mysticalagriculture:magma_cube_seeds#inventory: java.io.FileNotFoundException: mysticalagriculture:models/item/magma_cube_seeds.json
[16:19:13] [Worker-Main-15/WARN]: Unable to load model: 'mysticalagriculture:pillager_seeds#inventory' referenced from: mysticalagriculture:pillager_seeds#inventory: java.io.FileNotFoundException: mysticalagriculture:models/item/pillager_seeds.json
[16:19:13] [Worker-Main-15/WARN]: Unable to load model: 'mysticalagriculture:piglin_seeds#inventory' referenced from: mysticalagriculture:piglin_seeds#inventory: java.io.FileNotFoundException: mysticalagriculture:models/item/piglin_seeds.json
[16:19:13] [Worker-Main-15/WARN]: Unable to load model: 'mysticalagriculture:endermite_seeds#inventory' referenced from: mysticalagriculture:endermite_seeds#inventory: java.io.FileNotFoundException: mysticalagriculture:models/item/endermite_seeds.json
[16:19:13] [Worker-Main-15/WARN]: Unable to load model: 'mysticalagriculture:shulker_seeds#inventory' referenced from: mysticalagriculture:shulker_seeds#inventory: java.io.FileNotFoundException: mysticalagriculture:models/item/shulker_seeds.json
[16:19:13] [Worker-Main-15/WARN]: Unable to load model: 'mysticalagriculture:villager_seeds#inventory' referenced from: mysticalagriculture:villager_seeds#inventory: java.io.FileNotFoundException: mysticalagriculture:models/item/villager_seeds.json
[16:19:13] [Worker-Main-15/WARN]: Unable to load model: 'mysticalagriculture:vindicator_seeds#inventory' referenced from: mysticalagriculture:vindicator_seeds#inventory: java.io.FileNotFoundException: mysticalagriculture:models/item/vindicator_seeds.json
[16:19:13] [Worker-Main-15/WARN]: Unable to load model: 'mysticalagriculture:phantom_seeds#inventory' referenced from: mysticalagriculture:phantom_seeds#inventory: java.io.FileNotFoundException: mysticalagriculture:models/item/phantom_seeds.json
[16:19:13] [Worker-Main-15/WARN]: Unable to load model: 'mysticalagriculture:mooshroom_seeds#inventory' referenced from: mysticalagriculture:mooshroom_seeds#inventory: java.io.FileNotFoundException: mysticalagriculture:models/item/mooshroom_seeds.json
[16:19:13] [Worker-Main-15/WARN]: Unable to load model: 'mysticalagriculture:piglin_brute_seeds#inventory' referenced from: mysticalagriculture:piglin_brute_seeds#inventory: java.io.FileNotFoundException: mysticalagriculture:models/item/piglin_brute_seeds.json
[16:19:13] [Worker-Main-15/WARN]: Unable to load model: 'mysticalagriculture:evoker_seeds#inventory' referenced from: mysticalagriculture:evoker_seeds#inventory: java.io.FileNotFoundException: mysticalagriculture:models/item/evoker_seeds.json
[16:19:16] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:19:17] [Worker-Main-15/INFO]: Textures for fragment model
[16:19:17] [Worker-Main-15/INFO]: - silentgear:item/fragment/wood
[16:19:17] [Worker-Main-15/INFO]: - silentgear:item/fragment/cloth
[16:19:17] [Worker-Main-15/INFO]: - silentgear:item/fragment/metal
[16:19:17] [Worker-Main-15/INFO]: - silentgear:item/fragment/dust
[16:19:17] [Worker-Main-15/INFO]: - silentgear:item/error
[16:19:21] [Worker-Main-15/WARN]: Unable to resolve texture reference: #missing in silentgear:block/material_grader_on
[16:19:21] [Worker-Main-15/WARN]: Unable to resolve texture reference: #missing in refinedpipes:block/pipe/fluid/advanced/straight
[16:19:21] [Worker-Main-15/WARN]: Unable to resolve texture reference: #down in ars_nouveau:block/relay_deposit
[16:19:21] [Worker-Main-15/WARN]: Unable to resolve texture reference: #up in ars_nouveau:block/relay_deposit
[16:19:21] [Worker-Main-15/WARN]: Unable to resolve texture reference: #north in ars_nouveau:block/relay_deposit
[16:19:21] [Worker-Main-15/WARN]: Unable to resolve texture reference: #south in ars_nouveau:block/relay_deposit
[16:19:21] [Worker-Main-15/WARN]: Unable to resolve texture reference: #west in ars_nouveau:block/relay_deposit
[16:19:21] [Worker-Main-15/WARN]: Unable to resolve texture reference: #east in ars_nouveau:block/relay_deposit
[16:19:21] [Worker-Main-15/WARN]: Unable to resolve texture reference: #missing in refinedpipes:block/pipe/fluid/improved/straight
[16:19:21] [Worker-Main-15/WARN]: Unable to resolve texture reference: #missing in refinedpipes:block/pipe/energy/advanced/straight
[16:19:21] [Worker-Main-15/WARN]: Unable to resolve texture reference: #missing in refinedpipes:item/elite_energy_pipe
[16:19:21] [Worker-Main-15/WARN]: Unable to resolve texture reference: #missing in refinedpipes:block/pipe/energy/improved/straight
[16:19:21] [Worker-Main-15/WARN]: Unable to resolve texture reference: #down in ars_nouveau:block/arcane_core
[16:19:21] [Worker-Main-15/WARN]: Unable to resolve texture reference: #up in ars_nouveau:block/arcane_core
[16:19:21] [Worker-Main-15/WARN]: Unable to resolve texture reference: #north in ars_nouveau:block/arcane_core
[16:19:21] [Worker-Main-15/WARN]: Unable to resolve texture reference: #south in ars_nouveau:block/arcane_core
[16:19:21] [Worker-Main-15/WARN]: Unable to resolve texture reference: #west in ars_nouveau:block/arcane_core
[16:19:21] [Worker-Main-15/WARN]: Unable to resolve texture reference: #east in ars_nouveau:block/arcane_core
[16:19:21] [Worker-Main-15/WARN]: Unable to resolve texture reference: #missing in refinedpipes:item/basic_item_pipe
[16:19:21] [Worker-Main-15/WARN]: Unable to resolve texture reference: #missing in alexsmobs:block/banana_peel
[16:19:21] [Worker-Main-15/WARN]: Unable to resolve texture reference: #missing in silentgear:block/gear_smithing_table
[16:19:21] [Worker-Main-15/WARN]: Unable to resolve texture reference: #missing in silentgear:block/material_grader
[16:19:21] [Worker-Main-15/WARN]: Unable to resolve texture reference: #missing in minecolonies:item/blockhutplantation
[16:19:21] [Worker-Main-15/WARN]: Unable to resolve texture reference: #missing in refinedpipes:block/pipe/item/basic/straight
[16:19:21] [Worker-Main-15/WARN]: Unable to resolve texture reference: #missing in silentgear:item/gear_smithing_table
[16:19:21] [Worker-Main-15/WARN]: Unable to resolve texture reference: #missing in minecolonies:block/decorationcontroller
[16:19:21] [Worker-Main-15/WARN]: Unable to resolve texture reference: #missing in refinedpipes:item/advanced_fluid_pipe
[16:19:21] [Worker-Main-15/WARN]: Unable to resolve texture reference: #missing in minecolonies:block/blockhutplantation
[16:19:21] [Worker-Main-15/WARN]: Unable to resolve texture reference: #down in ars_nouveau:block/enchanting_apparatus
[16:19:21] [Worker-Main-15/WARN]: Unable to resolve texture reference: #up in ars_nouveau:block/enchanting_apparatus
[16:19:21] [Worker-Main-15/WARN]: Unable to resolve texture reference: #north in ars_nouveau:block/enchanting_apparatus
[16:19:21] [Worker-Main-15/WARN]: Unable to resolve texture reference: #south in ars_nouveau:block/enchanting_apparatus
[16:19:21] [Worker-Main-15/WARN]: Unable to resolve texture reference: #west in ars_nouveau:block/enchanting_apparatus
[16:19:21] [Worker-Main-15/WARN]: Unable to resolve texture reference: #east in ars_nouveau:block/enchanting_apparatus
[16:19:21] [Worker-Main-15/WARN]: Unable to resolve texture reference: #missing in refinedpipes:item/advanced_item_pipe
[16:19:21] [Worker-Main-15/WARN]: Unable to resolve texture reference: #missingno in ars_nouveau:item/light_block
[16:19:21] [Worker-Main-15/WARN]: Unable to resolve texture reference: #missing in refinedpipes:block/pipe/item/advanced/straight
[16:19:21] [Worker-Main-15/WARN]: Unable to resolve texture reference: #down in ars_nouveau:block/empty
[16:19:21] [Worker-Main-15/WARN]: Unable to resolve texture reference: #up in ars_nouveau:block/empty
[16:19:21] [Worker-Main-15/WARN]: Unable to resolve texture reference: #north in ars_nouveau:block/empty
[16:19:21] [Worker-Main-15/WARN]: Unable to resolve texture reference: #south in ars_nouveau:block/empty
[16:19:21] [Worker-Main-15/WARN]: Unable to resolve texture reference: #west in ars_nouveau:block/empty
[16:19:21] [Worker-Main-15/WARN]: Unable to resolve texture reference: #east in ars_nouveau:block/empty
[16:19:21] [Worker-Main-15/WARN]: Unable to resolve texture reference: #missing in refinedpipes:block/pipe/item/improved/straight
[16:19:21] [Worker-Main-15/WARN]: Unable to resolve texture reference: #missing in silentgear:item/material_grader
[16:19:21] [Worker-Main-15/WARN]: Unable to resolve texture reference: #missing in refinedpipes:item/improved_energy_pipe
[16:19:21] [Worker-Main-15/WARN]: Unable to resolve texture reference: #missing in refinedpipes:item/ultimate_energy_pipe
[16:19:21] [Worker-Main-15/WARN]: Unable to resolve texture reference: #missing in refinedpipes:item/improved_fluid_pipe
[16:19:21] [Worker-Main-15/WARN]: Unable to resolve texture reference: #missing in refinedpipes:item/elite_fluid_pipe
[16:19:21] [Worker-Main-15/WARN]: Unable to resolve texture reference: #missing in minecolonies:item/decorationcontroller
[16:19:21] [Worker-Main-15/WARN]: Unable to resolve texture reference: #missing in refinedpipes:block/pipe/fluid/basic/straight
[16:19:21] [Worker-Main-15/WARN]: Unable to resolve texture reference: #missing in refinedpipes:block/pipe/fluid/ultimate/straight
[16:19:21] [Worker-Main-15/WARN]: Unable to resolve texture reference: #missing in refinedpipes:block/pipe/energy/elite/straight
[16:19:21] [Worker-Main-15/WARN]: Unable to resolve texture reference: #missing in refinedpipes:block/pipe/energy/ultimate/straight
[16:19:21] [Worker-Main-15/WARN]: Unable to resolve texture reference: #missing in refinedpipes:item/improved_item_pipe
[16:19:21] [Worker-Main-15/WARN]: Unable to resolve texture reference: #missing in refinedpipes:item/ultimate_fluid_pipe
[16:19:21] [Worker-Main-15/WARN]: Unable to resolve texture reference: #missing in refinedpipes:block/pipe/energy/basic/straight
[16:19:21] [Worker-Main-15/WARN]: Unable to resolve texture reference: #missing in refinedpipes:item/advanced_energy_pipe
[16:19:21] [Worker-Main-15/WARN]: Unable to resolve texture reference: #missing in refinedpipes:item/basic_fluid_pipe
[16:19:21] [Worker-Main-15/WARN]: Unable to resolve texture reference: #missing in refinedpipes:item/basic_energy_pipe
[16:19:21] [Worker-Main-15/WARN]: Unable to resolve texture reference: #missing in refinedpipes:block/pipe/fluid/elite/straight
[16:19:21] [Worker-Main-15/INFO]: Stitching Revolver Textures!
[16:19:24] [Worker-Main-12/ERROR]: Using missing texture, unable to load minecraft:textures/block/bubble_block.png : java.io.FileNotFoundException: minecraft:textures/block/bubble_block.png
[16:19:24] [Worker-Main-14/ERROR]: Using missing texture, unable to load ars_nouveau:textures/blocks/ars_nouveau_gold.png : java.io.FileNotFoundException: ars_nouveau:textures/blocks/ars_nouveau_gold.png
[16:19:25] [Worker-Main-16/ERROR]: Using missing texture, unable to load supplementaries:textures/block/flower_pot.png : java.io.FileNotFoundException: supplementaries:textures/block/flower_pot.png
[16:19:26] [Worker-Main-19/ERROR]: Using missing texture, unable to load ars_nouveau:textures/blocks/active_outer.png : java.io.FileNotFoundException: ars_nouveau:textures/blocks/active_outer.png
[16:19:26] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:19:26] [Worker-Main-14/ERROR]: Using missing texture, unable to load ars_nouveau:textures/blocks/active_middle.png : java.io.FileNotFoundException: ars_nouveau:textures/blocks/active_middle.png
[16:19:26] [Worker-Main-19/ERROR]: Using missing texture, unable to load supplementaries:textures/blocks/laser_beam_end.png : java.io.FileNotFoundException: supplementaries:textures/blocks/laser_beam_end.png
[16:19:27] [Worker-Main-16/ERROR]: Using missing texture, unable to load ars_nouveau:textures/blocks/active_inner.png : java.io.FileNotFoundException: ars_nouveau:textures/blocks/active_inner.png
[16:19:28] [Worker-Main-14/ERROR]: Using missing texture, unable to load supplementaries:textures/blocks/amethyst_block.png : java.io.FileNotFoundException: supplementaries:textures/blocks/amethyst_block.png
[16:19:29] [Worker-Main-16/ERROR]: Using missing texture, unable to load supplementaries:textures/blocks/laser_overlay.png : java.io.FileNotFoundException: supplementaries:textures/blocks/laser_overlay.png
[16:19:29] [Worker-Main-14/ERROR]: Using missing texture, unable to load supplementaries:textures/blocks/laser_beam.png : java.io.FileNotFoundException: supplementaries:textures/blocks/laser_beam.png
[16:19:33] [Worker-Main-18/WARN]: Unused frames in sprite refinedstorage:block/destructor/cutouts/connected: [20, 21, 22, 23]
[16:19:36] [Worker-Main-14/WARN]: Unused frames in sprite cyclic:blocks/node/front_fluid: [7]
[16:19:36] [Worker-Main-12/WARN]: Unused frames in sprite cyclic:blocks/node/front_energy: [7]
[16:19:36] [Worker-Main-13/WARN]: Unused frames in sprite cyclic:blocks/node/front_item: [7]
[16:19:36] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:19:37] [Worker-Main-12/WARN]: Unused frames in sprite alexsmobs:item/hemolymph_sac: [3]
[16:19:39] [Worker-Main-16/ERROR]: Using missing texture, unable to load supplementaries:textures/entity/flags/brazil.png : java.io.FileNotFoundException: supplementaries:textures/entity/flags/brazil.png
[16:19:39] [Worker-Main-18/ERROR]: Using missing texture, unable to load supplementaries:textures/entity/flags/immersiveengineering_bevels.png : java.io.FileNotFoundException: supplementaries:textures/entity/flags/immersiveengineering_bevels.png
[16:19:39] [Worker-Main-13/ERROR]: Using missing texture, unable to load supplementaries:textures/entity/flags/immersiveengineering_treated_wood.png : java.io.FileNotFoundException: supplementaries:textures/entity/flags/immersiveengineering_treated_wood.png
[16:19:39] [Worker-Main-19/ERROR]: Using missing texture, unable to load supplementaries:textures/entity/flags/immersiveengineering_wolf_r.png : java.io.FileNotFoundException: supplementaries:textures/entity/flags/immersiveengineering_wolf_r.png
[16:19:39] [Worker-Main-18/ERROR]: Using missing texture, unable to load supplementaries:textures/entity/flags/immersiveengineering_wolf_l.png : java.io.FileNotFoundException: supplementaries:textures/entity/flags/immersiveengineering_wolf_l.png
[16:19:39] [Worker-Main-14/ERROR]: Using missing texture, unable to load supplementaries:textures/entity/flags/immersiveengineering_windmill.png : java.io.FileNotFoundException: supplementaries:textures/entity/flags/immersiveengineering_windmill.png
[16:19:39] [Worker-Main-18/ERROR]: Using missing texture, unable to load supplementaries:textures/entity/flags/immersiveengineering_wolf.png : java.io.FileNotFoundException: supplementaries:textures/entity/flags/immersiveengineering_wolf.png
[16:19:39] [Worker-Main-18/ERROR]: Using missing texture, unable to load supplementaries:textures/entity/flags/immersiveengineering_ornate.png : java.io.FileNotFoundException: supplementaries:textures/entity/flags/immersiveengineering_ornate.png
[16:19:39] [Worker-Main-16/ERROR]: Using missing texture, unable to load supplementaries:textures/entity/flags/immersiveengineering_hammer.png : java.io.FileNotFoundException: supplementaries:textures/entity/flags/immersiveengineering_hammer.png
[16:19:40] [Render thread/INFO]: Loading context 'create:context/contraption'
[16:19:40] [Render thread/ERROR]: Shader compilation log for flywheel:model: WARNING: 0:2: extension 'GL_ARB_conservative_depth' is not supported

[16:19:40] [Render thread/ERROR]: #version 150
#extension GL_ARB_conservative_depth : enable
#define VERTEX_SHADER
#if defined(VERTEX_SHADER)
out float FragDistance;
#elif defined(FRAGMENT_SHADER)
in float FragDistance;
#endif
uniform vec4 uFogColor;
uniform vec2 uFogRange;

float cylindrical_distance(vec3 worldPos, vec3 cameraPos) {
    float distXZ = length(worldPos.xz - cameraPos.xz);
    float distY = abs(worldPos.y - cameraPos.y);
    return max(distXZ, distY);
}

float cylindrical_distance(vec3 worldPos) {
    float distXZ = length(worldPos.xz);
    float distY = abs(worldPos.y);
    return max(distXZ, distY);
}

float FLWFogFactor() {
    return (uFogRange.y - FragDistance) / (uFogRange.y - uFogRange.x);
}
// Adjust the [0,1] normalized lightmap value based on the texture matrix from LightTexture#enableLightmap
vec2 shiftLight(vec2 lm) {
    return lm * 0.99609375 + 0.03125;// * 255/256 + 1/32
}


uniform sampler3D uLightVolume;

uniform sampler2D uBlockAtlas;
uniform sampler2D uLightMap;

uniform vec3 uLightBoxSize;
uniform vec3 uLightBoxMin;
uniform mat4 uModel;

uniform float uTime;
uniform mat4 uViewProjection;
uniform vec3 uCameraPos;

void FLWFinalizeNormal(inout vec3 normal) {
    mat3 m;
    m[0] = uModel[0].xyz;
    m[1] = uModel[1].xyz;
    m[2] = uModel[2].xyz;
    normal = m * normal;
}

#if defined(VERTEX_SHADER)

out vec3 BoxCoord;

void FLWFinalizeWorldPos(inout vec4 worldPos) {
    worldPos = uModel * worldPos;

    BoxCoord = (worldPos.xyz - uLightBoxMin) / uLightBoxSize;

    FragDistance = max(length(worldPos.xz), abs(worldPos.y)); // cylindrical fog

    gl_Position = uViewProjection * worldPos;
}

#elif defined(FRAGMENT_SHADER)


#define ALPHA_DISCARD 0.1
// optimize discard usage
#if defined(ALPHA_DISCARD)
#if defined(GL_ARB_conservative_depth)
layout (depth_greater) out float gl_FragDepth;
#endif
#endif

in vec3 BoxCoord;

out vec4 FragColor;

vec4 FLWBlockTexture(vec2 texCoords) {
    return texture(uBlockAtlas, texCoords);
}

void FLWFinalizeColor(vec4 color) {
    float a = color.a;
    float fog = clamp(FLWFogFactor(), 0., 1.);

    color = mix(uFogColor, color, fog);
    color.a = a;

    #if defined(ALPHA_DISCARD)
    if (color.a < ALPHA_DISCARD) {
        discard;
    }
    #endif

    FragColor = color;
}

vec4 FLWLight(vec2 lightCoords) {
    lightCoords = max(lightCoords, texture(uLightVolume, BoxCoord).rg);

    return texture(uLightMap, shiftLight(lightCoords));
}

#endif


float diffuse(vec3 normal) {
    vec3 n2 = normal * normal * vec3(.6, .25, .8);
    return min(n2.x + n2.y * (3. + normal.y) + n2.z, 1.);
}
struct Vertex {
    vec3 pos;
    vec2 texCoords;
    vec3 normal;
};

struct BlockFrag {
    vec2 texCoords;
    vec4 color;
    float diffuse;
    vec2 light;
};

#if defined(FRAGMENT_SHADER)
void fragment(BlockFrag r) {
    vec4 tex = FLWBlockTexture(r.texCoords);

    vec4 color = vec4(tex.rgb * FLWLight(r.light).rgb * r.diffuse, tex.a) * r.color;

    FLWFinalizeColor(color);
}
#endif




struct Instance {
    vec2 light;
    vec4 color;
    mat4 transform;
    mat3 normalMat;
};

#if defined(VERTEX_SHADER)
BlockFrag vertex(Vertex v, Instance i) {
    vec4 worldPos = i.transform * vec4(v.pos, 1.);

    vec3 norm = i.normalMat * v.normal;

    FLWFinalizeWorldPos(worldPos);
    FLWFinalizeNormal(norm);

    norm = normalize(norm);

    BlockFrag b;
    b.diffuse = diffuse(norm);
    b.texCoords = v.texCoords;
    b.light = i.light;
    #if defined(DEBUG_NORMAL)
    b.color = vec4(norm, 1.);
    #else
    b.color = i.color;
    #endif
    return b;
}
#endif

in vec3 a_v_pos;
in vec2 a_v_texCoords;
in vec3 a_v_normal;
in vec2 a_i_light;
in vec4 a_i_color;
in mat4 a_i_transform;
in mat3 a_i_normalMat;
out vec2 v2f_texCoords;
out vec4 v2f_color;
out float v2f_diffuse;
out vec2 v2f_light;
void main() {
Vertex v;
v.pos = a_v_pos;
v.texCoords = a_v_texCoords;
v.normal = a_v_normal;
Instance i;
i.light = a_i_light;
i.color = a_i_color;
i.transform = a_i_transform;
i.normalMat = a_i_normalMat;
BlockFrag o = vertex(v, i);
v2f_texCoords = o.texCoords;
v2f_color = o.color;
v2f_diffuse = o.diffuse;
v2f_light = o.light;
}
[16:19:40] [Render thread/ERROR]: Shader compilation log for flywheel:model: WARNING: 0:2: extension 'GL_ARB_conservative_depth' is not supported

[16:19:40] [Render thread/ERROR]: #version 150
#extension GL_ARB_conservative_depth : enable
#define FRAGMENT_SHADER
#if defined(VERTEX_SHADER)
out float FragDistance;
#elif defined(FRAGMENT_SHADER)
in float FragDistance;
#endif
uniform vec4 uFogColor;
uniform vec2 uFogRange;

float cylindrical_distance(vec3 worldPos, vec3 cameraPos) {
    float distXZ = length(worldPos.xz - cameraPos.xz);
    float distY = abs(worldPos.y - cameraPos.y);
    return max(distXZ, distY);
}

float cylindrical_distance(vec3 worldPos) {
    float distXZ = length(worldPos.xz);
    float distY = abs(worldPos.y);
    return max(distXZ, distY);
}

float FLWFogFactor() {
    return (uFogRange.y - FragDistance) / (uFogRange.y - uFogRange.x);
}
// Adjust the [0,1] normalized lightmap value based on the texture matrix from LightTexture#enableLightmap
vec2 shiftLight(vec2 lm) {
    return lm * 0.99609375 + 0.03125;// * 255/256 + 1/32
}


uniform sampler3D uLightVolume;

uniform sampler2D uBlockAtlas;
uniform sampler2D uLightMap;

uniform vec3 uLightBoxSize;
uniform vec3 uLightBoxMin;
uniform mat4 uModel;

uniform float uTime;
uniform mat4 uViewProjection;
uniform vec3 uCameraPos;

void FLWFinalizeNormal(inout vec3 normal) {
    mat3 m;
    m[0] = uModel[0].xyz;
    m[1] = uModel[1].xyz;
    m[2] = uModel[2].xyz;
    normal = m * normal;
}

#if defined(VERTEX_SHADER)

out vec3 BoxCoord;

void FLWFinalizeWorldPos(inout vec4 worldPos) {
    worldPos = uModel * worldPos;

    BoxCoord = (worldPos.xyz - uLightBoxMin) / uLightBoxSize;

    FragDistance = max(length(worldPos.xz), abs(worldPos.y)); // cylindrical fog

    gl_Position = uViewProjection * worldPos;
}

#elif defined(FRAGMENT_SHADER)


#define ALPHA_DISCARD 0.1
// optimize discard usage
#if defined(ALPHA_DISCARD)
#if defined(GL_ARB_conservative_depth)
layout (depth_greater) out float gl_FragDepth;
#endif
#endif

in vec3 BoxCoord;

out vec4 FragColor;

vec4 FLWBlockTexture(vec2 texCoords) {
    return texture(uBlockAtlas, texCoords);
}

void FLWFinalizeColor(vec4 color) {
    float a = color.a;
    float fog = clamp(FLWFogFactor(), 0., 1.);

    color = mix(uFogColor, color, fog);
    color.a = a;

    #if defined(ALPHA_DISCARD)
    if (color.a < ALPHA_DISCARD) {
        discard;
    }
    #endif

    FragColor = color;
}

vec4 FLWLight(vec2 lightCoords) {
    lightCoords = max(lightCoords, texture(uLightVolume, BoxCoord).rg);

    return texture(uLightMap, shiftLight(lightCoords));
}

#endif


float diffuse(vec3 normal) {
    vec3 n2 = normal * normal * vec3(.6, .25, .8);
    return min(n2.x + n2.y * (3. + normal.y) + n2.z, 1.);
}
struct Vertex {
    vec3 pos;
    vec2 texCoords;
    vec3 normal;
};

struct BlockFrag {
    vec2 texCoords;
    vec4 color;
    float diffuse;
    vec2 light;
};

#if defined(FRAGMENT_SHADER)
void fragment(BlockFrag r) {
    vec4 tex = FLWBlockTexture(r.texCoords);

    vec4 color = vec4(tex.rgb * FLWLight(r.light).rgb * r.diffuse, tex.a) * r.color;

    FLWFinalizeColor(color);
}
#endif




struct Instance {
    vec2 light;
    vec4 color;
    mat4 transform;
    mat3 normalMat;
};

#if defined(VERTEX_SHADER)
BlockFrag vertex(Vertex v, Instance i) {
    vec4 worldPos = i.transform * vec4(v.pos, 1.);

    vec3 norm = i.normalMat * v.normal;

    FLWFinalizeWorldPos(worldPos);
    FLWFinalizeNormal(norm);

    norm = normalize(norm);

    BlockFrag b;
    b.diffuse = diffuse(norm);
    b.texCoords = v.texCoords;
    b.light = i.light;
    #if defined(DEBUG_NORMAL)
    b.color = vec4(norm, 1.);
    #else
    b.color = i.color;
    #endif
    return b;
}
#endif

in vec2 v2f_texCoords;
in vec4 v2f_color;
in float v2f_diffuse;
in vec2 v2f_light;
void main() {
BlockFrag o;
o.texCoords = v2f_texCoords;
o.color = v2f_color;
o.diffuse = v2f_diffuse;
o.light = v2f_light;
fragment(o);
}
[16:19:40] [Render thread/ERROR]: Shader compilation log for flywheel:model: WARNING: 0:2: extension 'GL_ARB_conservative_depth' is not supported

[16:19:40] [Render thread/ERROR]: #version 150
#extension GL_ARB_conservative_depth : enable
#define VERTEX_SHADER
#define DEBUG_NORMAL
#if defined(VERTEX_SHADER)
out float FragDistance;
#elif defined(FRAGMENT_SHADER)
in float FragDistance;
#endif
uniform vec4 uFogColor;
uniform vec2 uFogRange;

float cylindrical_distance(vec3 worldPos, vec3 cameraPos) {
    float distXZ = length(worldPos.xz - cameraPos.xz);
    float distY = abs(worldPos.y - cameraPos.y);
    return max(distXZ, distY);
}

float cylindrical_distance(vec3 worldPos) {
    float distXZ = length(worldPos.xz);
    float distY = abs(worldPos.y);
    return max(distXZ, distY);
}

float FLWFogFactor() {
    return (uFogRange.y - FragDistance) / (uFogRange.y - uFogRange.x);
}
// Adjust the [0,1] normalized lightmap value based on the texture matrix from LightTexture#enableLightmap
vec2 shiftLight(vec2 lm) {
    return lm * 0.99609375 + 0.03125;// * 255/256 + 1/32
}


uniform sampler3D uLightVolume;

uniform sampler2D uBlockAtlas;
uniform sampler2D uLightMap;

uniform vec3 uLightBoxSize;
uniform vec3 uLightBoxMin;
uniform mat4 uModel;

uniform float uTime;
uniform mat4 uViewProjection;
uniform vec3 uCameraPos;

void FLWFinalizeNormal(inout vec3 normal) {
    mat3 m;
    m[0] = uModel[0].xyz;
    m[1] = uModel[1].xyz;
    m[2] = uModel[2].xyz;
    normal = m * normal;
}

#if defined(VERTEX_SHADER)

out vec3 BoxCoord;

void FLWFinalizeWorldPos(inout vec4 worldPos) {
    worldPos = uModel * worldPos;

    BoxCoord = (worldPos.xyz - uLightBoxMin) / uLightBoxSize;

    FragDistance = max(length(worldPos.xz), abs(worldPos.y)); // cylindrical fog

    gl_Position = uViewProjection * worldPos;
}

#elif defined(FRAGMENT_SHADER)


#define ALPHA_DISCARD 0.1
// optimize discard usage
#if defined(ALPHA_DISCARD)
#if defined(GL_ARB_conservative_depth)
layout (depth_greater) out float gl_FragDepth;
#endif
#endif

in vec3 BoxCoord;

out vec4 FragColor;

vec4 FLWBlockTexture(vec2 texCoords) {
    return texture(uBlockAtlas, texCoords);
}

void FLWFinalizeColor(vec4 color) {
    float a = color.a;
    float fog = clamp(FLWFogFactor(), 0., 1.);

    color = mix(uFogColor, color, fog);
    color.a = a;

    #if defined(ALPHA_DISCARD)
    if (color.a < ALPHA_DISCARD) {
        discard;
    }
    #endif

    FragColor = color;
}

vec4 FLWLight(vec2 lightCoords) {
    lightCoords = max(lightCoords, texture(uLightVolume, BoxCoord).rg);

    return texture(uLightMap, shiftLight(lightCoords));
}

#endif


float diffuse(vec3 normal) {
    vec3 n2 = normal * normal * vec3(.6, .25, .8);
    return min(n2.x + n2.y * (3. + normal.y) + n2.z, 1.);
}
struct Vertex {
    vec3 pos;
    vec2 texCoords;
    vec3 normal;
};

struct BlockFrag {
    vec2 texCoords;
    vec4 color;
    float diffuse;
    vec2 light;
};

#if defined(FRAGMENT_SHADER)
void fragment(BlockFrag r) {
    vec4 tex = FLWBlockTexture(r.texCoords);

    vec4 color = vec4(tex.rgb * FLWLight(r.light).rgb * r.diffuse, tex.a) * r.color;

    FLWFinalizeColor(color);
}
#endif




struct Instance {
    vec2 light;
    vec4 color;
    mat4 transform;
    mat3 normalMat;
};

#if defined(VERTEX_SHADER)
BlockFrag vertex(Vertex v, Instance i) {
    vec4 worldPos = i.transform * vec4(v.pos, 1.);

    vec3 norm = i.normalMat * v.normal;

    FLWFinalizeWorldPos(worldPos);
    FLWFinalizeNormal(norm);

    norm = normalize(norm);

    BlockFrag b;
    b.diffuse = diffuse(norm);
    b.texCoords = v.texCoords;
    b.light = i.light;
    #if defined(DEBUG_NORMAL)
    b.color = vec4(norm, 1.);
    #else
    b.color = i.color;
    #endif
    return b;
}
#endif

in vec3 a_v_pos;
in vec2 a_v_texCoords;
in vec3 a_v_normal;
in vec2 a_i_light;
in vec4 a_i_color;
in mat4 a_i_transform;
in mat3 a_i_normalMat;
out vec2 v2f_texCoords;
out vec4 v2f_color;
out float v2f_diffuse;
out vec2 v2f_light;
void main() {
Vertex v;
v.pos = a_v_pos;
v.texCoords = a_v_texCoords;
v.normal = a_v_normal;
Instance i;
i.light = a_i_light;
i.color = a_i_color;
i.transform = a_i_transform;
i.normalMat = a_i_normalMat;
BlockFrag o = vertex(v, i);
v2f_texCoords = o.texCoords;
v2f_color = o.color;
v2f_diffuse = o.diffuse;
v2f_light = o.light;
}
[16:19:40] [Render thread/ERROR]: Shader compilation log for flywheel:model: WARNING: 0:2: extension 'GL_ARB_conservative_depth' is not supported

[16:19:40] [Render thread/ERROR]: #version 150
#extension GL_ARB_conservative_depth : enable
#define FRAGMENT_SHADER
#define DEBUG_NORMAL
#if defined(VERTEX_SHADER)
out float FragDistance;
#elif defined(FRAGMENT_SHADER)
in float FragDistance;
#endif
uniform vec4 uFogColor;
uniform vec2 uFogRange;

float cylindrical_distance(vec3 worldPos, vec3 cameraPos) {
    float distXZ = length(worldPos.xz - cameraPos.xz);
    float distY = abs(worldPos.y - cameraPos.y);
    return max(distXZ, distY);
}

float cylindrical_distance(vec3 worldPos) {
    float distXZ = length(worldPos.xz);
    float distY = abs(worldPos.y);
    return max(distXZ, distY);
}

float FLWFogFactor() {
    return (uFogRange.y - FragDistance) / (uFogRange.y - uFogRange.x);
}
// Adjust the [0,1] normalized lightmap value based on the texture matrix from LightTexture#enableLightmap
vec2 shiftLight(vec2 lm) {
    return lm * 0.99609375 + 0.03125;// * 255/256 + 1/32
}


uniform sampler3D uLightVolume;

uniform sampler2D uBlockAtlas;
uniform sampler2D uLightMap;

uniform vec3 uLightBoxSize;
uniform vec3 uLightBoxMin;
uniform mat4 uModel;

uniform float uTime;
uniform mat4 uViewProjection;
uniform vec3 uCameraPos;

void FLWFinalizeNormal(inout vec3 normal) {
    mat3 m;
    m[0] = uModel[0].xyz;
    m[1] = uModel[1].xyz;
    m[2] = uModel[2].xyz;
    normal = m * normal;
}

#if defined(VERTEX_SHADER)

out vec3 BoxCoord;

void FLWFinalizeWorldPos(inout vec4 worldPos) {
    worldPos = uModel * worldPos;

    BoxCoord = (worldPos.xyz - uLightBoxMin) / uLightBoxSize;

    FragDistance = max(length(worldPos.xz), abs(worldPos.y)); // cylindrical fog

    gl_Position = uViewProjection * worldPos;
}

#elif defined(FRAGMENT_SHADER)


#define ALPHA_DISCARD 0.1
// optimize discard usage
#if defined(ALPHA_DISCARD)
#if defined(GL_ARB_conservative_depth)
layout (depth_greater) out float gl_FragDepth;
#endif
#endif

in vec3 BoxCoord;

out vec4 FragColor;

vec4 FLWBlockTexture(vec2 texCoords) {
    return texture(uBlockAtlas, texCoords);
}

void FLWFinalizeColor(vec4 color) {
    float a = color.a;
    float fog = clamp(FLWFogFactor(), 0., 1.);

    color = mix(uFogColor, color, fog);
    color.a = a;

    #if defined(ALPHA_DISCARD)
    if (color.a < ALPHA_DISCARD) {
        discard;
    }
    #endif

    FragColor = color;
}

vec4 FLWLight(vec2 lightCoords) {
    lightCoords = max(lightCoords, texture(uLightVolume, BoxCoord).rg);

    return texture(uLightMap, shiftLight(lightCoords));
}

#endif


float diffuse(vec3 normal) {
    vec3 n2 = normal * normal * vec3(.6, .25, .8);
    return min(n2.x + n2.y * (3. + normal.y) + n2.z, 1.);
}
struct Vertex {
    vec3 pos;
    vec2 texCoords;
    vec3 normal;
};

struct BlockFrag {
    vec2 texCoords;
    vec4 color;
    float diffuse;
    vec2 light;
};

#if defined(FRAGMENT_SHADER)
void fragment(BlockFrag r) {
    vec4 tex = FLWBlockTexture(r.texCoords);

    vec4 color = vec4(tex.rgb * FLWLight(r.light).rgb * r.diffuse, tex.a) * r.color;

    FLWFinalizeColor(color);
}
#endif




struct Instance {
    vec2 light;
    vec4 color;
    mat4 transform;
    mat3 normalMat;
};

#if defined(VERTEX_SHADER)
BlockFrag vertex(Vertex v, Instance i) {
    vec4 worldPos = i.transform * vec4(v.pos, 1.);

    vec3 norm = i.normalMat * v.normal;

    FLWFinalizeWorldPos(worldPos);
    FLWFinalizeNormal(norm);

    norm = normalize(norm);

    BlockFrag b;
    b.diffuse = diffuse(norm);
    b.texCoords = v.texCoords;
    b.light = i.light;
    #if defined(DEBUG_NORMAL)
    b.color = vec4(norm, 1.);
    #else
    b.color = i.color;
    #endif
    return b;
}
#endif

in vec2 v2f_texCoords;
in vec4 v2f_color;
in float v2f_diffuse;
in vec2 v2f_light;
void main() {
BlockFrag o;
o.texCoords = v2f_texCoords;
o.color = v2f_color;
o.diffuse = v2f_diffuse;
o.light = v2f_light;
fragment(o);
}
[16:19:40] [Render thread/ERROR]: Shader compilation log for create:rotating: WARNING: 0:2: extension 'GL_ARB_conservative_depth' is not supported

[16:19:40] [Render thread/ERROR]: #version 150
#extension GL_ARB_conservative_depth : enable
#define VERTEX_SHADER
#if defined(VERTEX_SHADER)
out float FragDistance;
#elif defined(FRAGMENT_SHADER)
in float FragDistance;
#endif
uniform vec4 uFogColor;
uniform vec2 uFogRange;

float cylindrical_distance(vec3 worldPos, vec3 cameraPos) {
    float distXZ = length(worldPos.xz - cameraPos.xz);
    float distY = abs(worldPos.y - cameraPos.y);
    return max(distXZ, distY);
}

float cylindrical_distance(vec3 worldPos) {
    float distXZ = length(worldPos.xz);
    float distY = abs(worldPos.y);
    return max(distXZ, distY);
}

float FLWFogFactor() {
    return (uFogRange.y - FragDistance) / (uFogRange.y - uFogRange.x);
}
// Adjust the [0,1] normalized lightmap value based on the texture matrix from LightTexture#enableLightmap
vec2 shiftLight(vec2 lm) {
    return lm * 0.99609375 + 0.03125;// * 255/256 + 1/32
}


uniform sampler3D uLightVolume;

uniform sampler2D uBlockAtlas;
uniform sampler2D uLightMap;

uniform vec3 uLightBoxSize;
uniform vec3 uLightBoxMin;
uniform mat4 uModel;

uniform float uTime;
uniform mat4 uViewProjection;
uniform vec3 uCameraPos;

void FLWFinalizeNormal(inout vec3 normal) {
    mat3 m;
    m[0] = uModel[0].xyz;
    m[1] = uModel[1].xyz;
    m[2] = uModel[2].xyz;
    normal = m * normal;
}

#if defined(VERTEX_SHADER)

out vec3 BoxCoord;

void FLWFinalizeWorldPos(inout vec4 worldPos) {
    worldPos = uModel * worldPos;

    BoxCoord = (worldPos.xyz - uLightBoxMin) / uLightBoxSize;

    FragDistance = max(length(worldPos.xz), abs(worldPos.y)); // cylindrical fog

    gl_Position = uViewProjection * worldPos;
}

#elif defined(FRAGMENT_SHADER)


#define ALPHA_DISCARD 0.1
// optimize discard usage
#if defined(ALPHA_DISCARD)
#if defined(GL_ARB_conservative_depth)
layout (depth_greater) out float gl_FragDepth;
#endif
#endif

in vec3 BoxCoord;

out vec4 FragColor;

vec4 FLWBlockTexture(vec2 texCoords) {
    return texture(uBlockAtlas, texCoords);
}

void FLWFinalizeColor(vec4 color) {
    float a = color.a;
    float fog = clamp(FLWFogFactor(), 0., 1.);

    color = mix(uFogColor, color, fog);
    color.a = a;

    #if defined(ALPHA_DISCARD)
    if (color.a < ALPHA_DISCARD) {
        discard;
    }
    #endif

    FragColor = color;
}

vec4 FLWLight(vec2 lightCoords) {
    lightCoords = max(lightCoords, texture(uLightVolume, BoxCoord).rg);

    return texture(uLightMap, shiftLight(lightCoords));
}

#endif


mat4 rotate(vec3 axis, float angle) {
    float s = sin(angle);
    float c = cos(angle);
    float oc = 1. - c;

    vec3 sa = axis * s;

    mat4 mr = mat4(1.);
    mr[0].xyz = oc * axis.xxz * axis.xyx + vec3(c, sa.z, -sa.y);
    mr[1].xyz = oc * axis.xyy * axis.yyz + vec3(-sa.z, c, sa.x);
    mr[2].xyz = oc * axis.zyz * axis.xzz + vec3(sa.y, -sa.x, c);

    return mr;
}

mat4 rotation(vec3 rot) {
    return rotate(vec3(0., 1., 0.), rot.y) * rotate(vec3(0., 0., 1.), rot.z) * rotate(vec3(1., 0., 0.), rot.x);
}

mat3 modelToNormal(mat4 mat) {
    // Discard the edges. This won't be accurate for scaled or skewed matrices,
    // but we don't have to work with those often.
    mat3 m;
    m[0] = mat[0].xyz;
    m[1] = mat[1].xyz;
    m[2] = mat[2].xyz;
    return m;
}

float diffuse(vec3 normal) {
    vec3 n2 = normal * normal * vec3(.6, .25, .8);
    return min(n2.x + n2.y * (3. + normal.y) + n2.z, 1.);
}
struct Vertex {
    vec3 pos;
    vec2 texCoords;
    vec3 normal;
};

struct BlockFrag {
    vec2 texCoords;
    vec4 color;
    float diffuse;
    vec2 light;
};

#if defined(FRAGMENT_SHADER)
void fragment(BlockFrag r) {
    vec4 tex = FLWBlockTexture(r.texCoords);

    vec4 color = vec4(tex.rgb * FLWLight(r.light).rgb * r.diffuse, tex.a) * r.color;

    FLWFinalizeColor(color);
}
#endif
#define PI 3.1415926538




struct Rotating {
    vec2 light;
    vec4 color;
    vec3 pos;
    float speed;
    float offset;
    vec3 axis;
};




mat4 kineticRotation(float offset, float speed, vec3 axis) {
    float degrees = offset + uTime * speed * 3./10.;
    float angle = fract(degrees / 360.) * PI * 2.;

    return rotate(axis, angle);
}

#if defined(VERTEX_SHADER)
BlockFrag vertex(Vertex v, Rotating instance) {
    mat4 spin = kineticRotation(instance.offset, instance.speed, instance.axis);

    vec4 worldPos = spin * vec4(v.pos - .5, 1.);
    worldPos += vec4(instance.pos + .5, 0.);

    vec3 norm = modelToNormal(spin) * v.normal;

    FLWFinalizeWorldPos(worldPos);
    FLWFinalizeNormal(norm);

    BlockFrag b;
    b.diffuse = diffuse(norm);
    b.texCoords = v.texCoords;
    b.light = instance.light;

    #if defined(DEBUG_RAINBOW)
    b.color = instance.color;
    #elif defined(DEBUG_NORMAL)
    b.color = vec4(norm, 1.);
    #else
    b.color = vec4(1.);
    #endif

    return b;
}
#endif

in vec3 a_v_pos;
in vec2 a_v_texCoords;
in vec3 a_v_normal;
in vec2 a_i_light;
in vec4 a_i_color;
in vec3 a_i_pos;
in float a_i_speed;
in float a_i_offset;
in vec3 a_i_axis;
out vec2 v2f_texCoords;
out vec4 v2f_color;
out float v2f_diffuse;
out vec2 v2f_light;
void main() {
Vertex v;
v.pos = a_v_pos;
v.texCoords = a_v_texCoords;
v.normal = a_v_normal;
Rotating i;
i.light = a_i_light;
i.color = a_i_color;
i.pos = a_i_pos;
i.speed = a_i_speed;
i.offset = a_i_offset;
i.axis = a_i_axis;
BlockFrag o = vertex(v, i);
v2f_texCoords = o.texCoords;
v2f_color = o.color;
v2f_diffuse = o.diffuse;
v2f_light = o.light;
}
[16:19:40] [Render thread/ERROR]: Shader compilation log for create:rotating: WARNING: 0:2: extension 'GL_ARB_conservative_depth' is not supported

[16:19:40] [Render thread/ERROR]: #version 150
#extension GL_ARB_conservative_depth : enable
#define FRAGMENT_SHADER
#if defined(VERTEX_SHADER)
out float FragDistance;
#elif defined(FRAGMENT_SHADER)
in float FragDistance;
#endif
uniform vec4 uFogColor;
uniform vec2 uFogRange;

float cylindrical_distance(vec3 worldPos, vec3 cameraPos) {
    float distXZ = length(worldPos.xz - cameraPos.xz);
    float distY = abs(worldPos.y - cameraPos.y);
    return max(distXZ, distY);
}

float cylindrical_distance(vec3 worldPos) {
    float distXZ = length(worldPos.xz);
    float distY = abs(worldPos.y);
    return max(distXZ, distY);
}

float FLWFogFactor() {
    return (uFogRange.y - FragDistance) / (uFogRange.y - uFogRange.x);
}
// Adjust the [0,1] normalized lightmap value based on the texture matrix from LightTexture#enableLightmap
vec2 shiftLight(vec2 lm) {
    return lm * 0.99609375 + 0.03125;// * 255/256 + 1/32
}


uniform sampler3D uLightVolume;

uniform sampler2D uBlockAtlas;
uniform sampler2D uLightMap;

uniform vec3 uLightBoxSize;
uniform vec3 uLightBoxMin;
uniform mat4 uModel;

uniform float uTime;
uniform mat4 uViewProjection;
uniform vec3 uCameraPos;

void FLWFinalizeNormal(inout vec3 normal) {
    mat3 m;
    m[0] = uModel[0].xyz;
    m[1] = uModel[1].xyz;
    m[2] = uModel[2].xyz;
    normal = m * normal;
}

#if defined(VERTEX_SHADER)

out vec3 BoxCoord;

void FLWFinalizeWorldPos(inout vec4 worldPos) {
    worldPos = uModel * worldPos;

    BoxCoord = (worldPos.xyz - uLightBoxMin) / uLightBoxSize;

    FragDistance = max(length(worldPos.xz), abs(worldPos.y)); // cylindrical fog

    gl_Position = uViewProjection * worldPos;
}

#elif defined(FRAGMENT_SHADER)


#define ALPHA_DISCARD 0.1
// optimize discard usage
#if defined(ALPHA_DISCARD)
#if defined(GL_ARB_conservative_depth)
layout (depth_greater) out float gl_FragDepth;
#endif
#endif

in vec3 BoxCoord;

out vec4 FragColor;

vec4 FLWBlockTexture(vec2 texCoords) {
    return texture(uBlockAtlas, texCoords);
}

void FLWFinalizeColor(vec4 color) {
    float a = color.a;
    float fog = clamp(FLWFogFactor(), 0., 1.);

    color = mix(uFogColor, color, fog);
    color.a = a;

    #if defined(ALPHA_DISCARD)
    if (color.a < ALPHA_DISCARD) {
        discard;
    }
    #endif

    FragColor = color;
}

vec4 FLWLight(vec2 lightCoords) {
    lightCoords = max(lightCoords, texture(uLightVolume, BoxCoord).rg);

    return texture(uLightMap, shiftLight(lightCoords));
}

#endif


mat4 rotate(vec3 axis, float angle) {
    float s = sin(angle);
    float c = cos(angle);
    float oc = 1. - c;

    vec3 sa = axis * s;

    mat4 mr = mat4(1.);
    mr[0].xyz = oc * axis.xxz * axis.xyx + vec3(c, sa.z, -sa.y);
    mr[1].xyz = oc * axis.xyy * axis.yyz + vec3(-sa.z, c, sa.x);
    mr[2].xyz = oc * axis.zyz * axis.xzz + vec3(sa.y, -sa.x, c);

    return mr;
}

mat4 rotation(vec3 rot) {
    return rotate(vec3(0., 1., 0.), rot.y) * rotate(vec3(0., 0., 1.), rot.z) * rotate(vec3(1., 0., 0.), rot.x);
}

mat3 modelToNormal(mat4 mat) {
    // Discard the edges. This won't be accurate for scaled or skewed matrices,
    // but we don't have to work with those often.
    mat3 m;
    m[0] = mat[0].xyz;
    m[1] = mat[1].xyz;
    m[2] = mat[2].xyz;
    return m;
}

float diffuse(vec3 normal) {
    vec3 n2 = normal * normal * vec3(.6, .25, .8);
    return min(n2.x + n2.y * (3. + normal.y) + n2.z, 1.);
}
struct Vertex {
    vec3 pos;
    vec2 texCoords;
    vec3 normal;
};

struct BlockFrag {
    vec2 texCoords;
    vec4 color;
    float diffuse;
    vec2 light;
};

#if defined(FRAGMENT_SHADER)
void fragment(BlockFrag r) {
    vec4 tex = FLWBlockTexture(r.texCoords);

    vec4 color = vec4(tex.rgb * FLWLight(r.light).rgb * r.diffuse, tex.a) * r.color;

    FLWFinalizeColor(color);
}
#endif
#define PI 3.1415926538




struct Rotating {
    vec2 light;
    vec4 color;
    vec3 pos;
    float speed;
    float offset;
    vec3 axis;
};




mat4 kineticRotation(float offset, float speed, vec3 axis) {
    float degrees = offset + uTime * speed * 3./10.;
    float angle = fract(degrees / 360.) * PI * 2.;

    return rotate(axis, angle);
}

#if defined(VERTEX_SHADER)
BlockFrag vertex(Vertex v, Rotating instance) {
    mat4 spin = kineticRotation(instance.offset, instance.speed, instance.axis);

    vec4 worldPos = spin * vec4(v.pos - .5, 1.);
    worldPos += vec4(instance.pos + .5, 0.);

    vec3 norm = modelToNormal(spin) * v.normal;

    FLWFinalizeWorldPos(worldPos);
    FLWFinalizeNormal(norm);

    BlockFrag b;
    b.diffuse = diffuse(norm);
    b.texCoords = v.texCoords;
    b.light = instance.light;

    #if defined(DEBUG_RAINBOW)
    b.color = instance.color;
    #elif defined(DEBUG_NORMAL)
    b.color = vec4(norm, 1.);
    #else
    b.color = vec4(1.);
    #endif

    return b;
}
#endif

in vec2 v2f_texCoords;
in vec4 v2f_color;
in float v2f_diffuse;
in vec2 v2f_light;
void main() {
BlockFrag o;
o.texCoords = v2f_texCoords;
o.color = v2f_color;
o.diffuse = v2f_diffuse;
o.light = v2f_light;
fragment(o);
}
[16:19:40] [Render thread/ERROR]: Shader compilation log for create:rotating: WARNING: 0:2: extension 'GL_ARB_conservative_depth' is not supported

[16:19:40] [Render thread/ERROR]: #version 150
#extension GL_ARB_conservative_depth : enable
#define VERTEX_SHADER
#define DEBUG_RAINBOW
#if defined(VERTEX_SHADER)
out float FragDistance;
#elif defined(FRAGMENT_SHADER)
in float FragDistance;
#endif
uniform vec4 uFogColor;
uniform vec2 uFogRange;

float cylindrical_distance(vec3 worldPos, vec3 cameraPos) {
    float distXZ = length(worldPos.xz - cameraPos.xz);
    float distY = abs(worldPos.y - cameraPos.y);
    return max(distXZ, distY);
}

float cylindrical_distance(vec3 worldPos) {
    float distXZ = length(worldPos.xz);
    float distY = abs(worldPos.y);
    return max(distXZ, distY);
}

float FLWFogFactor() {
    return (uFogRange.y - FragDistance) / (uFogRange.y - uFogRange.x);
}
// Adjust the [0,1] normalized lightmap value based on the texture matrix from LightTexture#enableLightmap
vec2 shiftLight(vec2 lm) {
    return lm * 0.99609375 + 0.03125;// * 255/256 + 1/32
}


uniform sampler3D uLightVolume;

uniform sampler2D uBlockAtlas;
uniform sampler2D uLightMap;

uniform vec3 uLightBoxSize;
uniform vec3 uLightBoxMin;
uniform mat4 uModel;

uniform float uTime;
uniform mat4 uViewProjection;
uniform vec3 uCameraPos;

void FLWFinalizeNormal(inout vec3 normal) {
    mat3 m;
    m[0] = uModel[0].xyz;
    m[1] = uModel[1].xyz;
    m[2] = uModel[2].xyz;
    normal = m * normal;
}

#if defined(VERTEX_SHADER)

out vec3 BoxCoord;

void FLWFinalizeWorldPos(inout vec4 worldPos) {
    worldPos = uModel * worldPos;

    BoxCoord = (worldPos.xyz - uLightBoxMin) / uLightBoxSize;

    FragDistance = max(length(worldPos.xz), abs(worldPos.y)); // cylindrical fog

    gl_Position = uViewProjection * worldPos;
}

#elif defined(FRAGMENT_SHADER)


#define ALPHA_DISCARD 0.1
// optimize discard usage
#if defined(ALPHA_DISCARD)
#if defined(GL_ARB_conservative_depth)
layout (depth_greater) out float gl_FragDepth;
#endif
#endif

in vec3 BoxCoord;

out vec4 FragColor;

vec4 FLWBlockTexture(vec2 texCoords) {
    return texture(uBlockAtlas, texCoords);
}

void FLWFinalizeColor(vec4 color) {
    float a = color.a;
    float fog = clamp(FLWFogFactor(), 0., 1.);

    color = mix(uFogColor, color, fog);
    color.a = a;

    #if defined(ALPHA_DISCARD)
    if (color.a < ALPHA_DISCARD) {
        discard;
    }
    #endif

    FragColor = color;
}

vec4 FLWLight(vec2 lightCoords) {
    lightCoords = max(lightCoords, texture(uLightVolume, BoxCoord).rg);

    return texture(uLightMap, shiftLight(lightCoords));
}

#endif


mat4 rotate(vec3 axis, float angle) {
    float s = sin(angle);
    float c = cos(angle);
    float oc = 1. - c;

    vec3 sa = axis * s;

    mat4 mr = mat4(1.);
    mr[0].xyz = oc * axis.xxz * axis.xyx + vec3(c, sa.z, -sa.y);
    mr[1].xyz = oc * axis.xyy * axis.yyz + vec3(-sa.z, c, sa.x);
    mr[2].xyz = oc * axis.zyz * axis.xzz + vec3(sa.y, -sa.x, c);

    return mr;
}

mat4 rotation(vec3 rot) {
    return rotate(vec3(0., 1., 0.), rot.y) * rotate(vec3(0., 0., 1.), rot.z) * rotate(vec3(1., 0., 0.), rot.x);
}

mat3 modelToNormal(mat4 mat) {
    // Discard the edges. This won't be accurate for scaled or skewed matrices,
    // but we don't have to work with those often.
    mat3 m;
    m[0] = mat[0].xyz;
    m[1] = mat[1].xyz;
    m[2] = mat[2].xyz;
    return m;
}

float diffuse(vec3 normal) {
    vec3 n2 = normal * normal * vec3(.6, .25, .8);
    return min(n2.x + n2.y * (3. + normal.y) + n2.z, 1.);
}
struct Vertex {
    vec3 pos;
    vec2 texCoords;
    vec3 normal;
};

struct BlockFrag {
    vec2 texCoords;
    vec4 color;
    float diffuse;
    vec2 light;
};

#if defined(FRAGMENT_SHADER)
void fragment(BlockFrag r) {
    vec4 tex = FLWBlockTexture(r.texCoords);

    vec4 color = vec4(tex.rgb * FLWLight(r.light).rgb * r.diffuse, tex.a) * r.color;

    FLWFinalizeColor(color);
}
#endif
#define PI 3.1415926538




struct Rotating {
    vec2 light;
    vec4 color;
    vec3 pos;
    float speed;
    float offset;
    vec3 axis;
};




mat4 kineticRotation(float offset, float speed, vec3 axis) {
    float degrees = offset + uTime * speed * 3./10.;
    float angle = fract(degrees / 360.) * PI * 2.;

    return rotate(axis, angle);
}

#if defined(VERTEX_SHADER)
BlockFrag vertex(Vertex v, Rotating instance) {
    mat4 spin = kineticRotation(instance.offset, instance.speed, instance.axis);

    vec4 worldPos = spin * vec4(v.pos - .5, 1.);
    worldPos += vec4(instance.pos + .5, 0.);

    vec3 norm = modelToNormal(spin) * v.normal;

    FLWFinalizeWorldPos(worldPos);
    FLWFinalizeNormal(norm);

    BlockFrag b;
    b.diffuse = diffuse(norm);
    b.texCoords = v.texCoords;
    b.light = instance.light;

    #if defined(DEBUG_RAINBOW)
    b.color = instance.color;
    #elif defined(DEBUG_NORMAL)
    b.color = vec4(norm, 1.);
    #else
    b.color = vec4(1.);
    #endif

    return b;
}
#endif

in vec3 a_v_pos;
in vec2 a_v_texCoords;
in vec3 a_v_normal;
in vec2 a_i_light;
in vec4 a_i_color;
in vec3 a_i_pos;
in float a_i_speed;
in float a_i_offset;
in vec3 a_i_axis;
out vec2 v2f_texCoords;
out vec4 v2f_color;
out float v2f_diffuse;
out vec2 v2f_light;
void main() {
Vertex v;
v.pos = a_v_pos;
v.texCoords = a_v_texCoords;
v.normal = a_v_normal;
Rotating i;
i.light = a_i_light;
i.color = a_i_color;
i.pos = a_i_pos;
i.speed = a_i_speed;
i.offset = a_i_offset;
i.axis = a_i_axis;
BlockFrag o = vertex(v, i);
v2f_texCoords = o.texCoords;
v2f_color = o.color;
v2f_diffuse = o.diffuse;
v2f_light = o.light;
}
[16:19:40] [Render thread/ERROR]: Shader compilation log for create:rotating: WARNING: 0:2: extension 'GL_ARB_conservative_depth' is not supported

[16:19:40] [Render thread/ERROR]: #version 150
#extension GL_ARB_conservative_depth : enable
#define FRAGMENT_SHADER
#define DEBUG_RAINBOW
#if defined(VERTEX_SHADER)
out float FragDistance;
#elif defined(FRAGMENT_SHADER)
in float FragDistance;
#endif
uniform vec4 uFogColor;
uniform vec2 uFogRange;

float cylindrical_distance(vec3 worldPos, vec3 cameraPos) {
    float distXZ = length(worldPos.xz - cameraPos.xz);
    float distY = abs(worldPos.y - cameraPos.y);
    return max(distXZ, distY);
}

float cylindrical_distance(vec3 worldPos) {
    float distXZ = length(worldPos.xz);
    float distY = abs(worldPos.y);
    return max(distXZ, distY);
}

float FLWFogFactor() {
    return (uFogRange.y - FragDistance) / (uFogRange.y - uFogRange.x);
}
// Adjust the [0,1] normalized lightmap value based on the texture matrix from LightTexture#enableLightmap
vec2 shiftLight(vec2 lm) {
    return lm * 0.99609375 + 0.03125;// * 255/256 + 1/32
}


uniform sampler3D uLightVolume;

uniform sampler2D uBlockAtlas;
uniform sampler2D uLightMap;

uniform vec3 uLightBoxSize;
uniform vec3 uLightBoxMin;
uniform mat4 uModel;

uniform float uTime;
uniform mat4 uViewProjection;
uniform vec3 uCameraPos;

void FLWFinalizeNormal(inout vec3 normal) {
    mat3 m;
    m[0] = uModel[0].xyz;
    m[1] = uModel[1].xyz;
    m[2] = uModel[2].xyz;
    normal = m * normal;
}

#if defined(VERTEX_SHADER)

out vec3 BoxCoord;

void FLWFinalizeWorldPos(inout vec4 worldPos) {
    worldPos = uModel * worldPos;

    BoxCoord = (worldPos.xyz - uLightBoxMin) / uLightBoxSize;

    FragDistance = max(length(worldPos.xz), abs(worldPos.y)); // cylindrical fog

    gl_Position = uViewProjection * worldPos;
}

#elif defined(FRAGMENT_SHADER)


#define ALPHA_DISCARD 0.1
// optimize discard usage
#if defined(ALPHA_DISCARD)
#if defined(GL_ARB_conservative_depth)
layout (depth_greater) out float gl_FragDepth;
#endif
#endif

in vec3 BoxCoord;

out vec4 FragColor;

vec4 FLWBlockTexture(vec2 texCoords) {
    return texture(uBlockAtlas, texCoords);
}

void FLWFinalizeColor(vec4 color) {
    float a = color.a;
    float fog = clamp(FLWFogFactor(), 0., 1.);

    color = mix(uFogColor, color, fog);
    color.a = a;

    #if defined(ALPHA_DISCARD)
    if (color.a < ALPHA_DISCARD) {
        discard;
    }
    #endif

    FragColor = color;
}

vec4 FLWLight(vec2 lightCoords) {
    lightCoords = max(lightCoords, texture(uLightVolume, BoxCoord).rg);

    return texture(uLightMap, shiftLight(lightCoords));
}

#endif


mat4 rotate(vec3 axis, float angle) {
    float s = sin(angle);
    float c = cos(angle);
    float oc = 1. - c;

    vec3 sa = axis * s;

    mat4 mr = mat4(1.);
    mr[0].xyz = oc * axis.xxz * axis.xyx + vec3(c, sa.z, -sa.y);
    mr[1].xyz = oc * axis.xyy * axis.yyz + vec3(-sa.z, c, sa.x);
    mr[2].xyz = oc * axis.zyz * axis.xzz + vec3(sa.y, -sa.x, c);

    return mr;
}

mat4 rotation(vec3 rot) {
    return rotate(vec3(0., 1., 0.), rot.y) * rotate(vec3(0., 0., 1.), rot.z) * rotate(vec3(1., 0., 0.), rot.x);
}

mat3 modelToNormal(mat4 mat) {
    // Discard the edges. This won't be accurate for scaled or skewed matrices,
    // but we don't have to work with those often.
    mat3 m;
    m[0] = mat[0].xyz;
    m[1] = mat[1].xyz;
    m[2] = mat[2].xyz;
    return m;
}

float diffuse(vec3 normal) {
    vec3 n2 = normal * normal * vec3(.6, .25, .8);
    return min(n2.x + n2.y * (3. + normal.y) + n2.z, 1.);
}
struct Vertex {
    vec3 pos;
    vec2 texCoords;
    vec3 normal;
};

struct BlockFrag {
    vec2 texCoords;
    vec4 color;
    float diffuse;
    vec2 light;
};

#if defined(FRAGMENT_SHADER)
void fragment(BlockFrag r) {
    vec4 tex = FLWBlockTexture(r.texCoords);

    vec4 color = vec4(tex.rgb * FLWLight(r.light).rgb * r.diffuse, tex.a) * r.color;

    FLWFinalizeColor(color);
}
#endif
#define PI 3.1415926538




struct Rotating {
    vec2 light;
    vec4 color;
    vec3 pos;
    float speed;
    float offset;
    vec3 axis;
};




mat4 kineticRotation(float offset, float speed, vec3 axis) {
    float degrees = offset + uTime * speed * 3./10.;
    float angle = fract(degrees / 360.) * PI * 2.;

    return rotate(axis, angle);
}

#if defined(VERTEX_SHADER)
BlockFrag vertex(Vertex v, Rotating instance) {
    mat4 spin = kineticRotation(instance.offset, instance.speed, instance.axis);

    vec4 worldPos = spin * vec4(v.pos - .5, 1.);
    worldPos += vec4(instance.pos + .5, 0.);

    vec3 norm = modelToNormal(spin) * v.normal;

    FLWFinalizeWorldPos(worldPos);
    FLWFinalizeNormal(norm);

    BlockFrag b;
    b.diffuse = diffuse(norm);
    b.texCoords = v.texCoords;
    b.light = instance.light;

    #if defined(DEBUG_RAINBOW)
    b.color = instance.color;
    #elif defined(DEBUG_NORMAL)
    b.color = vec4(norm, 1.);
    #else
    b.color = vec4(1.);
    #endif

    return b;
}
#endif

in vec2 v2f_texCoords;
in vec4 v2f_color;
in float v2f_diffuse;
in vec2 v2f_light;
void main() {
BlockFrag o;
o.texCoords = v2f_texCoords;
o.color = v2f_color;
o.diffuse = v2f_diffuse;
o.light = v2f_light;
fragment(o);
}
[16:19:40] [Render thread/ERROR]: Shader compilation log for create:rotating: WARNING: 0:2: extension 'GL_ARB_conservative_depth' is not supported

[16:19:40] [Render thread/ERROR]: #version 150
#extension GL_ARB_conservative_depth : enable
#define VERTEX_SHADER
#define DEBUG_NORMAL
#if defined(VERTEX_SHADER)
out float FragDistance;
#elif defined(FRAGMENT_SHADER)
in float FragDistance;
#endif
uniform vec4 uFogColor;
uniform vec2 uFogRange;

float cylindrical_distance(vec3 worldPos, vec3 cameraPos) {
    float distXZ = length(worldPos.xz - cameraPos.xz);
    float distY = abs(worldPos.y - cameraPos.y);
    return max(distXZ, distY);
}

float cylindrical_distance(vec3 worldPos) {
    float distXZ = length(worldPos.xz);
    float distY = abs(worldPos.y);
    return max(distXZ, distY);
}

float FLWFogFactor() {
    return (uFogRange.y - FragDistance) / (uFogRange.y - uFogRange.x);
}
// Adjust the [0,1] normalized lightmap value based on the texture matrix from LightTexture#enableLightmap
vec2 shiftLight(vec2 lm) {
    return lm * 0.99609375 + 0.03125;// * 255/256 + 1/32
}


uniform sampler3D uLightVolume;

uniform sampler2D uBlockAtlas;
uniform sampler2D uLightMap;

uniform vec3 uLightBoxSize;
uniform vec3 uLightBoxMin;
uniform mat4 uModel;

uniform float uTime;
uniform mat4 uViewProjection;
uniform vec3 uCameraPos;

void FLWFinalizeNormal(inout vec3 normal) {
    mat3 m;
    m[0] = uModel[0].xyz;
    m[1] = uModel[1].xyz;
    m[2] = uModel[2].xyz;
    normal = m * normal;
}

#if defined(VERTEX_SHADER)

out vec3 BoxCoord;

void FLWFinalizeWorldPos(inout vec4 worldPos) {
    worldPos = uModel * worldPos;

    BoxCoord = (worldPos.xyz - uLightBoxMin) / uLightBoxSize;

    FragDistance = max(length(worldPos.xz), abs(worldPos.y)); // cylindrical fog

    gl_Position = uViewProjection * worldPos;
}

#elif defined(FRAGMENT_SHADER)


#define ALPHA_DISCARD 0.1
// optimize discard usage
#if defined(ALPHA_DISCARD)
#if defined(GL_ARB_conservative_depth)
layout (depth_greater) out float gl_FragDepth;
#endif
#endif

in vec3 BoxCoord;

out vec4 FragColor;

vec4 FLWBlockTexture(vec2 texCoords) {
    return texture(uBlockAtlas, texCoords);
}

void FLWFinalizeColor(vec4 color) {
    float a = color.a;
    float fog = clamp(FLWFogFactor(), 0., 1.);

    color = mix(uFogColor, color, fog);
    color.a = a;

    #if defined(ALPHA_DISCARD)
    if (color.a < ALPHA_DISCARD) {
        discard;
    }
    #endif

    FragColor = color;
}

vec4 FLWLight(vec2 lightCoords) {
    lightCoords = max(lightCoords, texture(uLightVolume, BoxCoord).rg);

    return texture(uLightMap, shiftLight(lightCoords));
}

#endif


mat4 rotate(vec3 axis, float angle) {
    float s = sin(angle);
    float c = cos(angle);
    float oc = 1. - c;

    vec3 sa = axis * s;

    mat4 mr = mat4(1.);
    mr[0].xyz = oc * axis.xxz * axis.xyx + vec3(c, sa.z, -sa.y);
    mr[1].xyz = oc * axis.xyy * axis.yyz + vec3(-sa.z, c, sa.x);
    mr[2].xyz = oc * axis.zyz * axis.xzz + vec3(sa.y, -sa.x, c);

    return mr;
}

mat4 rotation(vec3 rot) {
    return rotate(vec3(0., 1., 0.), rot.y) * rotate(vec3(0., 0., 1.), rot.z) * rotate(vec3(1., 0., 0.), rot.x);
}

mat3 modelToNormal(mat4 mat) {
    // Discard the edges. This won't be accurate for scaled or skewed matrices,
    // but we don't have to work with those often.
    mat3 m;
    m[0] = mat[0].xyz;
    m[1] = mat[1].xyz;
    m[2] = mat[2].xyz;
    return m;
}

float diffuse(vec3 normal) {
    vec3 n2 = normal * normal * vec3(.6, .25, .8);
    return min(n2.x + n2.y * (3. + normal.y) + n2.z, 1.);
}
struct Vertex {
    vec3 pos;
    vec2 texCoords;
    vec3 normal;
};

struct BlockFrag {
    vec2 texCoords;
    vec4 color;
    float diffuse;
    vec2 light;
};

#if defined(FRAGMENT_SHADER)
void fragment(BlockFrag r) {
    vec4 tex = FLWBlockTexture(r.texCoords);

    vec4 color = vec4(tex.rgb * FLWLight(r.light).rgb * r.diffuse, tex.a) * r.color;

    FLWFinalizeColor(color);
}
#endif
#define PI 3.1415926538




struct Rotating {
    vec2 light;
    vec4 color;
    vec3 pos;
    float speed;
    float offset;
    vec3 axis;
};




mat4 kineticRotation(float offset, float speed, vec3 axis) {
    float degrees = offset + uTime * speed * 3./10.;
    float angle = fract(degrees / 360.) * PI * 2.;

    return rotate(axis, angle);
}

#if defined(VERTEX_SHADER)
BlockFrag vertex(Vertex v, Rotating instance) {
    mat4 spin = kineticRotation(instance.offset, instance.speed, instance.axis);

    vec4 worldPos = spin * vec4(v.pos - .5, 1.);
    worldPos += vec4(instance.pos + .5, 0.);

    vec3 norm = modelToNormal(spin) * v.normal;

    FLWFinalizeWorldPos(worldPos);
    FLWFinalizeNormal(norm);

    BlockFrag b;
    b.diffuse = diffuse(norm);
    b.texCoords = v.texCoords;
    b.light = instance.light;

    #if defined(DEBUG_RAINBOW)
    b.color = instance.color;
    #elif defined(DEBUG_NORMAL)
    b.color = vec4(norm, 1.);
    #else
    b.color = vec4(1.);
    #endif

    return b;
}
#endif

in vec3 a_v_pos;
in vec2 a_v_texCoords;
in vec3 a_v_normal;
in vec2 a_i_light;
in vec4 a_i_color;
in vec3 a_i_pos;
in float a_i_speed;
in float a_i_offset;
in vec3 a_i_axis;
out vec2 v2f_texCoords;
out vec4 v2f_color;
out float v2f_diffuse;
out vec2 v2f_light;
void main() {
Vertex v;
v.pos = a_v_pos;
v.texCoords = a_v_texCoords;
v.normal = a_v_normal;
Rotating i;
i.light = a_i_light;
i.color = a_i_color;
i.pos = a_i_pos;
i.speed = a_i_speed;
i.offset = a_i_offset;
i.axis = a_i_axis;
BlockFrag o = vertex(v, i);
v2f_texCoords = o.texCoords;
v2f_color = o.color;
v2f_diffuse = o.diffuse;
v2f_light = o.light;
}
[16:19:40] [Render thread/ERROR]: Shader compilation log for create:rotating: WARNING: 0:2: extension 'GL_ARB_conservative_depth' is not supported

[16:19:40] [Render thread/ERROR]: #version 150
#extension GL_ARB_conservative_depth : enable
#define FRAGMENT_SHADER
#define DEBUG_NORMAL
#if defined(VERTEX_SHADER)
out float FragDistance;
#elif defined(FRAGMENT_SHADER)
in float FragDistance;
#endif
uniform vec4 uFogColor;
uniform vec2 uFogRange;

float cylindrical_distance(vec3 worldPos, vec3 cameraPos) {
    float distXZ = length(worldPos.xz - cameraPos.xz);
    float distY = abs(worldPos.y - cameraPos.y);
    return max(distXZ, distY);
}

float cylindrical_distance(vec3 worldPos) {
    float distXZ = length(worldPos.xz);
    float distY = abs(worldPos.y);
    return max(distXZ, distY);
}

float FLWFogFactor() {
    return (uFogRange.y - FragDistance) / (uFogRange.y - uFogRange.x);
}
// Adjust the [0,1] normalized lightmap value based on the texture matrix from LightTexture#enableLightmap
vec2 shiftLight(vec2 lm) {
    return lm * 0.99609375 + 0.03125;// * 255/256 + 1/32
}


uniform sampler3D uLightVolume;

uniform sampler2D uBlockAtlas;
uniform sampler2D uLightMap;

uniform vec3 uLightBoxSize;
uniform vec3 uLightBoxMin;
uniform mat4 uModel;

uniform float uTime;
uniform mat4 uViewProjection;
uniform vec3 uCameraPos;

void FLWFinalizeNormal(inout vec3 normal) {
    mat3 m;
    m[0] = uModel[0].xyz;
    m[1] = uModel[1].xyz;
    m[2] = uModel[2].xyz;
    normal = m * normal;
}

#if defined(VERTEX_SHADER)

out vec3 BoxCoord;

void FLWFinalizeWorldPos(inout vec4 worldPos) {
    worldPos = uModel * worldPos;

    BoxCoord = (worldPos.xyz - uLightBoxMin) / uLightBoxSize;

    FragDistance = max(length(worldPos.xz), abs(worldPos.y)); // cylindrical fog

    gl_Position = uViewProjection * worldPos;
}

#elif defined(FRAGMENT_SHADER)


#define ALPHA_DISCARD 0.1
// optimize discard usage
#if defined(ALPHA_DISCARD)
#if defined(GL_ARB_conservative_depth)
layout (depth_greater) out float gl_FragDepth;
#endif
#endif

in vec3 BoxCoord;

out vec4 FragColor;

vec4 FLWBlockTexture(vec2 texCoords) {
    return texture(uBlockAtlas, texCoords);
}

void FLWFinalizeColor(vec4 color) {
    float a = color.a;
    float fog = clamp(FLWFogFactor(), 0., 1.);

    color = mix(uFogColor, color, fog);
    color.a = a;

    #if defined(ALPHA_DISCARD)
    if (color.a < ALPHA_DISCARD) {
        discard;
    }
    #endif

    FragColor = color;
}

vec4 FLWLight(vec2 lightCoords) {
    lightCoords = max(lightCoords, texture(uLightVolume, BoxCoord).rg);

    return texture(uLightMap, shiftLight(lightCoords));
}

#endif


mat4 rotate(vec3 axis, float angle) {
    float s = sin(angle);
    float c = cos(angle);
    float oc = 1. - c;

    vec3 sa = axis * s;

    mat4 mr = mat4(1.);
    mr[0].xyz = oc * axis.xxz * axis.xyx + vec3(c, sa.z, -sa.y);
    mr[1].xyz = oc * axis.xyy * axis.yyz + vec3(-sa.z, c, sa.x);
    mr[2].xyz = oc * axis.zyz * axis.xzz + vec3(sa.y, -sa.x, c);

    return mr;
}

mat4 rotation(vec3 rot) {
    return rotate(vec3(0., 1., 0.), rot.y) * rotate(vec3(0., 0., 1.), rot.z) * rotate(vec3(1., 0., 0.), rot.x);
}

mat3 modelToNormal(mat4 mat) {
    // Discard the edges. This won't be accurate for scaled or skewed matrices,
    // but we don't have to work with those often.
    mat3 m;
    m[0] = mat[0].xyz;
    m[1] = mat[1].xyz;
    m[2] = mat[2].xyz;
    return m;
}

float diffuse(vec3 normal) {
    vec3 n2 = normal * normal * vec3(.6, .25, .8);
    return min(n2.x + n2.y * (3. + normal.y) + n2.z, 1.);
}
struct Vertex {
    vec3 pos;
    vec2 texCoords;
    vec3 normal;
};

struct BlockFrag {
    vec2 texCoords;
    vec4 color;
    float diffuse;
    vec2 light;
};

#if defined(FRAGMENT_SHADER)
void fragment(BlockFrag r) {
    vec4 tex = FLWBlockTexture(r.texCoords);

    vec4 color = vec4(tex.rgb * FLWLight(r.light).rgb * r.diffuse, tex.a) * r.color;

    FLWFinalizeColor(color);
}
#endif
#define PI 3.1415926538




struct Rotating {
    vec2 light;
    vec4 color;
    vec3 pos;
    float speed;
    float offset;
    vec3 axis;
};




mat4 kineticRotation(float offset, float speed, vec3 axis) {
    float degrees = offset + uTime * speed * 3./10.;
    float angle = fract(degrees / 360.) * PI * 2.;

    return rotate(axis, angle);
}

#if defined(VERTEX_SHADER)
BlockFrag vertex(Vertex v, Rotating instance) {
    mat4 spin = kineticRotation(instance.offset, instance.speed, instance.axis);

    vec4 worldPos = spin * vec4(v.pos - .5, 1.);
    worldPos += vec4(instance.pos + .5, 0.);

    vec3 norm = modelToNormal(spin) * v.normal;

    FLWFinalizeWorldPos(worldPos);
    FLWFinalizeNormal(norm);

    BlockFrag b;
    b.diffuse = diffuse(norm);
    b.texCoords = v.texCoords;
    b.light = instance.light;

    #if defined(DEBUG_RAINBOW)
    b.color = instance.color;
    #elif defined(DEBUG_NORMAL)
    b.color = vec4(norm, 1.);
    #else
    b.color = vec4(1.);
    #endif

    return b;
}
#endif

in vec2 v2f_texCoords;
in vec4 v2f_color;
in float v2f_diffuse;
in vec2 v2f_light;
void main() {
BlockFrag o;
o.texCoords = v2f_texCoords;
o.color = v2f_color;
o.diffuse = v2f_diffuse;
o.light = v2f_light;
fragment(o);
}
[16:19:40] [Render thread/ERROR]: Shader compilation log for flywheel:oriented: WARNING: 0:2: extension 'GL_ARB_conservative_depth' is not supported

[16:19:40] [Render thread/ERROR]: #version 150
#extension GL_ARB_conservative_depth : enable
#define VERTEX_SHADER
#if defined(VERTEX_SHADER)
out float FragDistance;
#elif defined(FRAGMENT_SHADER)
in float FragDistance;
#endif
uniform vec4 uFogColor;
uniform vec2 uFogRange;

float cylindrical_distance(vec3 worldPos, vec3 cameraPos) {
    float distXZ = length(worldPos.xz - cameraPos.xz);
    float distY = abs(worldPos.y - cameraPos.y);
    return max(distXZ, distY);
}

float cylindrical_distance(vec3 worldPos) {
    float distXZ = length(worldPos.xz);
    float distY = abs(worldPos.y);
    return max(distXZ, distY);
}

float FLWFogFactor() {
    return (uFogRange.y - FragDistance) / (uFogRange.y - uFogRange.x);
}
// Adjust the [0,1] normalized lightmap value based on the texture matrix from LightTexture#enableLightmap
vec2 shiftLight(vec2 lm) {
    return lm * 0.99609375 + 0.03125;// * 255/256 + 1/32
}


uniform sampler3D uLightVolume;

uniform sampler2D uBlockAtlas;
uniform sampler2D uLightMap;

uniform vec3 uLightBoxSize;
uniform vec3 uLightBoxMin;
uniform mat4 uModel;

uniform float uTime;
uniform mat4 uViewProjection;
uniform vec3 uCameraPos;

void FLWFinalizeNormal(inout vec3 normal) {
    mat3 m;
    m[0] = uModel[0].xyz;
    m[1] = uModel[1].xyz;
    m[2] = uModel[2].xyz;
    normal = m * normal;
}

#if defined(VERTEX_SHADER)

out vec3 BoxCoord;

void FLWFinalizeWorldPos(inout vec4 worldPos) {
    worldPos = uModel * worldPos;

    BoxCoord = (worldPos.xyz - uLightBoxMin) / uLightBoxSize;

    FragDistance = max(length(worldPos.xz), abs(worldPos.y)); // cylindrical fog

    gl_Position = uViewProjection * worldPos;
}

#elif defined(FRAGMENT_SHADER)


#define ALPHA_DISCARD 0.1
// optimize discard usage
#if defined(ALPHA_DISCARD)
#if defined(GL_ARB_conservative_depth)
layout (depth_greater) out float gl_FragDepth;
#endif
#endif

in vec3 BoxCoord;

out vec4 FragColor;

vec4 FLWBlockTexture(vec2 texCoords) {
    return texture(uBlockAtlas, texCoords);
}

void FLWFinalizeColor(vec4 color) {
    float a = color.a;
    float fog = clamp(FLWFogFactor(), 0., 1.);

    color = mix(uFogColor, color, fog);
    color.a = a;

    #if defined(ALPHA_DISCARD)
    if (color.a < ALPHA_DISCARD) {
        discard;
    }
    #endif

    FragColor = color;
}

vec4 FLWLight(vec2 lightCoords) {
    lightCoords = max(lightCoords, texture(uLightVolume, BoxCoord).rg);

    return texture(uLightMap, shiftLight(lightCoords));
}

#endif


#define PIOVER2 1.5707963268

vec4 quat(vec3 axis, float angle) {
    float halfAngle = angle * PIOVER2 / 180.0;
    vec2 cs = sin(vec2(PIOVER2 - halfAngle, halfAngle)); // compute sin and cos in one instruction
    return vec4(axis.xyz * cs.y,  cs.x);
}

vec4 quatMult(vec4 q1, vec4 q2) {
    // disgustingly vectorized quaternion multiplication
    vec4 a = q1.w * q2.xyzw;
    vec4 b = q1.x * q2.wzxy * vec4(1., -1., 1., -1.);
    vec4 c = q1.y * q2.zwxy * vec4(1., 1., -1., -1.);
    vec4 d = q1.z * q2.yxwz * vec4(-1., 1., 1., -1.);

    return a + b + c + d;
}

vec3 rotateVertexByQuat(vec3 v, vec4 q) {
    vec3 i = q.xyz;
    return v + 2.0 * cross(i, cross(i, v) + q.w * v);
}

vec3 rotateAbout(vec3 v, vec3 axis, float angle) {
    return rotateVertexByQuat(v, quat(axis, angle));
}

float diffuse(vec3 normal) {
    vec3 n2 = normal * normal * vec3(.6, .25, .8);
    return min(n2.x + n2.y * (3. + normal.y) + n2.z, 1.);
}
struct Vertex {
    vec3 pos;
    vec2 texCoords;
    vec3 normal;
};

struct BlockFrag {
    vec2 texCoords;
    vec4 color;
    float diffuse;
    vec2 light;
};

#if defined(FRAGMENT_SHADER)
void fragment(BlockFrag r) {
    vec4 tex = FLWBlockTexture(r.texCoords);

    vec4 color = vec4(tex.rgb * FLWLight(r.light).rgb * r.diffuse, tex.a) * r.color;

    FLWFinalizeColor(color);
}
#endif






struct Oriented {
    vec2 light;
    vec4 color;
    vec3 pos;
    vec3 pivot;
    vec4 rotation;
};

#if defined(VERTEX_SHADER)
BlockFrag vertex(Vertex v, Oriented o) {
    vec4 worldPos = vec4(rotateVertexByQuat(v.pos - o.pivot, o.rotation) + o.pivot + o.pos, 1.);

    vec3 norm = rotateVertexByQuat(v.normal, o.rotation);

    FLWFinalizeWorldPos(worldPos);
    FLWFinalizeNormal(norm);

    BlockFrag b;
    b.diffuse = diffuse(norm);
    b.texCoords = v.texCoords;
    b.light = o.light;
    #if defined(DEBUG_NORMAL)
    b.color = vec4(norm, 1.);
    #else
    b.color = o.color;
    #endif
    return b;
}
#endif

in vec3 a_v_pos;
in vec2 a_v_texCoords;
in vec3 a_v_normal;
in vec2 a_i_light;
in vec4 a_i_color;
in vec3 a_i_pos;
in vec3 a_i_pivot;
in vec4 a_i_rotation;
out vec2 v2f_texCoords;
out vec4 v2f_color;
out float v2f_diffuse;
out vec2 v2f_light;
void main() {
Vertex v;
v.pos = a_v_pos;
v.texCoords = a_v_texCoords;
v.normal = a_v_normal;
Oriented i;
i.light = a_i_light;
i.color = a_i_color;
i.pos = a_i_pos;
i.pivot = a_i_pivot;
i.rotation = a_i_rotation;
BlockFrag o = vertex(v, i);
v2f_texCoords = o.texCoords;
v2f_color = o.color;
v2f_diffuse = o.diffuse;
v2f_light = o.light;
}
[16:19:40] [Render thread/ERROR]: Shader compilation log for flywheel:oriented: WARNING: 0:2: extension 'GL_ARB_conservative_depth' is not supported

[16:19:40] [Render thread/ERROR]: #version 150
#extension GL_ARB_conservative_depth : enable
#define FRAGMENT_SHADER
#if defined(VERTEX_SHADER)
out float FragDistance;
#elif defined(FRAGMENT_SHADER)
in float FragDistance;
#endif
uniform vec4 uFogColor;
uniform vec2 uFogRange;

float cylindrical_distance(vec3 worldPos, vec3 cameraPos) {
    float distXZ = length(worldPos.xz - cameraPos.xz);
    float distY = abs(worldPos.y - cameraPos.y);
    return max(distXZ, distY);
}

float cylindrical_distance(vec3 worldPos) {
    float distXZ = length(worldPos.xz);
    float distY = abs(worldPos.y);
    return max(distXZ, distY);
}

float FLWFogFactor() {
    return (uFogRange.y - FragDistance) / (uFogRange.y - uFogRange.x);
}
// Adjust the [0,1] normalized lightmap value based on the texture matrix from LightTexture#enableLightmap
vec2 shiftLight(vec2 lm) {
    return lm * 0.99609375 + 0.03125;// * 255/256 + 1/32
}


uniform sampler3D uLightVolume;

uniform sampler2D uBlockAtlas;
uniform sampler2D uLightMap;

uniform vec3 uLightBoxSize;
uniform vec3 uLightBoxMin;
uniform mat4 uModel;

uniform float uTime;
uniform mat4 uViewProjection;
uniform vec3 uCameraPos;

void FLWFinalizeNormal(inout vec3 normal) {
    mat3 m;
    m[0] = uModel[0].xyz;
    m[1] = uModel[1].xyz;
    m[2] = uModel[2].xyz;
    normal = m * normal;
}

#if defined(VERTEX_SHADER)

out vec3 BoxCoord;

void FLWFinalizeWorldPos(inout vec4 worldPos) {
    worldPos = uModel * worldPos;

    BoxCoord = (worldPos.xyz - uLightBoxMin) / uLightBoxSize;

    FragDistance = max(length(worldPos.xz), abs(worldPos.y)); // cylindrical fog

    gl_Position = uViewProjection * worldPos;
}

#elif defined(FRAGMENT_SHADER)


#define ALPHA_DISCARD 0.1
// optimize discard usage
#if defined(ALPHA_DISCARD)
#if defined(GL_ARB_conservative_depth)
layout (depth_greater) out float gl_FragDepth;
#endif
#endif

in vec3 BoxCoord;

out vec4 FragColor;

vec4 FLWBlockTexture(vec2 texCoords) {
    return texture(uBlockAtlas, texCoords);
}

void FLWFinalizeColor(vec4 color) {
    float a = color.a;
    float fog = clamp(FLWFogFactor(), 0., 1.);

    color = mix(uFogColor, color, fog);
    color.a = a;

    #if defined(ALPHA_DISCARD)
    if (color.a < ALPHA_DISCARD) {
        discard;
    }
    #endif

    FragColor = color;
}

vec4 FLWLight(vec2 lightCoords) {
    lightCoords = max(lightCoords, texture(uLightVolume, BoxCoord).rg);

    return texture(uLightMap, shiftLight(lightCoords));
}

#endif


#define PIOVER2 1.5707963268

vec4 quat(vec3 axis, float angle) {
    float halfAngle = angle * PIOVER2 / 180.0;
    vec2 cs = sin(vec2(PIOVER2 - halfAngle, halfAngle)); // compute sin and cos in one instruction
    return vec4(axis.xyz * cs.y,  cs.x);
}

vec4 quatMult(vec4 q1, vec4 q2) {
    // disgustingly vectorized quaternion multiplication
    vec4 a = q1.w * q2.xyzw;
    vec4 b = q1.x * q2.wzxy * vec4(1., -1., 1., -1.);
    vec4 c = q1.y * q2.zwxy * vec4(1., 1., -1., -1.);
    vec4 d = q1.z * q2.yxwz * vec4(-1., 1., 1., -1.);

    return a + b + c + d;
}

vec3 rotateVertexByQuat(vec3 v, vec4 q) {
    vec3 i = q.xyz;
    return v + 2.0 * cross(i, cross(i, v) + q.w * v);
}

vec3 rotateAbout(vec3 v, vec3 axis, float angle) {
    return rotateVertexByQuat(v, quat(axis, angle));
}

float diffuse(vec3 normal) {
    vec3 n2 = normal * normal * vec3(.6, .25, .8);
    return min(n2.x + n2.y * (3. + normal.y) + n2.z, 1.);
}
struct Vertex {
    vec3 pos;
    vec2 texCoords;
    vec3 normal;
};

struct BlockFrag {
    vec2 texCoords;
    vec4 color;
    float diffuse;
    vec2 light;
};

#if defined(FRAGMENT_SHADER)
void fragment(BlockFrag r) {
    vec4 tex = FLWBlockTexture(r.texCoords);

    vec4 color = vec4(tex.rgb * FLWLight(r.light).rgb * r.diffuse, tex.a) * r.color;

    FLWFinalizeColor(color);
}
#endif






struct Oriented {
    vec2 light;
    vec4 color;
    vec3 pos;
    vec3 pivot;
    vec4 rotation;
};

#if defined(VERTEX_SHADER)
BlockFrag vertex(Vertex v, Oriented o) {
    vec4 worldPos = vec4(rotateVertexByQuat(v.pos - o.pivot, o.rotation) + o.pivot + o.pos, 1.);

    vec3 norm = rotateVertexByQuat(v.normal, o.rotation);

    FLWFinalizeWorldPos(worldPos);
    FLWFinalizeNormal(norm);

    BlockFrag b;
    b.diffuse = diffuse(norm);
    b.texCoords = v.texCoords;
    b.light = o.light;
    #if defined(DEBUG_NORMAL)
    b.color = vec4(norm, 1.);
    #else
    b.color = o.color;
    #endif
    return b;
}
#endif

in vec2 v2f_texCoords;
in vec4 v2f_color;
in float v2f_diffuse;
in vec2 v2f_light;
void main() {
BlockFrag o;
o.texCoords = v2f_texCoords;
o.color = v2f_color;
o.diffuse = v2f_diffuse;
o.light = v2f_light;
fragment(o);
}
[16:19:40] [Render thread/ERROR]: Shader compilation log for flywheel:oriented: WARNING: 0:2: extension 'GL_ARB_conservative_depth' is not supported

[16:19:40] [Render thread/ERROR]: #version 150
#extension GL_ARB_conservative_depth : enable
#define VERTEX_SHADER
#define DEBUG_NORMAL
#if defined(VERTEX_SHADER)
out float FragDistance;
#elif defined(FRAGMENT_SHADER)
in float FragDistance;
#endif
uniform vec4 uFogColor;
uniform vec2 uFogRange;

float cylindrical_distance(vec3 worldPos, vec3 cameraPos) {
    float distXZ = length(worldPos.xz - cameraPos.xz);
    float distY = abs(worldPos.y - cameraPos.y);
    return max(distXZ, distY);
}

float cylindrical_distance(vec3 worldPos) {
    float distXZ = length(worldPos.xz);
    float distY = abs(worldPos.y);
    return max(distXZ, distY);
}

float FLWFogFactor() {
    return (uFogRange.y - FragDistance) / (uFogRange.y - uFogRange.x);
}
// Adjust the [0,1] normalized lightmap value based on the texture matrix from LightTexture#enableLightmap
vec2 shiftLight(vec2 lm) {
    return lm * 0.99609375 + 0.03125;// * 255/256 + 1/32
}


uniform sampler3D uLightVolume;

uniform sampler2D uBlockAtlas;
uniform sampler2D uLightMap;

uniform vec3 uLightBoxSize;
uniform vec3 uLightBoxMin;
uniform mat4 uModel;

uniform float uTime;
uniform mat4 uViewProjection;
uniform vec3 uCameraPos;

void FLWFinalizeNormal(inout vec3 normal) {
    mat3 m;
    m[0] = uModel[0].xyz;
    m[1] = uModel[1].xyz;
    m[2] = uModel[2].xyz;
    normal = m * normal;
}

#if defined(VERTEX_SHADER)

out vec3 BoxCoord;

void FLWFinalizeWorldPos(inout vec4 worldPos) {
    worldPos = uModel * worldPos;

    BoxCoord = (worldPos.xyz - uLightBoxMin) / uLightBoxSize;

    FragDistance = max(length(worldPos.xz), abs(worldPos.y)); // cylindrical fog

    gl_Position = uViewProjection * worldPos;
}

#elif defined(FRAGMENT_SHADER)


#define ALPHA_DISCARD 0.1
// optimize discard usage
#if defined(ALPHA_DISCARD)
#if defined(GL_ARB_conservative_depth)
layout (depth_greater) out float gl_FragDepth;
#endif
#endif

in vec3 BoxCoord;

out vec4 FragColor;

vec4 FLWBlockTexture(vec2 texCoords) {
    return texture(uBlockAtlas, texCoords);
}

void FLWFinalizeColor(vec4 color) {
    float a = color.a;
    float fog = clamp(FLWFogFactor(), 0., 1.);

    color = mix(uFogColor, color, fog);
    color.a = a;

    #if defined(ALPHA_DISCARD)
    if (color.a < ALPHA_DISCARD) {
        discard;
    }
    #endif

    FragColor = color;
}

vec4 FLWLight(vec2 lightCoords) {
    lightCoords = max(lightCoords, texture(uLightVolume, BoxCoord).rg);

    return texture(uLightMap, shiftLight(lightCoords));
}

#endif


#define PIOVER2 1.5707963268

vec4 quat(vec3 axis, float angle) {
    float halfAngle = angle * PIOVER2 / 180.0;
    vec2 cs = sin(vec2(PIOVER2 - halfAngle, halfAngle)); // compute sin and cos in one instruction
    return vec4(axis.xyz * cs.y,  cs.x);
}

vec4 quatMult(vec4 q1, vec4 q2) {
    // disgustingly vectorized quaternion multiplication
    vec4 a = q1.w * q2.xyzw;
    vec4 b = q1.x * q2.wzxy * vec4(1., -1., 1., -1.);
    vec4 c = q1.y * q2.zwxy * vec4(1., 1., -1., -1.);
    vec4 d = q1.z * q2.yxwz * vec4(-1., 1., 1., -1.);

    return a + b + c + d;
}

vec3 rotateVertexByQuat(vec3 v, vec4 q) {
    vec3 i = q.xyz;
    return v + 2.0 * cross(i, cross(i, v) + q.w * v);
}

vec3 rotateAbout(vec3 v, vec3 axis, float angle) {
    return rotateVertexByQuat(v, quat(axis, angle));
}

float diffuse(vec3 normal) {
    vec3 n2 = normal * normal * vec3(.6, .25, .8);
    return min(n2.x + n2.y * (3. + normal.y) + n2.z, 1.);
}
struct Vertex {
    vec3 pos;
    vec2 texCoords;
    vec3 normal;
};

struct BlockFrag {
    vec2 texCoords;
    vec4 color;
    float diffuse;
    vec2 light;
};

#if defined(FRAGMENT_SHADER)
void fragment(BlockFrag r) {
    vec4 tex = FLWBlockTexture(r.texCoords);

    vec4 color = vec4(tex.rgb * FLWLight(r.light).rgb * r.diffuse, tex.a) * r.color;

    FLWFinalizeColor(color);
}
#endif






struct Oriented {
    vec2 light;
    vec4 color;
    vec3 pos;
    vec3 pivot;
    vec4 rotation;
};

#if defined(VERTEX_SHADER)
BlockFrag vertex(Vertex v, Oriented o) {
    vec4 worldPos = vec4(rotateVertexByQuat(v.pos - o.pivot, o.rotation) + o.pivot + o.pos, 1.);

    vec3 norm = rotateVertexByQuat(v.normal, o.rotation);

    FLWFinalizeWorldPos(worldPos);
    FLWFinalizeNormal(norm);

    BlockFrag b;
    b.diffuse = diffuse(norm);
    b.texCoords = v.texCoords;
    b.light = o.light;
    #if defined(DEBUG_NORMAL)
    b.color = vec4(norm, 1.);
    #else
    b.color = o.color;
    #endif
    return b;
}
#endif

in vec3 a_v_pos;
in vec2 a_v_texCoords;
in vec3 a_v_normal;
in vec2 a_i_light;
in vec4 a_i_color;
in vec3 a_i_pos;
in vec3 a_i_pivot;
in vec4 a_i_rotation;
out vec2 v2f_texCoords;
out vec4 v2f_color;
out float v2f_diffuse;
out vec2 v2f_light;
void main() {
Vertex v;
v.pos = a_v_pos;
v.texCoords = a_v_texCoords;
v.normal = a_v_normal;
Oriented i;
i.light = a_i_light;
i.color = a_i_color;
i.pos = a_i_pos;
i.pivot = a_i_pivot;
i.rotation = a_i_rotation;
BlockFrag o = vertex(v, i);
v2f_texCoords = o.texCoords;
v2f_color = o.color;
v2f_diffuse = o.diffuse;
v2f_light = o.light;
}
[16:19:40] [Render thread/ERROR]: Shader compilation log for flywheel:oriented: WARNING: 0:2: extension 'GL_ARB_conservative_depth' is not supported

[16:19:40] [Render thread/ERROR]: #version 150
#extension GL_ARB_conservative_depth : enable
#define FRAGMENT_SHADER
#define DEBUG_NORMAL
#if defined(VERTEX_SHADER)
out float FragDistance;
#elif defined(FRAGMENT_SHADER)
in float FragDistance;
#endif
uniform vec4 uFogColor;
uniform vec2 uFogRange;

float cylindrical_distance(vec3 worldPos, vec3 cameraPos) {
    float distXZ = length(worldPos.xz - cameraPos.xz);
    float distY = abs(worldPos.y - cameraPos.y);
    return max(distXZ, distY);
}

float cylindrical_distance(vec3 worldPos) {
    float distXZ = length(worldPos.xz);
    float distY = abs(worldPos.y);
    return max(distXZ, distY);
}

float FLWFogFactor() {
    return (uFogRange.y - FragDistance) / (uFogRange.y - uFogRange.x);
}
// Adjust the [0,1] normalized lightmap value based on the texture matrix from LightTexture#enableLightmap
vec2 shiftLight(vec2 lm) {
    return lm * 0.99609375 + 0.03125;// * 255/256 + 1/32
}


uniform sampler3D uLightVolume;

uniform sampler2D uBlockAtlas;
uniform sampler2D uLightMap;

uniform vec3 uLightBoxSize;
uniform vec3 uLightBoxMin;
uniform mat4 uModel;

uniform float uTime;
uniform mat4 uViewProjection;
uniform vec3 uCameraPos;

void FLWFinalizeNormal(inout vec3 normal) {
    mat3 m;
    m[0] = uModel[0].xyz;
    m[1] = uModel[1].xyz;
    m[2] = uModel[2].xyz;
    normal = m * normal;
}

#if defined(VERTEX_SHADER)

out vec3 BoxCoord;

void FLWFinalizeWorldPos(inout vec4 worldPos) {
    worldPos = uModel * worldPos;

    BoxCoord = (worldPos.xyz - uLightBoxMin) / uLightBoxSize;

    FragDistance = max(length(worldPos.xz), abs(worldPos.y)); // cylindrical fog

    gl_Position = uViewProjection * worldPos;
}

#elif defined(FRAGMENT_SHADER)


#define ALPHA_DISCARD 0.1
// optimize discard usage
#if defined(ALPHA_DISCARD)
#if defined(GL_ARB_conservative_depth)
layout (depth_greater) out float gl_FragDepth;
#endif
#endif

in vec3 BoxCoord;

out vec4 FragColor;

vec4 FLWBlockTexture(vec2 texCoords) {
    return texture(uBlockAtlas, texCoords);
}

void FLWFinalizeColor(vec4 color) {
    float a = color.a;
    float fog = clamp(FLWFogFactor(), 0., 1.);

    color = mix(uFogColor, color, fog);
    color.a = a;

    #if defined(ALPHA_DISCARD)
    if (color.a < ALPHA_DISCARD) {
        discard;
    }
    #endif

    FragColor = color;
}

vec4 FLWLight(vec2 lightCoords) {
    lightCoords = max(lightCoords, texture(uLightVolume, BoxCoord).rg);

    return texture(uLightMap, shiftLight(lightCoords));
}

#endif


#define PIOVER2 1.5707963268

vec4 quat(vec3 axis, float angle) {
    float halfAngle = angle * PIOVER2 / 180.0;
    vec2 cs = sin(vec2(PIOVER2 - halfAngle, halfAngle)); // compute sin and cos in one instruction
    return vec4(axis.xyz * cs.y,  cs.x);
}

vec4 quatMult(vec4 q1, vec4 q2) {
    // disgustingly vectorized quaternion multiplication
    vec4 a = q1.w * q2.xyzw;
    vec4 b = q1.x * q2.wzxy * vec4(1., -1., 1., -1.);
    vec4 c = q1.y * q2.zwxy * vec4(1., 1., -1., -1.);
    vec4 d = q1.z * q2.yxwz * vec4(-1., 1., 1., -1.);

    return a + b + c + d;
}

vec3 rotateVertexByQuat(vec3 v, vec4 q) {
    vec3 i = q.xyz;
    return v + 2.0 * cross(i, cross(i, v) + q.w * v);
}

vec3 rotateAbout(vec3 v, vec3 axis, float angle) {
    return rotateVertexByQuat(v, quat(axis, angle));
}

float diffuse(vec3 normal) {
    vec3 n2 = normal * normal * vec3(.6, .25, .8);
    return min(n2.x + n2.y * (3. + normal.y) + n2.z, 1.);
}
struct Vertex {
    vec3 pos;
    vec2 texCoords;
    vec3 normal;
};

struct BlockFrag {
    vec2 texCoords;
    vec4 color;
    float diffuse;
    vec2 light;
};

#if defined(FRAGMENT_SHADER)
void fragment(BlockFrag r) {
    vec4 tex = FLWBlockTexture(r.texCoords);

    vec4 color = vec4(tex.rgb * FLWLight(r.light).rgb * r.diffuse, tex.a) * r.color;

    FLWFinalizeColor(color);
}
#endif






struct Oriented {
    vec2 light;
    vec4 color;
    vec3 pos;
    vec3 pivot;
    vec4 rotation;
};

#if defined(VERTEX_SHADER)
BlockFrag vertex(Vertex v, Oriented o) {
    vec4 worldPos = vec4(rotateVertexByQuat(v.pos - o.pivot, o.rotation) + o.pivot + o.pos, 1.);

    vec3 norm = rotateVertexByQuat(v.normal, o.rotation);

    FLWFinalizeWorldPos(worldPos);
    FLWFinalizeNormal(norm);

    BlockFrag b;
    b.diffuse = diffuse(norm);
    b.texCoords = v.texCoords;
    b.light = o.light;
    #if defined(DEBUG_NORMAL)
    b.color = vec4(norm, 1.);
    #else
    b.color = o.color;
    #endif
    return b;
}
#endif

in vec2 v2f_texCoords;
in vec4 v2f_color;
in float v2f_diffuse;
in vec2 v2f_light;
void main() {
BlockFrag o;
o.texCoords = v2f_texCoords;
o.color = v2f_color;
o.diffuse = v2f_diffuse;
o.light = v2f_light;
fragment(o);
}
[16:19:40] [Render thread/ERROR]: Shader compilation log for create:contraption_actor: WARNING: 0:2: extension 'GL_ARB_conservative_depth' is not supported

[16:19:40] [Render thread/ERROR]: #version 150
#extension GL_ARB_conservative_depth : enable
#define VERTEX_SHADER
#if defined(VERTEX_SHADER)
out float FragDistance;
#elif defined(FRAGMENT_SHADER)
in float FragDistance;
#endif
uniform vec4 uFogColor;
uniform vec2 uFogRange;

float cylindrical_distance(vec3 worldPos, vec3 cameraPos) {
    float distXZ = length(worldPos.xz - cameraPos.xz);
    float distY = abs(worldPos.y - cameraPos.y);
    return max(distXZ, distY);
}

float cylindrical_distance(vec3 worldPos) {
    float distXZ = length(worldPos.xz);
    float distY = abs(worldPos.y);
    return max(distXZ, distY);
}

float FLWFogFactor() {
    return (uFogRange.y - FragDistance) / (uFogRange.y - uFogRange.x);
}
// Adjust the [0,1] normalized lightmap value based on the texture matrix from LightTexture#enableLightmap
vec2 shiftLight(vec2 lm) {
    return lm * 0.99609375 + 0.03125;// * 255/256 + 1/32
}


uniform sampler3D uLightVolume;

uniform sampler2D uBlockAtlas;
uniform sampler2D uLightMap;

uniform vec3 uLightBoxSize;
uniform vec3 uLightBoxMin;
uniform mat4 uModel;

uniform float uTime;
uniform mat4 uViewProjection;
uniform vec3 uCameraPos;

void FLWFinalizeNormal(inout vec3 normal) {
    mat3 m;
    m[0] = uModel[0].xyz;
    m[1] = uModel[1].xyz;
    m[2] = uModel[2].xyz;
    normal = m * normal;
}

#if defined(VERTEX_SHADER)

out vec3 BoxCoord;

void FLWFinalizeWorldPos(inout vec4 worldPos) {
    worldPos = uModel * worldPos;

    BoxCoord = (worldPos.xyz - uLightBoxMin) / uLightBoxSize;

    FragDistance = max(length(worldPos.xz), abs(worldPos.y)); // cylindrical fog

    gl_Position = uViewProjection * worldPos;
}

#elif defined(FRAGMENT_SHADER)


#define ALPHA_DISCARD 0.1
// optimize discard usage
#if defined(ALPHA_DISCARD)
#if defined(GL_ARB_conservative_depth)
layout (depth_greater) out float gl_FragDepth;
#endif
#endif

in vec3 BoxCoord;

out vec4 FragColor;

vec4 FLWBlockTexture(vec2 texCoords) {
    return texture(uBlockAtlas, texCoords);
}

void FLWFinalizeColor(vec4 color) {
    float a = color.a;
    float fog = clamp(FLWFogFactor(), 0., 1.);

    color = mix(uFogColor, color, fog);
    color.a = a;

    #if defined(ALPHA_DISCARD)
    if (color.a < ALPHA_DISCARD) {
        discard;
    }
    #endif

    FragColor = color;
}

vec4 FLWLight(vec2 lightCoords) {
    lightCoords = max(lightCoords, texture(uLightVolume, BoxCoord).rg);

    return texture(uLightMap, shiftLight(lightCoords));
}

#endif


mat4 rotate(vec3 axis, float angle) {
    float s = sin(angle);
    float c = cos(angle);
    float oc = 1. - c;

    vec3 sa = axis * s;

    mat4 mr = mat4(1.);
    mr[0].xyz = oc * axis.xxz * axis.xyx + vec3(c, sa.z, -sa.y);
    mr[1].xyz = oc * axis.xyy * axis.yyz + vec3(-sa.z, c, sa.x);
    mr[2].xyz = oc * axis.zyz * axis.xzz + vec3(sa.y, -sa.x, c);

    return mr;
}

mat4 rotation(vec3 rot) {
    return rotate(vec3(0., 1., 0.), rot.y) * rotate(vec3(0., 0., 1.), rot.z) * rotate(vec3(1., 0., 0.), rot.x);
}

mat3 modelToNormal(mat4 mat) {
    // Discard the edges. This won't be accurate for scaled or skewed matrices,
    // but we don't have to work with those often.
    mat3 m;
    m[0] = mat[0].xyz;
    m[1] = mat[1].xyz;
    m[2] = mat[2].xyz;
    return m;
}

#define PIOVER2 1.5707963268

vec4 quat(vec3 axis, float angle) {
    float halfAngle = angle * PIOVER2 / 180.0;
    vec2 cs = sin(vec2(PIOVER2 - halfAngle, halfAngle)); // compute sin and cos in one instruction
    return vec4(axis.xyz * cs.y,  cs.x);
}

vec4 quatMult(vec4 q1, vec4 q2) {
    // disgustingly vectorized quaternion multiplication
    vec4 a = q1.w * q2.xyzw;
    vec4 b = q1.x * q2.wzxy * vec4(1., -1., 1., -1.);
    vec4 c = q1.y * q2.zwxy * vec4(1., 1., -1., -1.);
    vec4 d = q1.z * q2.yxwz * vec4(-1., 1., 1., -1.);

    return a + b + c + d;
}

vec3 rotateVertexByQuat(vec3 v, vec4 q) {
    vec3 i = q.xyz;
    return v + 2.0 * cross(i, cross(i, v) + q.w * v);
}

vec3 rotateAbout(vec3 v, vec3 axis, float angle) {
    return rotateVertexByQuat(v, quat(axis, angle));
}

float diffuse(vec3 normal) {
    vec3 n2 = normal * normal * vec3(.6, .25, .8);
    return min(n2.x + n2.y * (3. + normal.y) + n2.z, 1.);
}
struct Vertex {
    vec3 pos;
    vec2 texCoords;
    vec3 normal;
};

struct BlockFrag {
    vec2 texCoords;
    vec4 color;
    float diffuse;
    vec2 light;
};

#if defined(FRAGMENT_SHADER)
void fragment(BlockFrag r) {
    vec4 tex = FLWBlockTexture(r.texCoords);

    vec4 color = vec4(tex.rgb * FLWLight(r.light).rgb * r.diffuse, tex.a) * r.color;

    FLWFinalizeColor(color);
}
#endif
#define PI 3.1415926538





struct Actor {
    vec3 pos;
    vec2 light;
    float offset;
    vec3 axis;
    vec4 rotation;
    vec3 rotationCenter;
    float speed;
};




#if defined(VERTEX_SHADER)
BlockFrag vertex(Vertex v, Actor instance) {
    float degrees = instance.offset + uTime * instance.speed / 20.;
    //float angle = fract(degrees / 360.) * PI * 2.;

    vec4 kineticRot = quat(instance.axis, degrees);
    vec3 rotated = rotateVertexByQuat(v.pos - instance.rotationCenter, kineticRot) + instance.rotationCenter;

    vec4 worldPos = vec4(rotateVertexByQuat(rotated - .5, instance.rotation) + instance.pos + .5, 1.);
    vec3 norm = rotateVertexByQuat(rotateVertexByQuat(v.normal, kineticRot), instance.rotation);

    FLWFinalizeWorldPos(worldPos);
    FLWFinalizeNormal(norm);

    BlockFrag b;
    b.diffuse = diffuse(norm);
    b.texCoords = v.texCoords;
    b.light = instance.light;

    #if defined(DEBUG_NORMAL)
    b.color = vec4(norm, 1.);
    #else
    b.color = vec4(1.);
    #endif

    return b;
}
#endif

in vec3 a_v_pos;
in vec2 a_v_texCoords;
in vec3 a_v_normal;
in vec3 a_i_pos;
in vec2 a_i_light;
in float a_i_offset;
in vec3 a_i_axis;
in vec4 a_i_rotation;
in vec3 a_i_rotationCenter;
in float a_i_speed;
out vec2 v2f_texCoords;
out vec4 v2f_color;
out float v2f_diffuse;
out vec2 v2f_light;
void main() {
Vertex v;
v.pos = a_v_pos;
v.texCoords = a_v_texCoords;
v.normal = a_v_normal;
Actor i;
i.pos = a_i_pos;
i.light = a_i_light;
i.offset = a_i_offset;
i.axis = a_i_axis;
i.rotation = a_i_rotation;
i.rotationCenter = a_i_rotationCenter;
i.speed = a_i_speed;
BlockFrag o = vertex(v, i);
v2f_texCoords = o.texCoords;
v2f_color = o.color;
v2f_diffuse = o.diffuse;
v2f_light = o.light;
}
[16:19:40] [Render thread/ERROR]: Shader compilation log for create:contraption_actor: WARNING: 0:2: extension 'GL_ARB_conservative_depth' is not supported

[16:19:40] [Render thread/ERROR]: #version 150
#extension GL_ARB_conservative_depth : enable
#define FRAGMENT_SHADER
#if defined(VERTEX_SHADER)
out float FragDistance;
#elif defined(FRAGMENT_SHADER)
in float FragDistance;
#endif
uniform vec4 uFogColor;
uniform vec2 uFogRange;

float cylindrical_distance(vec3 worldPos, vec3 cameraPos) {
    float distXZ = length(worldPos.xz - cameraPos.xz);
    float distY = abs(worldPos.y - cameraPos.y);
    return max(distXZ, distY);
}

float cylindrical_distance(vec3 worldPos) {
    float distXZ = length(worldPos.xz);
    float distY = abs(worldPos.y);
    return max(distXZ, distY);
}

float FLWFogFactor() {
    return (uFogRange.y - FragDistance) / (uFogRange.y - uFogRange.x);
}
// Adjust the [0,1] normalized lightmap value based on the texture matrix from LightTexture#enableLightmap
vec2 shiftLight(vec2 lm) {
    return lm * 0.99609375 + 0.03125;// * 255/256 + 1/32
}


uniform sampler3D uLightVolume;

uniform sampler2D uBlockAtlas;
uniform sampler2D uLightMap;

uniform vec3 uLightBoxSize;
uniform vec3 uLightBoxMin;
uniform mat4 uModel;

uniform float uTime;
uniform mat4 uViewProjection;
uniform vec3 uCameraPos;

void FLWFinalizeNormal(inout vec3 normal) {
    mat3 m;
    m[0] = uModel[0].xyz;
    m[1] = uModel[1].xyz;
    m[2] = uModel[2].xyz;
    normal = m * normal;
}

#if defined(VERTEX_SHADER)

out vec3 BoxCoord;

void FLWFinalizeWorldPos(inout vec4 worldPos) {
    worldPos = uModel * worldPos;

    BoxCoord = (worldPos.xyz - uLightBoxMin) / uLightBoxSize;

    FragDistance = max(length(worldPos.xz), abs(worldPos.y)); // cylindrical fog

    gl_Position = uViewProjection * worldPos;
}

#elif defined(FRAGMENT_SHADER)


#define ALPHA_DISCARD 0.1
// optimize discard usage
#if defined(ALPHA_DISCARD)
#if defined(GL_ARB_conservative_depth)
layout (depth_greater) out float gl_FragDepth;
#endif
#endif

in vec3 BoxCoord;

out vec4 FragColor;

vec4 FLWBlockTexture(vec2 texCoords) {
    return texture(uBlockAtlas, texCoords);
}

void FLWFinalizeColor(vec4 color) {
    float a = color.a;
    float fog = clamp(FLWFogFactor(), 0., 1.);

    color = mix(uFogColor, color, fog);
    color.a = a;

    #if defined(ALPHA_DISCARD)
    if (color.a < ALPHA_DISCARD) {
        discard;
    }
    #endif

    FragColor = color;
}

vec4 FLWLight(vec2 lightCoords) {
    lightCoords = max(lightCoords, texture(uLightVolume, BoxCoord).rg);

    return texture(uLightMap, shiftLight(lightCoords));
}

#endif


mat4 rotate(vec3 axis, float angle) {
    float s = sin(angle);
    float c = cos(angle);
    float oc = 1. - c;

    vec3 sa = axis * s;

    mat4 mr = mat4(1.);
    mr[0].xyz = oc * axis.xxz * axis.xyx + vec3(c, sa.z, -sa.y);
    mr[1].xyz = oc * axis.xyy * axis.yyz + vec3(-sa.z, c, sa.x);
    mr[2].xyz = oc * axis.zyz * axis.xzz + vec3(sa.y, -sa.x, c);

    return mr;
}

mat4 rotation(vec3 rot) {
    return rotate(vec3(0., 1., 0.), rot.y) * rotate(vec3(0., 0., 1.), rot.z) * rotate(vec3(1., 0., 0.), rot.x);
}

mat3 modelToNormal(mat4 mat) {
    // Discard the edges. This won't be accurate for scaled or skewed matrices,
    // but we don't have to work with those often.
    mat3 m;
    m[0] = mat[0].xyz;
    m[1] = mat[1].xyz;
    m[2] = mat[2].xyz;
    return m;
}

#define PIOVER2 1.5707963268

vec4 quat(vec3 axis, float angle) {
    float halfAngle = angle * PIOVER2 / 180.0;
    vec2 cs = sin(vec2(PIOVER2 - halfAngle, halfAngle)); // compute sin and cos in one instruction
    return vec4(axis.xyz * cs.y,  cs.x);
}

vec4 quatMult(vec4 q1, vec4 q2) {
    // disgustingly vectorized quaternion multiplication
    vec4 a = q1.w * q2.xyzw;
    vec4 b = q1.x * q2.wzxy * vec4(1., -1., 1., -1.);
    vec4 c = q1.y * q2.zwxy * vec4(1., 1., -1., -1.);
    vec4 d = q1.z * q2.yxwz * vec4(-1., 1., 1., -1.);

    return a + b + c + d;
}

vec3 rotateVertexByQuat(vec3 v, vec4 q) {
    vec3 i = q.xyz;
    return v + 2.0 * cross(i, cross(i, v) + q.w * v);
}

vec3 rotateAbout(vec3 v, vec3 axis, float angle) {
    return rotateVertexByQuat(v, quat(axis, angle));
}

float diffuse(vec3 normal) {
    vec3 n2 = normal * normal * vec3(.6, .25, .8);
    return min(n2.x + n2.y * (3. + normal.y) + n2.z, 1.);
}
struct Vertex {
    vec3 pos;
    vec2 texCoords;
    vec3 normal;
};

struct BlockFrag {
    vec2 texCoords;
    vec4 color;
    float diffuse;
    vec2 light;
};

#if defined(FRAGMENT_SHADER)
void fragment(BlockFrag r) {
    vec4 tex = FLWBlockTexture(r.texCoords);

    vec4 color = vec4(tex.rgb * FLWLight(r.light).rgb * r.diffuse, tex.a) * r.color;

    FLWFinalizeColor(color);
}
#endif
#define PI 3.1415926538





struct Actor {
    vec3 pos;
    vec2 light;
    float offset;
    vec3 axis;
    vec4 rotation;
    vec3 rotationCenter;
    float speed;
};




#if defined(VERTEX_SHADER)
BlockFrag vertex(Vertex v, Actor instance) {
    float degrees = instance.offset + uTime * instance.speed / 20.;
    //float angle = fract(degrees / 360.) * PI * 2.;

    vec4 kineticRot = quat(instance.axis, degrees);
    vec3 rotated = rotateVertexByQuat(v.pos - instance.rotationCenter, kineticRot) + instance.rotationCenter;

    vec4 worldPos = vec4(rotateVertexByQuat(rotated - .5, instance.rotation) + instance.pos + .5, 1.);
    vec3 norm = rotateVertexByQuat(rotateVertexByQuat(v.normal, kineticRot), instance.rotation);

    FLWFinalizeWorldPos(worldPos);
    FLWFinalizeNormal(norm);

    BlockFrag b;
    b.diffuse = diffuse(norm);
    b.texCoords = v.texCoords;
    b.light = instance.light;

    #if defined(DEBUG_NORMAL)
    b.color = vec4(norm, 1.);
    #else
    b.color = vec4(1.);
    #endif

    return b;
}
#endif

in vec2 v2f_texCoords;
in vec4 v2f_color;
in float v2f_diffuse;
in vec2 v2f_light;
void main() {
BlockFrag o;
o.texCoords = v2f_texCoords;
o.color = v2f_color;
o.diffuse = v2f_diffuse;
o.light = v2f_light;
fragment(o);
}
[16:19:40] [Render thread/ERROR]: Shader compilation log for create:contraption_actor: WARNING: 0:2: extension 'GL_ARB_conservative_depth' is not supported

[16:19:40] [Render thread/ERROR]: #version 150
#extension GL_ARB_conservative_depth : enable
#define VERTEX_SHADER
#define DEBUG_NORMAL
#if defined(VERTEX_SHADER)
out float FragDistance;
#elif defined(FRAGMENT_SHADER)
in float FragDistance;
#endif
uniform vec4 uFogColor;
uniform vec2 uFogRange;

float cylindrical_distance(vec3 worldPos, vec3 cameraPos) {
    float distXZ = length(worldPos.xz - cameraPos.xz);
    float distY = abs(worldPos.y - cameraPos.y);
    return max(distXZ, distY);
}

float cylindrical_distance(vec3 worldPos) {
    float distXZ = length(worldPos.xz);
    float distY = abs(worldPos.y);
    return max(distXZ, distY);
}

float FLWFogFactor() {
    return (uFogRange.y - FragDistance) / (uFogRange.y - uFogRange.x);
}
// Adjust the [0,1] normalized lightmap value based on the texture matrix from LightTexture#enableLightmap
vec2 shiftLight(vec2 lm) {
    return lm * 0.99609375 + 0.03125;// * 255/256 + 1/32
}


uniform sampler3D uLightVolume;

uniform sampler2D uBlockAtlas;
uniform sampler2D uLightMap;

uniform vec3 uLightBoxSize;
uniform vec3 uLightBoxMin;
uniform mat4 uModel;

uniform float uTime;
uniform mat4 uViewProjection;
uniform vec3 uCameraPos;

void FLWFinalizeNormal(inout vec3 normal) {
    mat3 m;
    m[0] = uModel[0].xyz;
    m[1] = uModel[1].xyz;
    m[2] = uModel[2].xyz;
    normal = m * normal;
}

#if defined(VERTEX_SHADER)

out vec3 BoxCoord;

void FLWFinalizeWorldPos(inout vec4 worldPos) {
    worldPos = uModel * worldPos;

    BoxCoord = (worldPos.xyz - uLightBoxMin) / uLightBoxSize;

    FragDistance = max(length(worldPos.xz), abs(worldPos.y)); // cylindrical fog

    gl_Position = uViewProjection * worldPos;
}

#elif defined(FRAGMENT_SHADER)


#define ALPHA_DISCARD 0.1
// optimize discard usage
#if defined(ALPHA_DISCARD)
#if defined(GL_ARB_conservative_depth)
layout (depth_greater) out float gl_FragDepth;
#endif
#endif

in vec3 BoxCoord;

out vec4 FragColor;

vec4 FLWBlockTexture(vec2 texCoords) {
    return texture(uBlockAtlas, texCoords);
}

void FLWFinalizeColor(vec4 color) {
    float a = color.a;
    float fog = clamp(FLWFogFactor(), 0., 1.);

    color = mix(uFogColor, color, fog);
    color.a = a;

    #if defined(ALPHA_DISCARD)
    if (color.a < ALPHA_DISCARD) {
        discard;
    }
    #endif

    FragColor = color;
}

vec4 FLWLight(vec2 lightCoords) {
    lightCoords = max(lightCoords, texture(uLightVolume, BoxCoord).rg);

    return texture(uLightMap, shiftLight(lightCoords));
}

#endif


mat4 rotate(vec3 axis, float angle) {
    float s = sin(angle);
    float c = cos(angle);
    float oc = 1. - c;

    vec3 sa = axis * s;

    mat4 mr = mat4(1.);
    mr[0].xyz = oc * axis.xxz * axis.xyx + vec3(c, sa.z, -sa.y);
    mr[1].xyz = oc * axis.xyy * axis.yyz + vec3(-sa.z, c, sa.x);
    mr[2].xyz = oc * axis.zyz * axis.xzz + vec3(sa.y, -sa.x, c);

    return mr;
}

mat4 rotation(vec3 rot) {
    return rotate(vec3(0., 1., 0.), rot.y) * rotate(vec3(0., 0., 1.), rot.z) * rotate(vec3(1., 0., 0.), rot.x);
}

mat3 modelToNormal(mat4 mat) {
    // Discard the edges. This won't be accurate for scaled or skewed matrices,
    // but we don't have to work with those often.
    mat3 m;
    m[0] = mat[0].xyz;
    m[1] = mat[1].xyz;
    m[2] = mat[2].xyz;
    return m;
}

#define PIOVER2 1.5707963268

vec4 quat(vec3 axis, float angle) {
    float halfAngle = angle * PIOVER2 / 180.0;
    vec2 cs = sin(vec2(PIOVER2 - halfAngle, halfAngle)); // compute sin and cos in one instruction
    return vec4(axis.xyz * cs.y,  cs.x);
}

vec4 quatMult(vec4 q1, vec4 q2) {
    // disgustingly vectorized quaternion multiplication
    vec4 a = q1.w * q2.xyzw;
    vec4 b = q1.x * q2.wzxy * vec4(1., -1., 1., -1.);
    vec4 c = q1.y * q2.zwxy * vec4(1., 1., -1., -1.);
    vec4 d = q1.z * q2.yxwz * vec4(-1., 1., 1., -1.);

    return a + b + c + d;
}

vec3 rotateVertexByQuat(vec3 v, vec4 q) {
    vec3 i = q.xyz;
    return v + 2.0 * cross(i, cross(i, v) + q.w * v);
}

vec3 rotateAbout(vec3 v, vec3 axis, float angle) {
    return rotateVertexByQuat(v, quat(axis, angle));
}

float diffuse(vec3 normal) {
    vec3 n2 = normal * normal * vec3(.6, .25, .8);
    return min(n2.x + n2.y * (3. + normal.y) + n2.z, 1.);
}
struct Vertex {
    vec3 pos;
    vec2 texCoords;
    vec3 normal;
};

struct BlockFrag {
    vec2 texCoords;
    vec4 color;
    float diffuse;
    vec2 light;
};

#if defined(FRAGMENT_SHADER)
void fragment(BlockFrag r) {
    vec4 tex = FLWBlockTexture(r.texCoords);

    vec4 color = vec4(tex.rgb * FLWLight(r.light).rgb * r.diffuse, tex.a) * r.color;

    FLWFinalizeColor(color);
}
#endif
#define PI 3.1415926538





struct Actor {
    vec3 pos;
    vec2 light;
    float offset;
    vec3 axis;
    vec4 rotation;
    vec3 rotationCenter;
    float speed;
};




#if defined(VERTEX_SHADER)
BlockFrag vertex(Vertex v, Actor instance) {
    float degrees = instance.offset + uTime * instance.speed / 20.;
    //float angle = fract(degrees / 360.) * PI * 2.;

    vec4 kineticRot = quat(instance.axis, degrees);
    vec3 rotated = rotateVertexByQuat(v.pos - instance.rotationCenter, kineticRot) + instance.rotationCenter;

    vec4 worldPos = vec4(rotateVertexByQuat(rotated - .5, instance.rotation) + instance.pos + .5, 1.);
    vec3 norm = rotateVertexByQuat(rotateVertexByQuat(v.normal, kineticRot), instance.rotation);

    FLWFinalizeWorldPos(worldPos);
    FLWFinalizeNormal(norm);

    BlockFrag b;
    b.diffuse = diffuse(norm);
    b.texCoords = v.texCoords;
    b.light = instance.light;

    #if defined(DEBUG_NORMAL)
    b.color = vec4(norm, 1.);
    #else
    b.color = vec4(1.);
    #endif

    return b;
}
#endif

in vec3 a_v_pos;
in vec2 a_v_texCoords;
in vec3 a_v_normal;
in vec3 a_i_pos;
in vec2 a_i_light;
in float a_i_offset;
in vec3 a_i_axis;
in vec4 a_i_rotation;
in vec3 a_i_rotationCenter;
in float a_i_speed;
out vec2 v2f_texCoords;
out vec4 v2f_color;
out float v2f_diffuse;
out vec2 v2f_light;
void main() {
Vertex v;
v.pos = a_v_pos;
v.texCoords = a_v_texCoords;
v.normal = a_v_normal;
Actor i;
i.pos = a_i_pos;
i.light = a_i_light;
i.offset = a_i_offset;
i.axis = a_i_axis;
i.rotation = a_i_rotation;
i.rotationCenter = a_i_rotationCenter;
i.speed = a_i_speed;
BlockFrag o = vertex(v, i);
v2f_texCoords = o.texCoords;
v2f_color = o.color;
v2f_diffuse = o.diffuse;
v2f_light = o.light;
}
[16:19:40] [Render thread/ERROR]: Shader compilation log for create:contraption_actor: WARNING: 0:2: extension 'GL_ARB_conservative_depth' is not supported

[16:19:40] [Render thread/ERROR]: #version 150
#extension GL_ARB_conservative_depth : enable
#define FRAGMENT_SHADER
#define DEBUG_NORMAL
#if defined(VERTEX_SHADER)
out float FragDistance;
#elif defined(FRAGMENT_SHADER)
in float FragDistance;
#endif
uniform vec4 uFogColor;
uniform vec2 uFogRange;

float cylindrical_distance(vec3 worldPos, vec3 cameraPos) {
    float distXZ = length(worldPos.xz - cameraPos.xz);
    float distY = abs(worldPos.y - cameraPos.y);
    return max(distXZ, distY);
}

float cylindrical_distance(vec3 worldPos) {
    float distXZ = length(worldPos.xz);
    float distY = abs(worldPos.y);
    return max(distXZ, distY);
}

float FLWFogFactor() {
    return (uFogRange.y - FragDistance) / (uFogRange.y - uFogRange.x);
}
// Adjust the [0,1] normalized lightmap value based on the texture matrix from LightTexture#enableLightmap
vec2 shiftLight(vec2 lm) {
    return lm * 0.99609375 + 0.03125;// * 255/256 + 1/32
}


uniform sampler3D uLightVolume;

uniform sampler2D uBlockAtlas;
uniform sampler2D uLightMap;

uniform vec3 uLightBoxSize;
uniform vec3 uLightBoxMin;
uniform mat4 uModel;

uniform float uTime;
uniform mat4 uViewProjection;
uniform vec3 uCameraPos;

void FLWFinalizeNormal(inout vec3 normal) {
    mat3 m;
    m[0] = uModel[0].xyz;
    m[1] = uModel[1].xyz;
    m[2] = uModel[2].xyz;
    normal = m * normal;
}

#if defined(VERTEX_SHADER)

out vec3 BoxCoord;

void FLWFinalizeWorldPos(inout vec4 worldPos) {
    worldPos = uModel * worldPos;

    BoxCoord = (worldPos.xyz - uLightBoxMin) / uLightBoxSize;

    FragDistance = max(length(worldPos.xz), abs(worldPos.y)); // cylindrical fog

    gl_Position = uViewProjection * worldPos;
}

#elif defined(FRAGMENT_SHADER)


#define ALPHA_DISCARD 0.1
// optimize discard usage
#if defined(ALPHA_DISCARD)
#if defined(GL_ARB_conservative_depth)
layout (depth_greater) out float gl_FragDepth;
#endif
#endif

in vec3 BoxCoord;

out vec4 FragColor;

vec4 FLWBlockTexture(vec2 texCoords) {
    return texture(uBlockAtlas, texCoords);
}

void FLWFinalizeColor(vec4 color) {
    float a = color.a;
    float fog = clamp(FLWFogFactor(), 0., 1.);

    color = mix(uFogColor, color, fog);
    color.a = a;

    #if defined(ALPHA_DISCARD)
    if (color.a < ALPHA_DISCARD) {
        discard;
    }
    #endif

    FragColor = color;
}

vec4 FLWLight(vec2 lightCoords) {
    lightCoords = max(lightCoords, texture(uLightVolume, BoxCoord).rg);

    return texture(uLightMap, shiftLight(lightCoords));
}

#endif


mat4 rotate(vec3 axis, float angle) {
    float s = sin(angle);
    float c = cos(angle);
    float oc = 1. - c;

    vec3 sa = axis * s;

    mat4 mr = mat4(1.);
    mr[0].xyz = oc * axis.xxz * axis.xyx + vec3(c, sa.z, -sa.y);
    mr[1].xyz = oc * axis.xyy * axis.yyz + vec3(-sa.z, c, sa.x);
    mr[2].xyz = oc * axis.zyz * axis.xzz + vec3(sa.y, -sa.x, c);

    return mr;
}

mat4 rotation(vec3 rot) {
    return rotate(vec3(0., 1., 0.), rot.y) * rotate(vec3(0., 0., 1.), rot.z) * rotate(vec3(1., 0., 0.), rot.x);
}

mat3 modelToNormal(mat4 mat) {
    // Discard the edges. This won't be accurate for scaled or skewed matrices,
    // but we don't have to work with those often.
    mat3 m;
    m[0] = mat[0].xyz;
    m[1] = mat[1].xyz;
    m[2] = mat[2].xyz;
    return m;
}

#define PIOVER2 1.5707963268

vec4 quat(vec3 axis, float angle) {
    float halfAngle = angle * PIOVER2 / 180.0;
    vec2 cs = sin(vec2(PIOVER2 - halfAngle, halfAngle)); // compute sin and cos in one instruction
    return vec4(axis.xyz * cs.y,  cs.x);
}

vec4 quatMult(vec4 q1, vec4 q2) {
    // disgustingly vectorized quaternion multiplication
    vec4 a = q1.w * q2.xyzw;
    vec4 b = q1.x * q2.wzxy * vec4(1., -1., 1., -1.);
    vec4 c = q1.y * q2.zwxy * vec4(1., 1., -1., -1.);
    vec4 d = q1.z * q2.yxwz * vec4(-1., 1., 1., -1.);

    return a + b + c + d;
}

vec3 rotateVertexByQuat(vec3 v, vec4 q) {
    vec3 i = q.xyz;
    return v + 2.0 * cross(i, cross(i, v) + q.w * v);
}

vec3 rotateAbout(vec3 v, vec3 axis, float angle) {
    return rotateVertexByQuat(v, quat(axis, angle));
}

float diffuse(vec3 normal) {
    vec3 n2 = normal * normal * vec3(.6, .25, .8);
    return min(n2.x + n2.y * (3. + normal.y) + n2.z, 1.);
}
struct Vertex {
    vec3 pos;
    vec2 texCoords;
    vec3 normal;
};

struct BlockFrag {
    vec2 texCoords;
    vec4 color;
    float diffuse;
    vec2 light;
};

#if defined(FRAGMENT_SHADER)
void fragment(BlockFrag r) {
    vec4 tex = FLWBlockTexture(r.texCoords);

    vec4 color = vec4(tex.rgb * FLWLight(r.light).rgb * r.diffuse, tex.a) * r.color;

    FLWFinalizeColor(color);
}
#endif
#define PI 3.1415926538





struct Actor {
    vec3 pos;
    vec2 light;
    float offset;
    vec3 axis;
    vec4 rotation;
    vec3 rotationCenter;
    float speed;
};




#if defined(VERTEX_SHADER)
BlockFrag vertex(Vertex v, Actor instance) {
    float degrees = instance.offset + uTime * instance.speed / 20.;
    //float angle = fract(degrees / 360.) * PI * 2.;

    vec4 kineticRot = quat(instance.axis, degrees);
    vec3 rotated = rotateVertexByQuat(v.pos - instance.rotationCenter, kineticRot) + instance.rotationCenter;

    vec4 worldPos = vec4(rotateVertexByQuat(rotated - .5, instance.rotation) + instance.pos + .5, 1.);
    vec3 norm = rotateVertexByQuat(rotateVertexByQuat(v.normal, kineticRot), instance.rotation);

    FLWFinalizeWorldPos(worldPos);
    FLWFinalizeNormal(norm);

    BlockFrag b;
    b.diffuse = diffuse(norm);
    b.texCoords = v.texCoords;
    b.light = instance.light;

    #if defined(DEBUG_NORMAL)
    b.color = vec4(norm, 1.);
    #else
    b.color = vec4(1.);
    #endif

    return b;
}
#endif

in vec2 v2f_texCoords;
in vec4 v2f_color;
in float v2f_diffuse;
in vec2 v2f_light;
void main() {
BlockFrag o;
o.texCoords = v2f_texCoords;
o.color = v2f_color;
o.diffuse = v2f_diffuse;
o.light = v2f_light;
fragment(o);
}
[16:19:40] [Render thread/ERROR]: Shader compilation log for create:flap: WARNING: 0:2: extension 'GL_ARB_conservative_depth' is not supported

[16:19:40] [Render thread/ERROR]: #version 150
#extension GL_ARB_conservative_depth : enable
#define VERTEX_SHADER
#if defined(VERTEX_SHADER)
out float FragDistance;
#elif defined(FRAGMENT_SHADER)
in float FragDistance;
#endif
uniform vec4 uFogColor;
uniform vec2 uFogRange;

float cylindrical_distance(vec3 worldPos, vec3 cameraPos) {
    float distXZ = length(worldPos.xz - cameraPos.xz);
    float distY = abs(worldPos.y - cameraPos.y);
    return max(distXZ, distY);
}

float cylindrical_distance(vec3 worldPos) {
    float distXZ = length(worldPos.xz);
    float distY = abs(worldPos.y);
    return max(distXZ, distY);
}

float FLWFogFactor() {
    return (uFogRange.y - FragDistance) / (uFogRange.y - uFogRange.x);
}
// Adjust the [0,1] normalized lightmap value based on the texture matrix from LightTexture#enableLightmap
vec2 shiftLight(vec2 lm) {
    return lm * 0.99609375 + 0.03125;// * 255/256 + 1/32
}


uniform sampler3D uLightVolume;

uniform sampler2D uBlockAtlas;
uniform sampler2D uLightMap;

uniform vec3 uLightBoxSize;
uniform vec3 uLightBoxMin;
uniform mat4 uModel;

uniform float uTime;
uniform mat4 uViewProjection;
uniform vec3 uCameraPos;

void FLWFinalizeNormal(inout vec3 normal) {
    mat3 m;
    m[0] = uModel[0].xyz;
    m[1] = uModel[1].xyz;
    m[2] = uModel[2].xyz;
    normal = m * normal;
}

#if defined(VERTEX_SHADER)

out vec3 BoxCoord;

void FLWFinalizeWorldPos(inout vec4 worldPos) {
    worldPos = uModel * worldPos;

    BoxCoord = (worldPos.xyz - uLightBoxMin) / uLightBoxSize;

    FragDistance = max(length(worldPos.xz), abs(worldPos.y)); // cylindrical fog

    gl_Position = uViewProjection * worldPos;
}

#elif defined(FRAGMENT_SHADER)


#define ALPHA_DISCARD 0.1
// optimize discard usage
#if defined(ALPHA_DISCARD)
#if defined(GL_ARB_conservative_depth)
layout (depth_greater) out float gl_FragDepth;
#endif
#endif

in vec3 BoxCoord;

out vec4 FragColor;

vec4 FLWBlockTexture(vec2 texCoords) {
    return texture(uBlockAtlas, texCoords);
}

void FLWFinalizeColor(vec4 color) {
    float a = color.a;
    float fog = clamp(FLWFogFactor(), 0., 1.);

    color = mix(uFogColor, color, fog);
    color.a = a;

    #if defined(ALPHA_DISCARD)
    if (color.a < ALPHA_DISCARD) {
        discard;
    }
    #endif

    FragColor = color;
}

vec4 FLWLight(vec2 lightCoords) {
    lightCoords = max(lightCoords, texture(uLightVolume, BoxCoord).rg);

    return texture(uLightMap, shiftLight(lightCoords));
}

#endif


mat4 rotate(vec3 axis, float angle) {
    float s = sin(angle);
    float c = cos(angle);
    float oc = 1. - c;

    vec3 sa = axis * s;

    mat4 mr = mat4(1.);
    mr[0].xyz = oc * axis.xxz * axis.xyx + vec3(c, sa.z, -sa.y);
    mr[1].xyz = oc * axis.xyy * axis.yyz + vec3(-sa.z, c, sa.x);
    mr[2].xyz = oc * axis.zyz * axis.xzz + vec3(sa.y, -sa.x, c);

    return mr;
}

mat4 rotation(vec3 rot) {
    return rotate(vec3(0., 1., 0.), rot.y) * rotate(vec3(0., 0., 1.), rot.z) * rotate(vec3(1., 0., 0.), rot.x);
}

mat3 modelToNormal(mat4 mat) {
    // Discard the edges. This won't be accurate for scaled or skewed matrices,
    // but we don't have to work with those often.
    mat3 m;
    m[0] = mat[0].xyz;
    m[1] = mat[1].xyz;
    m[2] = mat[2].xyz;
    return m;
}

#define PIOVER2 1.5707963268

vec4 quat(vec3 axis, float angle) {
    float halfAngle = angle * PIOVER2 / 180.0;
    vec2 cs = sin(vec2(PIOVER2 - halfAngle, halfAngle)); // compute sin and cos in one instruction
    return vec4(axis.xyz * cs.y,  cs.x);
}

vec4 quatMult(vec4 q1, vec4 q2) {
    // disgustingly vectorized quaternion multiplication
    vec4 a = q1.w * q2.xyzw;
    vec4 b = q1.x * q2.wzxy * vec4(1., -1., 1., -1.);
    vec4 c = q1.y * q2.zwxy * vec4(1., 1., -1., -1.);
    vec4 d = q1.z * q2.yxwz * vec4(-1., 1., 1., -1.);

    return a + b + c + d;
}

vec3 rotateVertexByQuat(vec3 v, vec4 q) {
    vec3 i = q.xyz;
    return v + 2.0 * cross(i, cross(i, v) + q.w * v);
}

vec3 rotateAbout(vec3 v, vec3 axis, float angle) {
    return rotateVertexByQuat(v, quat(axis, angle));
}

float diffuse(vec3 normal) {
    vec3 n2 = normal * normal * vec3(.6, .25, .8);
    return min(n2.x + n2.y * (3. + normal.y) + n2.z, 1.);
}
struct Vertex {
    vec3 pos;
    vec2 texCoords;
    vec3 normal;
};

struct BlockFrag {
    vec2 texCoords;
    vec4 color;
    float diffuse;
    vec2 light;
};

#if defined(FRAGMENT_SHADER)
void fragment(BlockFrag r) {
    vec4 tex = FLWBlockTexture(r.texCoords);

    vec4 color = vec4(tex.rgb * FLWLight(r.light).rgb * r.diffuse, tex.a) * r.color;

    FLWFinalizeColor(color);
}
#endif
#define PI 3.1415926538





struct Flap {
    vec3 instancePos;
    vec2 light;
    vec3 segmentOffset;
    vec3 pivot;
    float horizontalAngle;
    float intensity;
    float flapScale;
    float flapness;
};




#if defined(VERTEX_SHADER)

float toRad(float degrees) {
    return fract(degrees / 360.) * PI * 2.;
}

float getFlapAngle(float flapness, float intensity, float scale) {
    float absFlap = abs(flapness);

    float angle = sin((1. - absFlap) * PI * intensity) * 30. * flapness * scale;

    float halfAngle = angle * 0.5;

    float which = step(0., flapness); // 0 if negative, 1 if positive
    float degrees = which * halfAngle + (1. - which) * angle; // branchless conditional multiply

    return degrees;
}

BlockFrag vertex(Vertex v, Flap flap) {
    float flapAngle = getFlapAngle(flap.flapness, flap.intensity, flap.flapScale);

    vec4 orientation = quat(vec3(0., 1., 0.), -flap.horizontalAngle);
    vec4 flapRotation = quat(vec3(1., 0., 0.), flapAngle);

    vec3 rotated = rotateVertexByQuat(v.pos - flap.pivot, flapRotation) + flap.pivot + flap.segmentOffset;
    rotated = rotateVertexByQuat(rotated - .5, orientation) + flap.instancePos + .5;

    vec4 worldPos = vec4(rotated, 1.);
    vec3 norm = rotateVertexByQuat(rotateVertexByQuat(v.normal, flapRotation), orientation);

    FLWFinalizeWorldPos(worldPos);
    FLWFinalizeNormal(norm);

    BlockFrag b;
    b.diffuse = diffuse(norm);
    b.texCoords = v.texCoords;
    b.light = flap.light;
    #if defined(DEBUG_NORMAL)
    b.color = vec4(norm, 1.);
    #else
    b.color = vec4(1.);
    #endif
    return b;
}
#endif

in vec3 a_v_pos;
in vec2 a_v_texCoords;
in vec3 a_v_normal;
in vec3 a_i_instancePos;
in vec2 a_i_light;
in vec3 a_i_segmentOffset;
in vec3 a_i_pivot;
in float a_i_horizontalAngle;
in float a_i_intensity;
in float a_i_flapScale;
in float a_i_flapness;
out vec2 v2f_texCoords;
out vec4 v2f_color;
out float v2f_diffuse;
out vec2 v2f_light;
void main() {
Vertex v;
v.pos = a_v_pos;
v.texCoords = a_v_texCoords;
v.normal = a_v_normal;
Flap i;
i.instancePos = a_i_instancePos;
i.light = a_i_light;
i.segmentOffset = a_i_segmentOffset;
i.pivot = a_i_pivot;
i.horizontalAngle = a_i_horizontalAngle;
i.intensity = a_i_intensity;
i.flapScale = a_i_flapScale;
i.flapness = a_i_flapness;
BlockFrag o = vertex(v, i);
v2f_texCoords = o.texCoords;
v2f_color = o.color;
v2f_diffuse = o.diffuse;
v2f_light = o.light;
}
[16:19:40] [Render thread/ERROR]: Shader compilation log for create:flap: WARNING: 0:2: extension 'GL_ARB_conservative_depth' is not supported

[16:19:40] [Render thread/ERROR]: #version 150
#extension GL_ARB_conservative_depth : enable
#define FRAGMENT_SHADER
#if defined(VERTEX_SHADER)
out float FragDistance;
#elif defined(FRAGMENT_SHADER)
in float FragDistance;
#endif
uniform vec4 uFogColor;
uniform vec2 uFogRange;

float cylindrical_distance(vec3 worldPos, vec3 cameraPos) {
    float distXZ = length(worldPos.xz - cameraPos.xz);
    float distY = abs(worldPos.y - cameraPos.y);
    return max(distXZ, distY);
}

float cylindrical_distance(vec3 worldPos) {
    float distXZ = length(worldPos.xz);
    float distY = abs(worldPos.y);
    return max(distXZ, distY);
}

float FLWFogFactor() {
    return (uFogRange.y - FragDistance) / (uFogRange.y - uFogRange.x);
}
// Adjust the [0,1] normalized lightmap value based on the texture matrix from LightTexture#enableLightmap
vec2 shiftLight(vec2 lm) {
    return lm * 0.99609375 + 0.03125;// * 255/256 + 1/32
}


uniform sampler3D uLightVolume;

uniform sampler2D uBlockAtlas;
uniform sampler2D uLightMap;

uniform vec3 uLightBoxSize;
uniform vec3 uLightBoxMin;
uniform mat4 uModel;

uniform float uTime;
uniform mat4 uViewProjection;
uniform vec3 uCameraPos;

void FLWFinalizeNormal(inout vec3 normal) {
    mat3 m;
    m[0] = uModel[0].xyz;
    m[1] = uModel[1].xyz;
    m[2] = uModel[2].xyz;
    normal = m * normal;
}

#if defined(VERTEX_SHADER)

out vec3 BoxCoord;

void FLWFinalizeWorldPos(inout vec4 worldPos) {
    worldPos = uModel * worldPos;

    BoxCoord = (worldPos.xyz - uLightBoxMin) / uLightBoxSize;

    FragDistance = max(length(worldPos.xz), abs(worldPos.y)); // cylindrical fog

    gl_Position = uViewProjection * worldPos;
}

#elif defined(FRAGMENT_SHADER)


#define ALPHA_DISCARD 0.1
// optimize discard usage
#if defined(ALPHA_DISCARD)
#if defined(GL_ARB_conservative_depth)
layout (depth_greater) out float gl_FragDepth;
#endif
#endif

in vec3 BoxCoord;

out vec4 FragColor;

vec4 FLWBlockTexture(vec2 texCoords) {
    return texture(uBlockAtlas, texCoords);
}

void FLWFinalizeColor(vec4 color) {
    float a = color.a;
    float fog = clamp(FLWFogFactor(), 0., 1.);

    color = mix(uFogColor, color, fog);
    color.a = a;

    #if defined(ALPHA_DISCARD)
    if (color.a < ALPHA_DISCARD) {
        discard;
    }
    #endif

    FragColor = color;
}

vec4 FLWLight(vec2 lightCoords) {
    lightCoords = max(lightCoords, texture(uLightVolume, BoxCoord).rg);

    return texture(uLightMap, shiftLight(lightCoords));
}

#endif


mat4 rotate(vec3 axis, float angle) {
    float s = sin(angle);
    float c = cos(angle);
    float oc = 1. - c;

    vec3 sa = axis * s;

    mat4 mr = mat4(1.);
    mr[0].xyz = oc * axis.xxz * axis.xyx + vec3(c, sa.z, -sa.y);
    mr[1].xyz = oc * axis.xyy * axis.yyz + vec3(-sa.z, c, sa.x);
    mr[2].xyz = oc * axis.zyz * axis.xzz + vec3(sa.y, -sa.x, c);

    return mr;
}

mat4 rotation(vec3 rot) {
    return rotate(vec3(0., 1., 0.), rot.y) * rotate(vec3(0., 0., 1.), rot.z) * rotate(vec3(1., 0., 0.), rot.x);
}

mat3 modelToNormal(mat4 mat) {
    // Discard the edges. This won't be accurate for scaled or skewed matrices,
    // but we don't have to work with those often.
    mat3 m;
    m[0] = mat[0].xyz;
    m[1] = mat[1].xyz;
    m[2] = mat[2].xyz;
    return m;
}

#define PIOVER2 1.5707963268

vec4 quat(vec3 axis, float angle) {
    float halfAngle = angle * PIOVER2 / 180.0;
    vec2 cs = sin(vec2(PIOVER2 - halfAngle, halfAngle)); // compute sin and cos in one instruction
    return vec4(axis.xyz * cs.y,  cs.x);
}

vec4 quatMult(vec4 q1, vec4 q2) {
    // disgustingly vectorized quaternion multiplication
    vec4 a = q1.w * q2.xyzw;
    vec4 b = q1.x * q2.wzxy * vec4(1., -1., 1., -1.);
    vec4 c = q1.y * q2.zwxy * vec4(1., 1., -1., -1.);
    vec4 d = q1.z * q2.yxwz * vec4(-1., 1., 1., -1.);

    return a + b + c + d;
}

vec3 rotateVertexByQuat(vec3 v, vec4 q) {
    vec3 i = q.xyz;
    return v + 2.0 * cross(i, cross(i, v) + q.w * v);
}

vec3 rotateAbout(vec3 v, vec3 axis, float angle) {
    return rotateVertexByQuat(v, quat(axis, angle));
}

float diffuse(vec3 normal) {
    vec3 n2 = normal * normal * vec3(.6, .25, .8);
    return min(n2.x + n2.y * (3. + normal.y) + n2.z, 1.);
}
struct Vertex {
    vec3 pos;
    vec2 texCoords;
    vec3 normal;
};

struct BlockFrag {
    vec2 texCoords;
    vec4 color;
    float diffuse;
    vec2 light;
};

#if defined(FRAGMENT_SHADER)
void fragment(BlockFrag r) {
    vec4 tex = FLWBlockTexture(r.texCoords);

    vec4 color = vec4(tex.rgb * FLWLight(r.light).rgb * r.diffuse, tex.a) * r.color;

    FLWFinalizeColor(color);
}
#endif
#define PI 3.1415926538





struct Flap {
    vec3 instancePos;
    vec2 light;
    vec3 segmentOffset;
    vec3 pivot;
    float horizontalAngle;
    float intensity;
    float flapScale;
    float flapness;
};




#if defined(VERTEX_SHADER)

float toRad(float degrees) {
    return fract(degrees / 360.) * PI * 2.;
}

float getFlapAngle(float flapness, float intensity, float scale) {
    float absFlap = abs(flapness);

    float angle = sin((1. - absFlap) * PI * intensity) * 30. * flapness * scale;

    float halfAngle = angle * 0.5;

    float which = step(0., flapness); // 0 if negative, 1 if positive
    float degrees = which * halfAngle + (1. - which) * angle; // branchless conditional multiply

    return degrees;
}

BlockFrag vertex(Vertex v, Flap flap) {
    float flapAngle = getFlapAngle(flap.flapness, flap.intensity, flap.flapScale);

    vec4 orientation = quat(vec3(0., 1., 0.), -flap.horizontalAngle);
    vec4 flapRotation = quat(vec3(1., 0., 0.), flapAngle);

    vec3 rotated = rotateVertexByQuat(v.pos - flap.pivot, flapRotation) + flap.pivot + flap.segmentOffset;
    rotated = rotateVertexByQuat(rotated - .5, orientation) + flap.instancePos + .5;

    vec4 worldPos = vec4(rotated, 1.);
    vec3 norm = rotateVertexByQuat(rotateVertexByQuat(v.normal, flapRotation), orientation);

    FLWFinalizeWorldPos(worldPos);
    FLWFinalizeNormal(norm);

    BlockFrag b;
    b.diffuse = diffuse(norm);
    b.texCoords = v.texCoords;
    b.light = flap.light;
    #if defined(DEBUG_NORMAL)
    b.color = vec4(norm, 1.);
    #else
    b.color = vec4(1.);
    #endif
    return b;
}
#endif

in vec2 v2f_texCoords;
in vec4 v2f_color;
in float v2f_diffuse;
in vec2 v2f_light;
void main() {
BlockFrag o;
o.texCoords = v2f_texCoords;
o.color = v2f_color;
o.diffuse = v2f_diffuse;
o.light = v2f_light;
fragment(o);
}
[16:19:40] [Render thread/ERROR]: Shader compilation log for create:flap: WARNING: 0:2: extension 'GL_ARB_conservative_depth' is not supported

[16:19:40] [Render thread/ERROR]: #version 150
#extension GL_ARB_conservative_depth : enable
#define VERTEX_SHADER
#define DEBUG_NORMAL
#if defined(VERTEX_SHADER)
out float FragDistance;
#elif defined(FRAGMENT_SHADER)
in float FragDistance;
#endif
uniform vec4 uFogColor;
uniform vec2 uFogRange;

float cylindrical_distance(vec3 worldPos, vec3 cameraPos) {
    float distXZ = length(worldPos.xz - cameraPos.xz);
    float distY = abs(worldPos.y - cameraPos.y);
    return max(distXZ, distY);
}

float cylindrical_distance(vec3 worldPos) {
    float distXZ = length(worldPos.xz);
    float distY = abs(worldPos.y);
    return max(distXZ, distY);
}

float FLWFogFactor() {
    return (uFogRange.y - FragDistance) / (uFogRange.y - uFogRange.x);
}
// Adjust the [0,1] normalized lightmap value based on the texture matrix from LightTexture#enableLightmap
vec2 shiftLight(vec2 lm) {
    return lm * 0.99609375 + 0.03125;// * 255/256 + 1/32
}


uniform sampler3D uLightVolume;

uniform sampler2D uBlockAtlas;
uniform sampler2D uLightMap;

uniform vec3 uLightBoxSize;
uniform vec3 uLightBoxMin;
uniform mat4 uModel;

uniform float uTime;
uniform mat4 uViewProjection;
uniform vec3 uCameraPos;

void FLWFinalizeNormal(inout vec3 normal) {
    mat3 m;
    m[0] = uModel[0].xyz;
    m[1] = uModel[1].xyz;
    m[2] = uModel[2].xyz;
    normal = m * normal;
}

#if defined(VERTEX_SHADER)

out vec3 BoxCoord;

void FLWFinalizeWorldPos(inout vec4 worldPos) {
    worldPos = uModel * worldPos;

    BoxCoord = (worldPos.xyz - uLightBoxMin) / uLightBoxSize;

    FragDistance = max(length(worldPos.xz), abs(worldPos.y)); // cylindrical fog

    gl_Position = uViewProjection * worldPos;
}

#elif defined(FRAGMENT_SHADER)


#define ALPHA_DISCARD 0.1
// optimize discard usage
#if defined(ALPHA_DISCARD)
#if defined(GL_ARB_conservative_depth)
layout (depth_greater) out float gl_FragDepth;
#endif
#endif

in vec3 BoxCoord;

out vec4 FragColor;

vec4 FLWBlockTexture(vec2 texCoords) {
    return texture(uBlockAtlas, texCoords);
}

void FLWFinalizeColor(vec4 color) {
    float a = color.a;
    float fog = clamp(FLWFogFactor(), 0., 1.);

    color = mix(uFogColor, color, fog);
    color.a = a;

    #if defined(ALPHA_DISCARD)
    if (color.a < ALPHA_DISCARD) {
        discard;
    }
    #endif

    FragColor = color;
}

vec4 FLWLight(vec2 lightCoords) {
    lightCoords = max(lightCoords, texture(uLightVolume, BoxCoord).rg);

    return texture(uLightMap, shiftLight(lightCoords));
}

#endif


mat4 rotate(vec3 axis, float angle) {
    float s = sin(angle);
    float c = cos(angle);
    float oc = 1. - c;

    vec3 sa = axis * s;

    mat4 mr = mat4(1.);
    mr[0].xyz = oc * axis.xxz * axis.xyx + vec3(c, sa.z, -sa.y);
    mr[1].xyz = oc * axis.xyy * axis.yyz + vec3(-sa.z, c, sa.x);
    mr[2].xyz = oc * axis.zyz * axis.xzz + vec3(sa.y, -sa.x, c);

    return mr;
}

mat4 rotation(vec3 rot) {
    return rotate(vec3(0., 1., 0.), rot.y) * rotate(vec3(0., 0., 1.), rot.z) * rotate(vec3(1., 0., 0.), rot.x);
}

mat3 modelToNormal(mat4 mat) {
    // Discard the edges. This won't be accurate for scaled or skewed matrices,
    // but we don't have to work with those often.
    mat3 m;
    m[0] = mat[0].xyz;
    m[1] = mat[1].xyz;
    m[2] = mat[2].xyz;
    return m;
}

#define PIOVER2 1.5707963268

vec4 quat(vec3 axis, float angle) {
    float halfAngle = angle * PIOVER2 / 180.0;
    vec2 cs = sin(vec2(PIOVER2 - halfAngle, halfAngle)); // compute sin and cos in one instruction
    return vec4(axis.xyz * cs.y,  cs.x);
}

vec4 quatMult(vec4 q1, vec4 q2) {
    // disgustingly vectorized quaternion multiplication
    vec4 a = q1.w * q2.xyzw;
    vec4 b = q1.x * q2.wzxy * vec4(1., -1., 1., -1.);
    vec4 c = q1.y * q2.zwxy * vec4(1., 1., -1., -1.);
    vec4 d = q1.z * q2.yxwz * vec4(-1., 1., 1., -1.);

    return a + b + c + d;
}

vec3 rotateVertexByQuat(vec3 v, vec4 q) {
    vec3 i = q.xyz;
    return v + 2.0 * cross(i, cross(i, v) + q.w * v);
}

vec3 rotateAbout(vec3 v, vec3 axis, float angle) {
    return rotateVertexByQuat(v, quat(axis, angle));
}

float diffuse(vec3 normal) {
    vec3 n2 = normal * normal * vec3(.6, .25, .8);
    return min(n2.x + n2.y * (3. + normal.y) + n2.z, 1.);
}
struct Vertex {
    vec3 pos;
    vec2 texCoords;
    vec3 normal;
};

struct BlockFrag {
    vec2 texCoords;
    vec4 color;
    float diffuse;
    vec2 light;
};

#if defined(FRAGMENT_SHADER)
void fragment(BlockFrag r) {
    vec4 tex = FLWBlockTexture(r.texCoords);

    vec4 color = vec4(tex.rgb * FLWLight(r.light).rgb * r.diffuse, tex.a) * r.color;

    FLWFinalizeColor(color);
}
#endif
#define PI 3.1415926538





struct Flap {
    vec3 instancePos;
    vec2 light;
    vec3 segmentOffset;
    vec3 pivot;
    float horizontalAngle;
    float intensity;
    float flapScale;
    float flapness;
};




#if defined(VERTEX_SHADER)

float toRad(float degrees) {
    return fract(degrees / 360.) * PI * 2.;
}

float getFlapAngle(float flapness, float intensity, float scale) {
    float absFlap = abs(flapness);

    float angle = sin((1. - absFlap) * PI * intensity) * 30. * flapness * scale;

    float halfAngle = angle * 0.5;

    float which = step(0., flapness); // 0 if negative, 1 if positive
    float degrees = which * halfAngle + (1. - which) * angle; // branchless conditional multiply

    return degrees;
}

BlockFrag vertex(Vertex v, Flap flap) {
    float flapAngle = getFlapAngle(flap.flapness, flap.intensity, flap.flapScale);

    vec4 orientation = quat(vec3(0., 1., 0.), -flap.horizontalAngle);
    vec4 flapRotation = quat(vec3(1., 0., 0.), flapAngle);

    vec3 rotated = rotateVertexByQuat(v.pos - flap.pivot, flapRotation) + flap.pivot + flap.segmentOffset;
    rotated = rotateVertexByQuat(rotated - .5, orientation) + flap.instancePos + .5;

    vec4 worldPos = vec4(rotated, 1.);
    vec3 norm = rotateVertexByQuat(rotateVertexByQuat(v.normal, flapRotation), orientation);

    FLWFinalizeWorldPos(worldPos);
    FLWFinalizeNormal(norm);

    BlockFrag b;
    b.diffuse = diffuse(norm);
    b.texCoords = v.texCoords;
    b.light = flap.light;
    #if defined(DEBUG_NORMAL)
    b.color = vec4(norm, 1.);
    #else
    b.color = vec4(1.);
    #endif
    return b;
}
#endif

in vec3 a_v_pos;
in vec2 a_v_texCoords;
in vec3 a_v_normal;
in vec3 a_i_instancePos;
in vec2 a_i_light;
in vec3 a_i_segmentOffset;
in vec3 a_i_pivot;
in float a_i_horizontalAngle;
in float a_i_intensity;
in float a_i_flapScale;
in float a_i_flapness;
out vec2 v2f_texCoords;
out vec4 v2f_color;
out float v2f_diffuse;
out vec2 v2f_light;
void main() {
Vertex v;
v.pos = a_v_pos;
v.texCoords = a_v_texCoords;
v.normal = a_v_normal;
Flap i;
i.instancePos = a_i_instancePos;
i.light = a_i_light;
i.segmentOffset = a_i_segmentOffset;
i.pivot = a_i_pivot;
i.horizontalAngle = a_i_horizontalAngle;
i.intensity = a_i_intensity;
i.flapScale = a_i_flapScale;
i.flapness = a_i_flapness;
BlockFrag o = vertex(v, i);
v2f_texCoords = o.texCoords;
v2f_color = o.color;
v2f_diffuse = o.diffuse;
v2f_light = o.light;
}
[16:19:40] [Render thread/ERROR]: Shader compilation log for create:flap: WARNING: 0:2: extension 'GL_ARB_conservative_depth' is not supported

[16:19:40] [Render thread/ERROR]: #version 150
#extension GL_ARB_conservative_depth : enable
#define FRAGMENT_SHADER
#define DEBUG_NORMAL
#if defined(VERTEX_SHADER)
out float FragDistance;
#elif defined(FRAGMENT_SHADER)
in float FragDistance;
#endif
uniform vec4 uFogColor;
uniform vec2 uFogRange;

float cylindrical_distance(vec3 worldPos, vec3 cameraPos) {
    float distXZ = length(worldPos.xz - cameraPos.xz);
    float distY = abs(worldPos.y - cameraPos.y);
    return max(distXZ, distY);
}

float cylindrical_distance(vec3 worldPos) {
    float distXZ = length(worldPos.xz);
    float distY = abs(worldPos.y);
    return max(distXZ, distY);
}

float FLWFogFactor() {
    return (uFogRange.y - FragDistance) / (uFogRange.y - uFogRange.x);
}
// Adjust the [0,1] normalized lightmap value based on the texture matrix from LightTexture#enableLightmap
vec2 shiftLight(vec2 lm) {
    return lm * 0.99609375 + 0.03125;// * 255/256 + 1/32
}


uniform sampler3D uLightVolume;

uniform sampler2D uBlockAtlas;
uniform sampler2D uLightMap;

uniform vec3 uLightBoxSize;
uniform vec3 uLightBoxMin;
uniform mat4 uModel;

uniform float uTime;
uniform mat4 uViewProjection;
uniform vec3 uCameraPos;

void FLWFinalizeNormal(inout vec3 normal) {
    mat3 m;
    m[0] = uModel[0].xyz;
    m[1] = uModel[1].xyz;
    m[2] = uModel[2].xyz;
    normal = m * normal;
}

#if defined(VERTEX_SHADER)

out vec3 BoxCoord;

void FLWFinalizeWorldPos(inout vec4 worldPos) {
    worldPos = uModel * worldPos;

    BoxCoord = (worldPos.xyz - uLightBoxMin) / uLightBoxSize;

    FragDistance = max(length(worldPos.xz), abs(worldPos.y)); // cylindrical fog

    gl_Position = uViewProjection * worldPos;
}

#elif defined(FRAGMENT_SHADER)


#define ALPHA_DISCARD 0.1
// optimize discard usage
#if defined(ALPHA_DISCARD)
#if defined(GL_ARB_conservative_depth)
layout (depth_greater) out float gl_FragDepth;
#endif
#endif

in vec3 BoxCoord;

out vec4 FragColor;

vec4 FLWBlockTexture(vec2 texCoords) {
    return texture(uBlockAtlas, texCoords);
}

void FLWFinalizeColor(vec4 color) {
    float a = color.a;
    float fog = clamp(FLWFogFactor(), 0., 1.);

    color = mix(uFogColor, color, fog);
    color.a = a;

    #if defined(ALPHA_DISCARD)
    if (color.a < ALPHA_DISCARD) {
        discard;
    }
    #endif

    FragColor = color;
}

vec4 FLWLight(vec2 lightCoords) {
    lightCoords = max(lightCoords, texture(uLightVolume, BoxCoord).rg);

    return texture(uLightMap, shiftLight(lightCoords));
}

#endif


mat4 rotate(vec3 axis, float angle) {
    float s = sin(angle);
    float c = cos(angle);
    float oc = 1. - c;

    vec3 sa = axis * s;

    mat4 mr = mat4(1.);
    mr[0].xyz = oc * axis.xxz * axis.xyx + vec3(c, sa.z, -sa.y);
    mr[1].xyz = oc * axis.xyy * axis.yyz + vec3(-sa.z, c, sa.x);
    mr[2].xyz = oc * axis.zyz * axis.xzz + vec3(sa.y, -sa.x, c);

    return mr;
}

mat4 rotation(vec3 rot) {
    return rotate(vec3(0., 1., 0.), rot.y) * rotate(vec3(0., 0., 1.), rot.z) * rotate(vec3(1., 0., 0.), rot.x);
}

mat3 modelToNormal(mat4 mat) {
    // Discard the edges. This won't be accurate for scaled or skewed matrices,
    // but we don't have to work with those often.
    mat3 m;
    m[0] = mat[0].xyz;
    m[1] = mat[1].xyz;
    m[2] = mat[2].xyz;
    return m;
}

#define PIOVER2 1.5707963268

vec4 quat(vec3 axis, float angle) {
    float halfAngle = angle * PIOVER2 / 180.0;
    vec2 cs = sin(vec2(PIOVER2 - halfAngle, halfAngle)); // compute sin and cos in one instruction
    return vec4(axis.xyz * cs.y,  cs.x);
}

vec4 quatMult(vec4 q1, vec4 q2) {
    // disgustingly vectorized quaternion multiplication
    vec4 a = q1.w * q2.xyzw;
    vec4 b = q1.x * q2.wzxy * vec4(1., -1., 1., -1.);
    vec4 c = q1.y * q2.zwxy * vec4(1., 1., -1., -1.);
    vec4 d = q1.z * q2.yxwz * vec4(-1., 1., 1., -1.);

    return a + b + c + d;
}

vec3 rotateVertexByQuat(vec3 v, vec4 q) {
    vec3 i = q.xyz;
    return v + 2.0 * cross(i, cross(i, v) + q.w * v);
}

vec3 rotateAbout(vec3 v, vec3 axis, float angle) {
    return rotateVertexByQuat(v, quat(axis, angle));
}

float diffuse(vec3 normal) {
    vec3 n2 = normal * normal * vec3(.6, .25, .8);
    return min(n2.x + n2.y * (3. + normal.y) + n2.z, 1.);
}
struct Vertex {
    vec3 pos;
    vec2 texCoords;
    vec3 normal;
};

struct BlockFrag {
    vec2 texCoords;
    vec4 color;
    float diffuse;
    vec2 light;
};

#if defined(FRAGMENT_SHADER)
void fragment(BlockFrag r) {
    vec4 tex = FLWBlockTexture(r.texCoords);

    vec4 color = vec4(tex.rgb * FLWLight(r.light).rgb * r.diffuse, tex.a) * r.color;

    FLWFinalizeColor(color);
}
#endif
#define PI 3.1415926538





struct Flap {
    vec3 instancePos;
    vec2 light;
    vec3 segmentOffset;
    vec3 pivot;
    float horizontalAngle;
    float intensity;
    float flapScale;
    float flapness;
};




#if defined(VERTEX_SHADER)

float toRad(float degrees) {
    return fract(degrees / 360.) * PI * 2.;
}

float getFlapAngle(float flapness, float intensity, float scale) {
    float absFlap = abs(flapness);

    float angle = sin((1. - absFlap) * PI * intensity) * 30. * flapness * scale;

    float halfAngle = angle * 0.5;

    float which = step(0., flapness); // 0 if negative, 1 if positive
    float degrees = which * halfAngle + (1. - which) * angle; // branchless conditional multiply

    return degrees;
}

BlockFrag vertex(Vertex v, Flap flap) {
    float flapAngle = getFlapAngle(flap.flapness, flap.intensity, flap.flapScale);

    vec4 orientation = quat(vec3(0., 1., 0.), -flap.horizontalAngle);
    vec4 flapRotation = quat(vec3(1., 0., 0.), flapAngle);

    vec3 rotated = rotateVertexByQuat(v.pos - flap.pivot, flapRotation) + flap.pivot + flap.segmentOffset;
    rotated = rotateVertexByQuat(rotated - .5, orientation) + flap.instancePos + .5;

    vec4 worldPos = vec4(rotated, 1.);
    vec3 norm = rotateVertexByQuat(rotateVertexByQuat(v.normal, flapRotation), orientation);

    FLWFinalizeWorldPos(worldPos);
    FLWFinalizeNormal(norm);

    BlockFrag b;
    b.diffuse = diffuse(norm);
    b.texCoords = v.texCoords;
    b.light = flap.light;
    #if defined(DEBUG_NORMAL)
    b.color = vec4(norm, 1.);
    #else
    b.color = vec4(1.);
    #endif
    return b;
}
#endif

in vec2 v2f_texCoords;
in vec4 v2f_color;
in float v2f_diffuse;
in vec2 v2f_light;
void main() {
BlockFrag o;
o.texCoords = v2f_texCoords;
o.color = v2f_color;
o.diffuse = v2f_diffuse;
o.light = v2f_light;
fragment(o);
}
[16:19:40] [Render thread/ERROR]: Shader compilation log for create:belt: WARNING: 0:2: extension 'GL_ARB_conservative_depth' is not supported

[16:19:40] [Render thread/ERROR]: #version 150
#extension GL_ARB_conservative_depth : enable
#define VERTEX_SHADER
#if defined(VERTEX_SHADER)
out float FragDistance;
#elif defined(FRAGMENT_SHADER)
in float FragDistance;
#endif
uniform vec4 uFogColor;
uniform vec2 uFogRange;

float cylindrical_distance(vec3 worldPos, vec3 cameraPos) {
    float distXZ = length(worldPos.xz - cameraPos.xz);
    float distY = abs(worldPos.y - cameraPos.y);
    return max(distXZ, distY);
}

float cylindrical_distance(vec3 worldPos) {
    float distXZ = length(worldPos.xz);
    float distY = abs(worldPos.y);
    return max(distXZ, distY);
}

float FLWFogFactor() {
    return (uFogRange.y - FragDistance) / (uFogRange.y - uFogRange.x);
}
// Adjust the [0,1] normalized lightmap value based on the texture matrix from LightTexture#enableLightmap
vec2 shiftLight(vec2 lm) {
    return lm * 0.99609375 + 0.03125;// * 255/256 + 1/32
}


uniform sampler3D uLightVolume;

uniform sampler2D uBlockAtlas;
uniform sampler2D uLightMap;

uniform vec3 uLightBoxSize;
uniform vec3 uLightBoxMin;
uniform mat4 uModel;

uniform float uTime;
uniform mat4 uViewProjection;
uniform vec3 uCameraPos;

void FLWFinalizeNormal(inout vec3 normal) {
    mat3 m;
    m[0] = uModel[0].xyz;
    m[1] = uModel[1].xyz;
    m[2] = uModel[2].xyz;
    normal = m * normal;
}

#if defined(VERTEX_SHADER)

out vec3 BoxCoord;

void FLWFinalizeWorldPos(inout vec4 worldPos) {
    worldPos = uModel * worldPos;

    BoxCoord = (worldPos.xyz - uLightBoxMin) / uLightBoxSize;

    FragDistance = max(length(worldPos.xz), abs(worldPos.y)); // cylindrical fog

    gl_Position = uViewProjection * worldPos;
}

#elif defined(FRAGMENT_SHADER)


#define ALPHA_DISCARD 0.1
// optimize discard usage
#if defined(ALPHA_DISCARD)
#if defined(GL_ARB_conservative_depth)
layout (depth_greater) out float gl_FragDepth;
#endif
#endif

in vec3 BoxCoord;

out vec4 FragColor;

vec4 FLWBlockTexture(vec2 texCoords) {
    return texture(uBlockAtlas, texCoords);
}

void FLWFinalizeColor(vec4 color) {
    float a = color.a;
    float fog = clamp(FLWFogFactor(), 0., 1.);

    color = mix(uFogColor, color, fog);
    color.a = a;

    #if defined(ALPHA_DISCARD)
    if (color.a < ALPHA_DISCARD) {
        discard;
    }
    #endif

    FragColor = color;
}

vec4 FLWLight(vec2 lightCoords) {
    lightCoords = max(lightCoords, texture(uLightVolume, BoxCoord).rg);

    return texture(uLightMap, shiftLight(lightCoords));
}

#endif


#define PIOVER2 1.5707963268

vec4 quat(vec3 axis, float angle) {
    float halfAngle = angle * PIOVER2 / 180.0;
    vec2 cs = sin(vec2(PIOVER2 - halfAngle, halfAngle)); // compute sin and cos in one instruction
    return vec4(axis.xyz * cs.y,  cs.x);
}

vec4 quatMult(vec4 q1, vec4 q2) {
    // disgustingly vectorized quaternion multiplication
    vec4 a = q1.w * q2.xyzw;
    vec4 b = q1.x * q2.wzxy * vec4(1., -1., 1., -1.);
    vec4 c = q1.y * q2.zwxy * vec4(1., 1., -1., -1.);
    vec4 d = q1.z * q2.yxwz * vec4(-1., 1., 1., -1.);

    return a + b + c + d;
}

vec3 rotateVertexByQuat(vec3 v, vec4 q) {
    vec3 i = q.xyz;
    return v + 2.0 * cross(i, cross(i, v) + q.w * v);
}

vec3 rotateAbout(vec3 v, vec3 axis, float angle) {
    return rotateVertexByQuat(v, quat(axis, angle));
}

mat4 rotate(vec3 axis, float angle) {
    float s = sin(angle);
    float c = cos(angle);
    float oc = 1. - c;

    vec3 sa = axis * s;

    mat4 mr = mat4(1.);
    mr[0].xyz = oc * axis.xxz * axis.xyx + vec3(c, sa.z, -sa.y);
    mr[1].xyz = oc * axis.xyy * axis.yyz + vec3(-sa.z, c, sa.x);
    mr[2].xyz = oc * axis.zyz * axis.xzz + vec3(sa.y, -sa.x, c);

    return mr;
}

mat4 rotation(vec3 rot) {
    return rotate(vec3(0., 1., 0.), rot.y) * rotate(vec3(0., 0., 1.), rot.z) * rotate(vec3(1., 0., 0.), rot.x);
}

mat3 modelToNormal(mat4 mat) {
    // Discard the edges. This won't be accurate for scaled or skewed matrices,
    // but we don't have to work with those often.
    mat3 m;
    m[0] = mat[0].xyz;
    m[1] = mat[1].xyz;
    m[2] = mat[2].xyz;
    return m;
}

float diffuse(vec3 normal) {
    vec3 n2 = normal * normal * vec3(.6, .25, .8);
    return min(n2.x + n2.y * (3. + normal.y) + n2.z, 1.);
}
struct Vertex {
    vec3 pos;
    vec2 texCoords;
    vec3 normal;
};

struct BlockFrag {
    vec2 texCoords;
    vec4 color;
    float diffuse;
    vec2 light;
};

#if defined(FRAGMENT_SHADER)
void fragment(BlockFrag r) {
    vec4 tex = FLWBlockTexture(r.texCoords);

    vec4 color = vec4(tex.rgb * FLWLight(r.light).rgb * r.diffuse, tex.a) * r.color;

    FLWFinalizeColor(color);
}
#endif
#define PI 3.1415926538





struct Belt {
    vec2 light;
    vec4 color;
    vec3 pos;
    float speed;
    float offset;
    vec4 rotation;
    vec2 sourceTexture;
    vec4 scrollTexture;
    float scrollMult;
};




#if defined(VERTEX_SHADER)
BlockFrag vertex(Vertex v, Belt instance) {
    vec3 rotated = rotateVertexByQuat(v.pos - .5, instance.rotation) + instance.pos + .5;

    vec4 worldPos = vec4(rotated, 1.);

    vec3 norm = rotateVertexByQuat(v.normal, instance.rotation);

    FLWFinalizeWorldPos(worldPos);
    FLWFinalizeNormal(norm);

    float scrollSize = instance.scrollTexture.w - instance.scrollTexture.y;
    float scroll = fract(instance.speed * uTime / (31.5 * 16.) + instance.offset) * scrollSize * instance.scrollMult;

    BlockFrag b;
    b.diffuse = diffuse(norm);
    b.texCoords = v.texCoords - instance.sourceTexture + instance.scrollTexture.xy + vec2(0, scroll);
    b.light = instance.light;

    #if defined(DEBUG_RAINBOW)
    b.color = instance.color;
    #elif defined(DEBUG_NORMAL)
    b.color = vec4(norm, 1.);
    #else
    b.color = vec4(1.);
    #endif

    return b;
}
#endif

in vec3 a_v_pos;
in vec2 a_v_texCoords;
in vec3 a_v_normal;
in vec2 a_i_light;
in vec4 a_i_color;
in vec3 a_i_pos;
in float a_i_speed;
in float a_i_offset;
in vec4 a_i_rotation;
in vec2 a_i_sourceTexture;
in vec4 a_i_scrollTexture;
in float a_i_scrollMult;
out vec2 v2f_texCoords;
out vec4 v2f_color;
out float v2f_diffuse;
out vec2 v2f_light;
void main() {
Vertex v;
v.pos = a_v_pos;
v.texCoords = a_v_texCoords;
v.normal = a_v_normal;
Belt i;
i.light = a_i_light;
i.color = a_i_color;
i.pos = a_i_pos;
i.speed = a_i_speed;
i.offset = a_i_offset;
i.rotation = a_i_rotation;
i.sourceTexture = a_i_sourceTexture;
i.scrollTexture = a_i_scrollTexture;
i.scrollMult = a_i_scrollMult;
BlockFrag o = vertex(v, i);
v2f_texCoords = o.texCoords;
v2f_color = o.color;
v2f_diffuse = o.diffuse;
v2f_light = o.light;
}
[16:19:40] [Render thread/ERROR]: Shader compilation log for create:belt: WARNING: 0:2: extension 'GL_ARB_conservative_depth' is not supported

[16:19:40] [Render thread/ERROR]: #version 150
#extension GL_ARB_conservative_depth : enable
#define FRAGMENT_SHADER
#if defined(VERTEX_SHADER)
out float FragDistance;
#elif defined(FRAGMENT_SHADER)
in float FragDistance;
#endif
uniform vec4 uFogColor;
uniform vec2 uFogRange;

float cylindrical_distance(vec3 worldPos, vec3 cameraPos) {
    float distXZ = length(worldPos.xz - cameraPos.xz);
    float distY = abs(worldPos.y - cameraPos.y);
    return max(distXZ, distY);
}

float cylindrical_distance(vec3 worldPos) {
    float distXZ = length(worldPos.xz);
    float distY = abs(worldPos.y);
    return max(distXZ, distY);
}

float FLWFogFactor() {
    return (uFogRange.y - FragDistance) / (uFogRange.y - uFogRange.x);
}
// Adjust the [0,1] normalized lightmap value based on the texture matrix from LightTexture#enableLightmap
vec2 shiftLight(vec2 lm) {
    return lm * 0.99609375 + 0.03125;// * 255/256 + 1/32
}


uniform sampler3D uLightVolume;

uniform sampler2D uBlockAtlas;
uniform sampler2D uLightMap;

uniform vec3 uLightBoxSize;
uniform vec3 uLightBoxMin;
uniform mat4 uModel;

uniform float uTime;
uniform mat4 uViewProjection;
uniform vec3 uCameraPos;

void FLWFinalizeNormal(inout vec3 normal) {
    mat3 m;
    m[0] = uModel[0].xyz;
    m[1] = uModel[1].xyz;
    m[2] = uModel[2].xyz;
    normal = m * normal;
}

#if defined(VERTEX_SHADER)

out vec3 BoxCoord;

void FLWFinalizeWorldPos(inout vec4 worldPos) {
    worldPos = uModel * worldPos;

    BoxCoord = (worldPos.xyz - uLightBoxMin) / uLightBoxSize;

    FragDistance = max(length(worldPos.xz), abs(worldPos.y)); // cylindrical fog

    gl_Position = uViewProjection * worldPos;
}

#elif defined(FRAGMENT_SHADER)


#define ALPHA_DISCARD 0.1
// optimize discard usage
#if defined(ALPHA_DISCARD)
#if defined(GL_ARB_conservative_depth)
layout (depth_greater) out float gl_FragDepth;
#endif
#endif

in vec3 BoxCoord;

out vec4 FragColor;

vec4 FLWBlockTexture(vec2 texCoords) {
    return texture(uBlockAtlas, texCoords);
}

void FLWFinalizeColor(vec4 color) {
    float a = color.a;
    float fog = clamp(FLWFogFactor(), 0., 1.);

    color = mix(uFogColor, color, fog);
    color.a = a;

    #if defined(ALPHA_DISCARD)
    if (color.a < ALPHA_DISCARD) {
        discard;
    }
    #endif

    FragColor = color;
}

vec4 FLWLight(vec2 lightCoords) {
    lightCoords = max(lightCoords, texture(uLightVolume, BoxCoord).rg);

    return texture(uLightMap, shiftLight(lightCoords));
}

#endif


#define PIOVER2 1.5707963268

vec4 quat(vec3 axis, float angle) {
    float halfAngle = angle * PIOVER2 / 180.0;
    vec2 cs = sin(vec2(PIOVER2 - halfAngle, halfAngle)); // compute sin and cos in one instruction
    return vec4(axis.xyz * cs.y,  cs.x);
}

vec4 quatMult(vec4 q1, vec4 q2) {
    // disgustingly vectorized quaternion multiplication
    vec4 a = q1.w * q2.xyzw;
    vec4 b = q1.x * q2.wzxy * vec4(1., -1., 1., -1.);
    vec4 c = q1.y * q2.zwxy * vec4(1., 1., -1., -1.);
    vec4 d = q1.z * q2.yxwz * vec4(-1., 1., 1., -1.);

    return a + b + c + d;
}

vec3 rotateVertexByQuat(vec3 v, vec4 q) {
    vec3 i = q.xyz;
    return v + 2.0 * cross(i, cross(i, v) + q.w * v);
}

vec3 rotateAbout(vec3 v, vec3 axis, float angle) {
    return rotateVertexByQuat(v, quat(axis, angle));
}

mat4 rotate(vec3 axis, float angle) {
    float s = sin(angle);
    float c = cos(angle);
    float oc = 1. - c;

    vec3 sa = axis * s;

    mat4 mr = mat4(1.);
    mr[0].xyz = oc * axis.xxz * axis.xyx + vec3(c, sa.z, -sa.y);
    mr[1].xyz = oc * axis.xyy * axis.yyz + vec3(-sa.z, c, sa.x);
    mr[2].xyz = oc * axis.zyz * axis.xzz + vec3(sa.y, -sa.x, c);

    return mr;
}

mat4 rotation(vec3 rot) {
    return rotate(vec3(0., 1., 0.), rot.y) * rotate(vec3(0., 0., 1.), rot.z) * rotate(vec3(1., 0., 0.), rot.x);
}

mat3 modelToNormal(mat4 mat) {
    // Discard the edges. This won't be accurate for scaled or skewed matrices,
    // but we don't have to work with those often.
    mat3 m;
    m[0] = mat[0].xyz;
    m[1] = mat[1].xyz;
    m[2] = mat[2].xyz;
    return m;
}

float diffuse(vec3 normal) {
    vec3 n2 = normal * normal * vec3(.6, .25, .8);
    return min(n2.x + n2.y * (3. + normal.y) + n2.z, 1.);
}
struct Vertex {
    vec3 pos;
    vec2 texCoords;
    vec3 normal;
};

struct BlockFrag {
    vec2 texCoords;
    vec4 color;
    float diffuse;
    vec2 light;
};

#if defined(FRAGMENT_SHADER)
void fragment(BlockFrag r) {
    vec4 tex = FLWBlockTexture(r.texCoords);

    vec4 color = vec4(tex.rgb * FLWLight(r.light).rgb * r.diffuse, tex.a) * r.color;

    FLWFinalizeColor(color);
}
#endif
#define PI 3.1415926538





struct Belt {
    vec2 light;
    vec4 color;
    vec3 pos;
    float speed;
    float offset;
    vec4 rotation;
    vec2 sourceTexture;
    vec4 scrollTexture;
    float scrollMult;
};




#if defined(VERTEX_SHADER)
BlockFrag vertex(Vertex v, Belt instance) {
    vec3 rotated = rotateVertexByQuat(v.pos - .5, instance.rotation) + instance.pos + .5;

    vec4 worldPos = vec4(rotated, 1.);

    vec3 norm = rotateVertexByQuat(v.normal, instance.rotation);

    FLWFinalizeWorldPos(worldPos);
    FLWFinalizeNormal(norm);

    float scrollSize = instance.scrollTexture.w - instance.scrollTexture.y;
    float scroll = fract(instance.speed * uTime / (31.5 * 16.) + instance.offset) * scrollSize * instance.scrollMult;

    BlockFrag b;
    b.diffuse = diffuse(norm);
    b.texCoords = v.texCoords - instance.sourceTexture + instance.scrollTexture.xy + vec2(0, scroll);
    b.light = instance.light;

    #if defined(DEBUG_RAINBOW)
    b.color = instance.color;
    #elif defined(DEBUG_NORMAL)
    b.color = vec4(norm, 1.);
    #else
    b.color = vec4(1.);
    #endif

    return b;
}
#endif

in vec2 v2f_texCoords;
in vec4 v2f_color;
in float v2f_diffuse;
in vec2 v2f_light;
void main() {
BlockFrag o;
o.texCoords = v2f_texCoords;
o.color = v2f_color;
o.diffuse = v2f_diffuse;
o.light = v2f_light;
fragment(o);
}
[16:19:40] [Render thread/ERROR]: Shader compilation log for create:belt: WARNING: 0:2: extension 'GL_ARB_conservative_depth' is not supported

[16:19:40] [Render thread/ERROR]: #version 150
#extension GL_ARB_conservative_depth : enable
#define VERTEX_SHADER
#define DEBUG_RAINBOW
#if defined(VERTEX_SHADER)
out float FragDistance;
#elif defined(FRAGMENT_SHADER)
in float FragDistance;
#endif
uniform vec4 uFogColor;
uniform vec2 uFogRange;

float cylindrical_distance(vec3 worldPos, vec3 cameraPos) {
    float distXZ = length(worldPos.xz - cameraPos.xz);
    float distY = abs(worldPos.y - cameraPos.y);
    return max(distXZ, distY);
}

float cylindrical_distance(vec3 worldPos) {
    float distXZ = length(worldPos.xz);
    float distY = abs(worldPos.y);
    return max(distXZ, distY);
}

float FLWFogFactor() {
    return (uFogRange.y - FragDistance) / (uFogRange.y - uFogRange.x);
}
// Adjust the [0,1] normalized lightmap value based on the texture matrix from LightTexture#enableLightmap
vec2 shiftLight(vec2 lm) {
    return lm * 0.99609375 + 0.03125;// * 255/256 + 1/32
}


uniform sampler3D uLightVolume;

uniform sampler2D uBlockAtlas;
uniform sampler2D uLightMap;

uniform vec3 uLightBoxSize;
uniform vec3 uLightBoxMin;
uniform mat4 uModel;

uniform float uTime;
uniform mat4 uViewProjection;
uniform vec3 uCameraPos;

void FLWFinalizeNormal(inout vec3 normal) {
    mat3 m;
    m[0] = uModel[0].xyz;
    m[1] = uModel[1].xyz;
    m[2] = uModel[2].xyz;
    normal = m * normal;
}

#if defined(VERTEX_SHADER)

out vec3 BoxCoord;

void FLWFinalizeWorldPos(inout vec4 worldPos) {
    worldPos = uModel * worldPos;

    BoxCoord = (worldPos.xyz - uLightBoxMin) / uLightBoxSize;

    FragDistance = max(length(worldPos.xz), abs(worldPos.y)); // cylindrical fog

    gl_Position = uViewProjection * worldPos;
}

#elif defined(FRAGMENT_SHADER)


#define ALPHA_DISCARD 0.1
// optimize discard usage
#if defined(ALPHA_DISCARD)
#if defined(GL_ARB_conservative_depth)
layout (depth_greater) out float gl_FragDepth;
#endif
#endif

in vec3 BoxCoord;

out vec4 FragColor;

vec4 FLWBlockTexture(vec2 texCoords) {
    return texture(uBlockAtlas, texCoords);
}

void FLWFinalizeColor(vec4 color) {
    float a = color.a;
    float fog = clamp(FLWFogFactor(), 0., 1.);

    color = mix(uFogColor, color, fog);
    color.a = a;

    #if defined(ALPHA_DISCARD)
    if (color.a < ALPHA_DISCARD) {
        discard;
    }
    #endif

    FragColor = color;
}

vec4 FLWLight(vec2 lightCoords) {
    lightCoords = max(lightCoords, texture(uLightVolume, BoxCoord).rg);

    return texture(uLightMap, shiftLight(lightCoords));
}

#endif


#define PIOVER2 1.5707963268

vec4 quat(vec3 axis, float angle) {
    float halfAngle = angle * PIOVER2 / 180.0;
    vec2 cs = sin(vec2(PIOVER2 - halfAngle, halfAngle)); // compute sin and cos in one instruction
    return vec4(axis.xyz * cs.y,  cs.x);
}

vec4 quatMult(vec4 q1, vec4 q2) {
    // disgustingly vectorized quaternion multiplication
    vec4 a = q1.w * q2.xyzw;
    vec4 b = q1.x * q2.wzxy * vec4(1., -1., 1., -1.);
    vec4 c = q1.y * q2.zwxy * vec4(1., 1., -1., -1.);
    vec4 d = q1.z * q2.yxwz * vec4(-1., 1., 1., -1.);

    return a + b + c + d;
}

vec3 rotateVertexByQuat(vec3 v, vec4 q) {
    vec3 i = q.xyz;
    return v + 2.0 * cross(i, cross(i, v) + q.w * v);
}

vec3 rotateAbout(vec3 v, vec3 axis, float angle) {
    return rotateVertexByQuat(v, quat(axis, angle));
}

mat4 rotate(vec3 axis, float angle) {
    float s = sin(angle);
    float c = cos(angle);
    float oc = 1. - c;

    vec3 sa = axis * s;

    mat4 mr = mat4(1.);
    mr[0].xyz = oc * axis.xxz * axis.xyx + vec3(c, sa.z, -sa.y);
    mr[1].xyz = oc * axis.xyy * axis.yyz + vec3(-sa.z, c, sa.x);
    mr[2].xyz = oc * axis.zyz * axis.xzz + vec3(sa.y, -sa.x, c);

    return mr;
}

mat4 rotation(vec3 rot) {
    return rotate(vec3(0., 1., 0.), rot.y) * rotate(vec3(0., 0., 1.), rot.z) * rotate(vec3(1., 0., 0.), rot.x);
}

mat3 modelToNormal(mat4 mat) {
    // Discard the edges. This won't be accurate for scaled or skewed matrices,
    // but we don't have to work with those often.
    mat3 m;
    m[0] = mat[0].xyz;
    m[1] = mat[1].xyz;
    m[2] = mat[2].xyz;
    return m;
}

float diffuse(vec3 normal) {
    vec3 n2 = normal * normal * vec3(.6, .25, .8);
    return min(n2.x + n2.y * (3. + normal.y) + n2.z, 1.);
}
struct Vertex {
    vec3 pos;
    vec2 texCoords;
    vec3 normal;
};

struct BlockFrag {
    vec2 texCoords;
    vec4 color;
    float diffuse;
    vec2 light;
};

#if defined(FRAGMENT_SHADER)
void fragment(BlockFrag r) {
    vec4 tex = FLWBlockTexture(r.texCoords);

    vec4 color = vec4(tex.rgb * FLWLight(r.light).rgb * r.diffuse, tex.a) * r.color;

    FLWFinalizeColor(color);
}
#endif
#define PI 3.1415926538





struct Belt {
    vec2 light;
    vec4 color;
    vec3 pos;
    float speed;
    float offset;
    vec4 rotation;
    vec2 sourceTexture;
    vec4 scrollTexture;
    float scrollMult;
};




#if defined(VERTEX_SHADER)
BlockFrag vertex(Vertex v, Belt instance) {
    vec3 rotated = rotateVertexByQuat(v.pos - .5, instance.rotation) + instance.pos + .5;

    vec4 worldPos = vec4(rotated, 1.);

    vec3 norm = rotateVertexByQuat(v.normal, instance.rotation);

    FLWFinalizeWorldPos(worldPos);
    FLWFinalizeNormal(norm);

    float scrollSize = instance.scrollTexture.w - instance.scrollTexture.y;
    float scroll = fract(instance.speed * uTime / (31.5 * 16.) + instance.offset) * scrollSize * instance.scrollMult;

    BlockFrag b;
    b.diffuse = diffuse(norm);
    b.texCoords = v.texCoords - instance.sourceTexture + instance.scrollTexture.xy + vec2(0, scroll);
    b.light = instance.light;

    #if defined(DEBUG_RAINBOW)
    b.color = instance.color;
    #elif defined(DEBUG_NORMAL)
    b.color = vec4(norm, 1.);
    #else
    b.color = vec4(1.);
    #endif

    return b;
}
#endif

in vec3 a_v_pos;
in vec2 a_v_texCoords;
in vec3 a_v_normal;
in vec2 a_i_light;
in vec4 a_i_color;
in vec3 a_i_pos;
in float a_i_speed;
in float a_i_offset;
in vec4 a_i_rotation;
in vec2 a_i_sourceTexture;
in vec4 a_i_scrollTexture;
in float a_i_scrollMult;
out vec2 v2f_texCoords;
out vec4 v2f_color;
out float v2f_diffuse;
out vec2 v2f_light;
void main() {
Vertex v;
v.pos = a_v_pos;
v.texCoords = a_v_texCoords;
v.normal = a_v_normal;
Belt i;
i.light = a_i_light;
i.color = a_i_color;
i.pos = a_i_pos;
i.speed = a_i_speed;
i.offset = a_i_offset;
i.rotation = a_i_rotation;
i.sourceTexture = a_i_sourceTexture;
i.scrollTexture = a_i_scrollTexture;
i.scrollMult = a_i_scrollMult;
BlockFrag o = vertex(v, i);
v2f_texCoords = o.texCoords;
v2f_color = o.color;
v2f_diffuse = o.diffuse;
v2f_light = o.light;
}
[16:19:40] [Render thread/ERROR]: Shader compilation log for create:belt: WARNING: 0:2: extension 'GL_ARB_conservative_depth' is not supported

[16:19:40] [Render thread/ERROR]: #version 150
#extension GL_ARB_conservative_depth : enable
#define FRAGMENT_SHADER
#define DEBUG_RAINBOW
#if defined(VERTEX_SHADER)
out float FragDistance;
#elif defined(FRAGMENT_SHADER)
in float FragDistance;
#endif
uniform vec4 uFogColor;
uniform vec2 uFogRange;

float cylindrical_distance(vec3 worldPos, vec3 cameraPos) {
    float distXZ = length(worldPos.xz - cameraPos.xz);
    float distY = abs(worldPos.y - cameraPos.y);
    return max(distXZ, distY);
}

float cylindrical_distance(vec3 worldPos) {
    float distXZ = length(worldPos.xz);
    float distY = abs(worldPos.y);
    return max(distXZ, distY);
}

float FLWFogFactor() {
    return (uFogRange.y - FragDistance) / (uFogRange.y - uFogRange.x);
}
// Adjust the [0,1] normalized lightmap value based on the texture matrix from LightTexture#enableLightmap
vec2 shiftLight(vec2 lm) {
    return lm * 0.99609375 + 0.03125;// * 255/256 + 1/32
}


uniform sampler3D uLightVolume;

uniform sampler2D uBlockAtlas;
uniform sampler2D uLightMap;

uniform vec3 uLightBoxSize;
uniform vec3 uLightBoxMin;
uniform mat4 uModel;

uniform float uTime;
uniform mat4 uViewProjection;
uniform vec3 uCameraPos;

void FLWFinalizeNormal(inout vec3 normal) {
    mat3 m;
    m[0] = uModel[0].xyz;
    m[1] = uModel[1].xyz;
    m[2] = uModel[2].xyz;
    normal = m * normal;
}

#if defined(VERTEX_SHADER)

out vec3 BoxCoord;

void FLWFinalizeWorldPos(inout vec4 worldPos) {
    worldPos = uModel * worldPos;

    BoxCoord = (worldPos.xyz - uLightBoxMin) / uLightBoxSize;

    FragDistance = max(length(worldPos.xz), abs(worldPos.y)); // cylindrical fog

    gl_Position = uViewProjection * worldPos;
}

#elif defined(FRAGMENT_SHADER)


#define ALPHA_DISCARD 0.1
// optimize discard usage
#if defined(ALPHA_DISCARD)
#if defined(GL_ARB_conservative_depth)
layout (depth_greater) out float gl_FragDepth;
#endif
#endif

in vec3 BoxCoord;

out vec4 FragColor;

vec4 FLWBlockTexture(vec2 texCoords) {
    return texture(uBlockAtlas, texCoords);
}

void FLWFinalizeColor(vec4 color) {
    float a = color.a;
    float fog = clamp(FLWFogFactor(), 0., 1.);

    color = mix(uFogColor, color, fog);
    color.a = a;

    #if defined(ALPHA_DISCARD)
    if (color.a < ALPHA_DISCARD) {
        discard;
    }
    #endif

    FragColor = color;
}

vec4 FLWLight(vec2 lightCoords) {
    lightCoords = max(lightCoords, texture(uLightVolume, BoxCoord).rg);

    return texture(uLightMap, shiftLight(lightCoords));
}

#endif


#define PIOVER2 1.5707963268

vec4 quat(vec3 axis, float angle) {
    float halfAngle = angle * PIOVER2 / 180.0;
    vec2 cs = sin(vec2(PIOVER2 - halfAngle, halfAngle)); // compute sin and cos in one instruction
    return vec4(axis.xyz * cs.y,  cs.x);
}

vec4 quatMult(vec4 q1, vec4 q2) {
    // disgustingly vectorized quaternion multiplication
    vec4 a = q1.w * q2.xyzw;
    vec4 b = q1.x * q2.wzxy * vec4(1., -1., 1., -1.);
    vec4 c = q1.y * q2.zwxy * vec4(1., 1., -1., -1.);
    vec4 d = q1.z * q2.yxwz * vec4(-1., 1., 1., -1.);

    return a + b + c + d;
}

vec3 rotateVertexByQuat(vec3 v, vec4 q) {
    vec3 i = q.xyz;
    return v + 2.0 * cross(i, cross(i, v) + q.w * v);
}

vec3 rotateAbout(vec3 v, vec3 axis, float angle) {
    return rotateVertexByQuat(v, quat(axis, angle));
}

mat4 rotate(vec3 axis, float angle) {
    float s = sin(angle);
    float c = cos(angle);
    float oc = 1. - c;

    vec3 sa = axis * s;

    mat4 mr = mat4(1.);
    mr[0].xyz = oc * axis.xxz * axis.xyx + vec3(c, sa.z, -sa.y);
    mr[1].xyz = oc * axis.xyy * axis.yyz + vec3(-sa.z, c, sa.x);
    mr[2].xyz = oc * axis.zyz * axis.xzz + vec3(sa.y, -sa.x, c);

    return mr;
}

mat4 rotation(vec3 rot) {
    return rotate(vec3(0., 1., 0.), rot.y) * rotate(vec3(0., 0., 1.), rot.z) * rotate(vec3(1., 0., 0.), rot.x);
}

mat3 modelToNormal(mat4 mat) {
    // Discard the edges. This won't be accurate for scaled or skewed matrices,
    // but we don't have to work with those often.
    mat3 m;
    m[0] = mat[0].xyz;
    m[1] = mat[1].xyz;
    m[2] = mat[2].xyz;
    return m;
}

float diffuse(vec3 normal) {
    vec3 n2 = normal * normal * vec3(.6, .25, .8);
    return min(n2.x + n2.y * (3. + normal.y) + n2.z, 1.);
}
struct Vertex {
    vec3 pos;
    vec2 texCoords;
    vec3 normal;
};

struct BlockFrag {
    vec2 texCoords;
    vec4 color;
    float diffuse;
    vec2 light;
};

#if defined(FRAGMENT_SHADER)
void fragment(BlockFrag r) {
    vec4 tex = FLWBlockTexture(r.texCoords);

    vec4 color = vec4(tex.rgb * FLWLight(r.light).rgb * r.diffuse, tex.a) * r.color;

    FLWFinalizeColor(color);
}
#endif
#define PI 3.1415926538





struct Belt {
    vec2 light;
    vec4 color;
    vec3 pos;
    float speed;
    float offset;
    vec4 rotation;
    vec2 sourceTexture;
    vec4 scrollTexture;
    float scrollMult;
};




#if defined(VERTEX_SHADER)
BlockFrag vertex(Vertex v, Belt instance) {
    vec3 rotated = rotateVertexByQuat(v.pos - .5, instance.rotation) + instance.pos + .5;

    vec4 worldPos = vec4(rotated, 1.);

    vec3 norm = rotateVertexByQuat(v.normal, instance.rotation);

    FLWFinalizeWorldPos(worldPos);
    FLWFinalizeNormal(norm);

    float scrollSize = instance.scrollTexture.w - instance.scrollTexture.y;
    float scroll = fract(instance.speed * uTime / (31.5 * 16.) + instance.offset) * scrollSize * instance.scrollMult;

    BlockFrag b;
    b.diffuse = diffuse(norm);
    b.texCoords = v.texCoords - instance.sourceTexture + instance.scrollTexture.xy + vec2(0, scroll);
    b.light = instance.light;

    #if defined(DEBUG_RAINBOW)
    b.color = instance.color;
    #elif defined(DEBUG_NORMAL)
    b.color = vec4(norm, 1.);
    #else
    b.color = vec4(1.);
    #endif

    return b;
}
#endif

in vec2 v2f_texCoords;
in vec4 v2f_color;
in float v2f_diffuse;
in vec2 v2f_light;
void main() {
BlockFrag o;
o.texCoords = v2f_texCoords;
o.color = v2f_color;
o.diffuse = v2f_diffuse;
o.light = v2f_light;
fragment(o);
}
[16:19:41] [Render thread/ERROR]: Shader compilation log for create:belt: WARNING: 0:2: extension 'GL_ARB_conservative_depth' is not supported

[16:19:41] [Render thread/ERROR]: #version 150
#extension GL_ARB_conservative_depth : enable
#define VERTEX_SHADER
#define DEBUG_NORMAL
#if defined(VERTEX_SHADER)
out float FragDistance;
#elif defined(FRAGMENT_SHADER)
in float FragDistance;
#endif
uniform vec4 uFogColor;
uniform vec2 uFogRange;

float cylindrical_distance(vec3 worldPos, vec3 cameraPos) {
    float distXZ = length(worldPos.xz - cameraPos.xz);
    float distY = abs(worldPos.y - cameraPos.y);
    return max(distXZ, distY);
}

float cylindrical_distance(vec3 worldPos) {
    float distXZ = length(worldPos.xz);
    float distY = abs(worldPos.y);
    return max(distXZ, distY);
}

float FLWFogFactor() {
    return (uFogRange.y - FragDistance) / (uFogRange.y - uFogRange.x);
}
// Adjust the [0,1] normalized lightmap value based on the texture matrix from LightTexture#enableLightmap
vec2 shiftLight(vec2 lm) {
    return lm * 0.99609375 + 0.03125;// * 255/256 + 1/32
}


uniform sampler3D uLightVolume;

uniform sampler2D uBlockAtlas;
uniform sampler2D uLightMap;

uniform vec3 uLightBoxSize;
uniform vec3 uLightBoxMin;
uniform mat4 uModel;

uniform float uTime;
uniform mat4 uViewProjection;
uniform vec3 uCameraPos;

void FLWFinalizeNormal(inout vec3 normal) {
    mat3 m;
    m[0] = uModel[0].xyz;
    m[1] = uModel[1].xyz;
    m[2] = uModel[2].xyz;
    normal = m * normal;
}

#if defined(VERTEX_SHADER)

out vec3 BoxCoord;

void FLWFinalizeWorldPos(inout vec4 worldPos) {
    worldPos = uModel * worldPos;

    BoxCoord = (worldPos.xyz - uLightBoxMin) / uLightBoxSize;

    FragDistance = max(length(worldPos.xz), abs(worldPos.y)); // cylindrical fog

    gl_Position = uViewProjection * worldPos;
}

#elif defined(FRAGMENT_SHADER)


#define ALPHA_DISCARD 0.1
// optimize discard usage
#if defined(ALPHA_DISCARD)
#if defined(GL_ARB_conservative_depth)
layout (depth_greater) out float gl_FragDepth;
#endif
#endif

in vec3 BoxCoord;

out vec4 FragColor;

vec4 FLWBlockTexture(vec2 texCoords) {
    return texture(uBlockAtlas, texCoords);
}

void FLWFinalizeColor(vec4 color) {
    float a = color.a;
    float fog = clamp(FLWFogFactor(), 0., 1.);

    color = mix(uFogColor, color, fog);
    color.a = a;

    #if defined(ALPHA_DISCARD)
    if (color.a < ALPHA_DISCARD) {
        discard;
    }
    #endif

    FragColor = color;
}

vec4 FLWLight(vec2 lightCoords) {
    lightCoords = max(lightCoords, texture(uLightVolume, BoxCoord).rg);

    return texture(uLightMap, shiftLight(lightCoords));
}

#endif


#define PIOVER2 1.5707963268

vec4 quat(vec3 axis, float angle) {
    float halfAngle = angle * PIOVER2 / 180.0;
    vec2 cs = sin(vec2(PIOVER2 - halfAngle, halfAngle)); // compute sin and cos in one instruction
    return vec4(axis.xyz * cs.y,  cs.x);
}

vec4 quatMult(vec4 q1, vec4 q2) {
    // disgustingly vectorized quaternion multiplication
    vec4 a = q1.w * q2.xyzw;
    vec4 b = q1.x * q2.wzxy * vec4(1., -1., 1., -1.);
    vec4 c = q1.y * q2.zwxy * vec4(1., 1., -1., -1.);
    vec4 d = q1.z * q2.yxwz * vec4(-1., 1., 1., -1.);

    return a + b + c + d;
}

vec3 rotateVertexByQuat(vec3 v, vec4 q) {
    vec3 i = q.xyz;
    return v + 2.0 * cross(i, cross(i, v) + q.w * v);
}

vec3 rotateAbout(vec3 v, vec3 axis, float angle) {
    return rotateVertexByQuat(v, quat(axis, angle));
}

mat4 rotate(vec3 axis, float angle) {
    float s = sin(angle);
    float c = cos(angle);
    float oc = 1. - c;

    vec3 sa = axis * s;

    mat4 mr = mat4(1.);
    mr[0].xyz = oc * axis.xxz * axis.xyx + vec3(c, sa.z, -sa.y);
    mr[1].xyz = oc * axis.xyy * axis.yyz + vec3(-sa.z, c, sa.x);
    mr[2].xyz = oc * axis.zyz * axis.xzz + vec3(sa.y, -sa.x, c);

    return mr;
}

mat4 rotation(vec3 rot) {
    return rotate(vec3(0., 1., 0.), rot.y) * rotate(vec3(0., 0., 1.), rot.z) * rotate(vec3(1., 0., 0.), rot.x);
}

mat3 modelToNormal(mat4 mat) {
    // Discard the edges. This won't be accurate for scaled or skewed matrices,
    // but we don't have to work with those often.
    mat3 m;
    m[0] = mat[0].xyz;
    m[1] = mat[1].xyz;
    m[2] = mat[2].xyz;
    return m;
}

float diffuse(vec3 normal) {
    vec3 n2 = normal * normal * vec3(.6, .25, .8);
    return min(n2.x + n2.y * (3. + normal.y) + n2.z, 1.);
}
struct Vertex {
    vec3 pos;
    vec2 texCoords;
    vec3 normal;
};

struct BlockFrag {
    vec2 texCoords;
    vec4 color;
    float diffuse;
    vec2 light;
};

#if defined(FRAGMENT_SHADER)
void fragment(BlockFrag r) {
    vec4 tex = FLWBlockTexture(r.texCoords);

    vec4 color = vec4(tex.rgb * FLWLight(r.light).rgb * r.diffuse, tex.a) * r.color;

    FLWFinalizeColor(color);
}
#endif
#define PI 3.1415926538





struct Belt {
    vec2 light;
    vec4 color;
    vec3 pos;
    float speed;
    float offset;
    vec4 rotation;
    vec2 sourceTexture;
    vec4 scrollTexture;
    float scrollMult;
};




#if defined(VERTEX_SHADER)
BlockFrag vertex(Vertex v, Belt instance) {
    vec3 rotated = rotateVertexByQuat(v.pos - .5, instance.rotation) + instance.pos + .5;

    vec4 worldPos = vec4(rotated, 1.);

    vec3 norm = rotateVertexByQuat(v.normal, instance.rotation);

    FLWFinalizeWorldPos(worldPos);
    FLWFinalizeNormal(norm);

    float scrollSize = instance.scrollTexture.w - instance.scrollTexture.y;
    float scroll = fract(instance.speed * uTime / (31.5 * 16.) + instance.offset) * scrollSize * instance.scrollMult;

    BlockFrag b;
    b.diffuse = diffuse(norm);
    b.texCoords = v.texCoords - instance.sourceTexture + instance.scrollTexture.xy + vec2(0, scroll);
    b.light = instance.light;

    #if defined(DEBUG_RAINBOW)
    b.color = instance.color;
    #elif defined(DEBUG_NORMAL)
    b.color = vec4(norm, 1.);
    #else
    b.color = vec4(1.);
    #endif

    return b;
}
#endif

in vec3 a_v_pos;
in vec2 a_v_texCoords;
in vec3 a_v_normal;
in vec2 a_i_light;
in vec4 a_i_color;
in vec3 a_i_pos;
in float a_i_speed;
in float a_i_offset;
in vec4 a_i_rotation;
in vec2 a_i_sourceTexture;
in vec4 a_i_scrollTexture;
in float a_i_scrollMult;
out vec2 v2f_texCoords;
out vec4 v2f_color;
out float v2f_diffuse;
out vec2 v2f_light;
void main() {
Vertex v;
v.pos = a_v_pos;
v.texCoords = a_v_texCoords;
v.normal = a_v_normal;
Belt i;
i.light = a_i_light;
i.color = a_i_color;
i.pos = a_i_pos;
i.speed = a_i_speed;
i.offset = a_i_offset;
i.rotation = a_i_rotation;
i.sourceTexture = a_i_sourceTexture;
i.scrollTexture = a_i_scrollTexture;
i.scrollMult = a_i_scrollMult;
BlockFrag o = vertex(v, i);
v2f_texCoords = o.texCoords;
v2f_color = o.color;
v2f_diffuse = o.diffuse;
v2f_light = o.light;
}
[16:19:41] [Render thread/ERROR]: Shader compilation log for create:belt: WARNING: 0:2: extension 'GL_ARB_conservative_depth' is not supported

[16:19:41] [Render thread/ERROR]: #version 150
#extension GL_ARB_conservative_depth : enable
#define FRAGMENT_SHADER
#define DEBUG_NORMAL
#if defined(VERTEX_SHADER)
out float FragDistance;
#elif defined(FRAGMENT_SHADER)
in float FragDistance;
#endif
uniform vec4 uFogColor;
uniform vec2 uFogRange;

float cylindrical_distance(vec3 worldPos, vec3 cameraPos) {
    float distXZ = length(worldPos.xz - cameraPos.xz);
    float distY = abs(worldPos.y - cameraPos.y);
    return max(distXZ, distY);
}

float cylindrical_distance(vec3 worldPos) {
    float distXZ = length(worldPos.xz);
    float distY = abs(worldPos.y);
    return max(distXZ, distY);
}

float FLWFogFactor() {
    return (uFogRange.y - FragDistance) / (uFogRange.y - uFogRange.x);
}
// Adjust the [0,1] normalized lightmap value based on the texture matrix from LightTexture#enableLightmap
vec2 shiftLight(vec2 lm) {
    return lm * 0.99609375 + 0.03125;// * 255/256 + 1/32
}


uniform sampler3D uLightVolume;

uniform sampler2D uBlockAtlas;
uniform sampler2D uLightMap;

uniform vec3 uLightBoxSize;
uniform vec3 uLightBoxMin;
uniform mat4 uModel;

uniform float uTime;
uniform mat4 uViewProjection;
uniform vec3 uCameraPos;

void FLWFinalizeNormal(inout vec3 normal) {
    mat3 m;
    m[0] = uModel[0].xyz;
    m[1] = uModel[1].xyz;
    m[2] = uModel[2].xyz;
    normal = m * normal;
}

#if defined(VERTEX_SHADER)

out vec3 BoxCoord;

void FLWFinalizeWorldPos(inout vec4 worldPos) {
    worldPos = uModel * worldPos;

    BoxCoord = (worldPos.xyz - uLightBoxMin) / uLightBoxSize;

    FragDistance = max(length(worldPos.xz), abs(worldPos.y)); // cylindrical fog

    gl_Position = uViewProjection * worldPos;
}

#elif defined(FRAGMENT_SHADER)


#define ALPHA_DISCARD 0.1
// optimize discard usage
#if defined(ALPHA_DISCARD)
#if defined(GL_ARB_conservative_depth)
layout (depth_greater) out float gl_FragDepth;
#endif
#endif

in vec3 BoxCoord;

out vec4 FragColor;

vec4 FLWBlockTexture(vec2 texCoords) {
    return texture(uBlockAtlas, texCoords);
}

void FLWFinalizeColor(vec4 color) {
    float a = color.a;
    float fog = clamp(FLWFogFactor(), 0., 1.);

    color = mix(uFogColor, color, fog);
    color.a = a;

    #if defined(ALPHA_DISCARD)
    if (color.a < ALPHA_DISCARD) {
        discard;
    }
    #endif

    FragColor = color;
}

vec4 FLWLight(vec2 lightCoords) {
    lightCoords = max(lightCoords, texture(uLightVolume, BoxCoord).rg);

    return texture(uLightMap, shiftLight(lightCoords));
}

#endif


#define PIOVER2 1.5707963268

vec4 quat(vec3 axis, float angle) {
    float halfAngle = angle * PIOVER2 / 180.0;
    vec2 cs = sin(vec2(PIOVER2 - halfAngle, halfAngle)); // compute sin and cos in one instruction
    return vec4(axis.xyz * cs.y,  cs.x);
}

vec4 quatMult(vec4 q1, vec4 q2) {
    // disgustingly vectorized quaternion multiplication
    vec4 a = q1.w * q2.xyzw;
    vec4 b = q1.x * q2.wzxy * vec4(1., -1., 1., -1.);
    vec4 c = q1.y * q2.zwxy * vec4(1., 1., -1., -1.);
    vec4 d = q1.z * q2.yxwz * vec4(-1., 1., 1., -1.);

    return a + b + c + d;
}

vec3 rotateVertexByQuat(vec3 v, vec4 q) {
    vec3 i = q.xyz;
    return v + 2.0 * cross(i, cross(i, v) + q.w * v);
}

vec3 rotateAbout(vec3 v, vec3 axis, float angle) {
    return rotateVertexByQuat(v, quat(axis, angle));
}

mat4 rotate(vec3 axis, float angle) {
    float s = sin(angle);
    float c = cos(angle);
    float oc = 1. - c;

    vec3 sa = axis * s;

    mat4 mr = mat4(1.);
    mr[0].xyz = oc * axis.xxz * axis.xyx + vec3(c, sa.z, -sa.y);
    mr[1].xyz = oc * axis.xyy * axis.yyz + vec3(-sa.z, c, sa.x);
    mr[2].xyz = oc * axis.zyz * axis.xzz + vec3(sa.y, -sa.x, c);

    return mr;
}

mat4 rotation(vec3 rot) {
    return rotate(vec3(0., 1., 0.), rot.y) * rotate(vec3(0., 0., 1.), rot.z) * rotate(vec3(1., 0., 0.), rot.x);
}

mat3 modelToNormal(mat4 mat) {
    // Discard the edges. This won't be accurate for scaled or skewed matrices,
    // but we don't have to work with those often.
    mat3 m;
    m[0] = mat[0].xyz;
    m[1] = mat[1].xyz;
    m[2] = mat[2].xyz;
    return m;
}

float diffuse(vec3 normal) {
    vec3 n2 = normal * normal * vec3(.6, .25, .8);
    return min(n2.x + n2.y * (3. + normal.y) + n2.z, 1.);
}
struct Vertex {
    vec3 pos;
    vec2 texCoords;
    vec3 normal;
};

struct BlockFrag {
    vec2 texCoords;
    vec4 color;
    float diffuse;
    vec2 light;
};

#if defined(FRAGMENT_SHADER)
void fragment(BlockFrag r) {
    vec4 tex = FLWBlockTexture(r.texCoords);

    vec4 color = vec4(tex.rgb * FLWLight(r.light).rgb * r.diffuse, tex.a) * r.color;

    FLWFinalizeColor(color);
}
#endif
#define PI 3.1415926538





struct Belt {
    vec2 light;
    vec4 color;
    vec3 pos;
    float speed;
    float offset;
    vec4 rotation;
    vec2 sourceTexture;
    vec4 scrollTexture;
    float scrollMult;
};




#if defined(VERTEX_SHADER)
BlockFrag vertex(Vertex v, Belt instance) {
    vec3 rotated = rotateVertexByQuat(v.pos - .5, instance.rotation) + instance.pos + .5;

    vec4 worldPos = vec4(rotated, 1.);

    vec3 norm = rotateVertexByQuat(v.normal, instance.rotation);

    FLWFinalizeWorldPos(worldPos);
    FLWFinalizeNormal(norm);

    float scrollSize = instance.scrollTexture.w - instance.scrollTexture.y;
    float scroll = fract(instance.speed * uTime / (31.5 * 16.) + instance.offset) * scrollSize * instance.scrollMult;

    BlockFrag b;
    b.diffuse = diffuse(norm);
    b.texCoords = v.texCoords - instance.sourceTexture + instance.scrollTexture.xy + vec2(0, scroll);
    b.light = instance.light;

    #if defined(DEBUG_RAINBOW)
    b.color = instance.color;
    #elif defined(DEBUG_NORMAL)
    b.color = vec4(norm, 1.);
    #else
    b.color = vec4(1.);
    #endif

    return b;
}
#endif

in vec2 v2f_texCoords;
in vec4 v2f_color;
in float v2f_diffuse;
in vec2 v2f_light;
void main() {
BlockFrag o;
o.texCoords = v2f_texCoords;
o.color = v2f_color;
o.diffuse = v2f_diffuse;
o.light = v2f_light;
fragment(o);
}
[16:19:41] [Render thread/INFO]: Loading context 'create:context/contraption'
[16:19:41] [Render thread/ERROR]: Shader compilation log for create:contraption_structure: WARNING: 0:2: extension 'GL_ARB_conservative_depth' is not supported

[16:19:41] [Render thread/ERROR]: #version 150
#extension GL_ARB_conservative_depth : enable
#define VERTEX_SHADER
#if defined(VERTEX_SHADER)
out float FragDistance;
#elif defined(FRAGMENT_SHADER)
in float FragDistance;
#endif
uniform vec4 uFogColor;
uniform vec2 uFogRange;

float cylindrical_distance(vec3 worldPos, vec3 cameraPos) {
    float distXZ = length(worldPos.xz - cameraPos.xz);
    float distY = abs(worldPos.y - cameraPos.y);
    return max(distXZ, distY);
}

float cylindrical_distance(vec3 worldPos) {
    float distXZ = length(worldPos.xz);
    float distY = abs(worldPos.y);
    return max(distXZ, distY);
}

float FLWFogFactor() {
    return (uFogRange.y - FragDistance) / (uFogRange.y - uFogRange.x);
}
// Adjust the [0,1] normalized lightmap value based on the texture matrix from LightTexture#enableLightmap
vec2 shiftLight(vec2 lm) {
    return lm * 0.99609375 + 0.03125;// * 255/256 + 1/32
}


uniform sampler3D uLightVolume;

uniform sampler2D uBlockAtlas;
uniform sampler2D uLightMap;

uniform vec3 uLightBoxSize;
uniform vec3 uLightBoxMin;
uniform mat4 uModel;

uniform float uTime;
uniform mat4 uViewProjection;
uniform vec3 uCameraPos;

void FLWFinalizeNormal(inout vec3 normal) {
    mat3 m;
    m[0] = uModel[0].xyz;
    m[1] = uModel[1].xyz;
    m[2] = uModel[2].xyz;
    normal = m * normal;
}

#if defined(VERTEX_SHADER)

out vec3 BoxCoord;

void FLWFinalizeWorldPos(inout vec4 worldPos) {
    worldPos = uModel * worldPos;

    BoxCoord = (worldPos.xyz - uLightBoxMin) / uLightBoxSize;

    FragDistance = max(length(worldPos.xz), abs(worldPos.y)); // cylindrical fog

    gl_Position = uViewProjection * worldPos;
}

#elif defined(FRAGMENT_SHADER)


#define ALPHA_DISCARD 0.1
// optimize discard usage
#if defined(ALPHA_DISCARD)
#if defined(GL_ARB_conservative_depth)
layout (depth_greater) out float gl_FragDepth;
#endif
#endif

in vec3 BoxCoord;

out vec4 FragColor;

vec4 FLWBlockTexture(vec2 texCoords) {
    return texture(uBlockAtlas, texCoords);
}

void FLWFinalizeColor(vec4 color) {
    float a = color.a;
    float fog = clamp(FLWFogFactor(), 0., 1.);

    color = mix(uFogColor, color, fog);
    color.a = a;

    #if defined(ALPHA_DISCARD)
    if (color.a < ALPHA_DISCARD) {
        discard;
    }
    #endif

    FragColor = color;
}

vec4 FLWLight(vec2 lightCoords) {
    lightCoords = max(lightCoords, texture(uLightVolume, BoxCoord).rg);

    return texture(uLightMap, shiftLight(lightCoords));
}

#endif


mat4 rotate(vec3 axis, float angle) {
    float s = sin(angle);
    float c = cos(angle);
    float oc = 1. - c;

    vec3 sa = axis * s;

    mat4 mr = mat4(1.);
    mr[0].xyz = oc * axis.xxz * axis.xyx + vec3(c, sa.z, -sa.y);
    mr[1].xyz = oc * axis.xyy * axis.yyz + vec3(-sa.z, c, sa.x);
    mr[2].xyz = oc * axis.zyz * axis.xzz + vec3(sa.y, -sa.x, c);

    return mr;
}

mat4 rotation(vec3 rot) {
    return rotate(vec3(0., 1., 0.), rot.y) * rotate(vec3(0., 0., 1.), rot.z) * rotate(vec3(1., 0., 0.), rot.x);
}

mat3 modelToNormal(mat4 mat) {
    // Discard the edges. This won't be accurate for scaled or skewed matrices,
    // but we don't have to work with those often.
    mat3 m;
    m[0] = mat[0].xyz;
    m[1] = mat[1].xyz;
    m[2] = mat[2].xyz;
    return m;
}

float diffuse(vec3 normal) {
    vec3 n2 = normal * normal * vec3(.6, .25, .8);
    return min(n2.x + n2.y * (3. + normal.y) + n2.z, 1.);
}

struct BlockFrag {
    vec2 texCoords;
    vec4 color;
    float diffuse;
    vec2 light;
};

#if defined(FRAGMENT_SHADER)
void fragment(BlockFrag r) {
    vec4 tex = FLWBlockTexture(r.texCoords);

    vec4 color = vec4(tex.rgb * FLWLight(r.light).rgb * r.diffuse, tex.a) * r.color;

    FLWFinalizeColor(color);
}
#endif
#define PI 3.1415926538




struct Vertex {
    vec3 pos;
    vec4 color;
    vec2 texCoords;
    vec2 modelLight;
    vec3 normal;
};



#if defined(VERTEX_SHADER)
BlockFrag vertex(Vertex v) {
    vec4 worldPos = vec4(v.pos, 1.);
    vec3 norm = v.normal;

    FLWFinalizeWorldPos(worldPos);
    FLWFinalizeNormal(norm);

    BlockFrag b;
    b.diffuse = diffuse(norm);
    b.texCoords = v.texCoords;
    b.light = v.modelLight;

    #if defined(DEBUG_NORMAL)
    b.color = vec4(norm, 1.);
    #else
    b.color = v.color;
    #endif

    return b;
}
#endif

in vec3 a_v_pos;
in vec4 a_v_color;
in vec2 a_v_texCoords;
in vec2 a_v_modelLight;
in vec3 a_v_normal;
out vec2 v2f_texCoords;
out vec4 v2f_color;
out float v2f_diffuse;
out vec2 v2f_light;
void main() {
Vertex v;
v.pos = a_v_pos;
v.color = a_v_color;
v.texCoords = a_v_texCoords;
v.modelLight = a_v_modelLight;
v.normal = a_v_normal;
BlockFrag o = vertex(v);
v2f_texCoords = o.texCoords;
v2f_color = o.color;
v2f_diffuse = o.diffuse;
v2f_light = o.light;
}
[16:19:41] [Render thread/ERROR]: Shader compilation log for create:contraption_structure: WARNING: 0:2: extension 'GL_ARB_conservative_depth' is not supported

[16:19:41] [Render thread/ERROR]: #version 150
#extension GL_ARB_conservative_depth : enable
#define FRAGMENT_SHADER
#if defined(VERTEX_SHADER)
out float FragDistance;
#elif defined(FRAGMENT_SHADER)
in float FragDistance;
#endif
uniform vec4 uFogColor;
uniform vec2 uFogRange;

float cylindrical_distance(vec3 worldPos, vec3 cameraPos) {
    float distXZ = length(worldPos.xz - cameraPos.xz);
    float distY = abs(worldPos.y - cameraPos.y);
    return max(distXZ, distY);
}

float cylindrical_distance(vec3 worldPos) {
    float distXZ = length(worldPos.xz);
    float distY = abs(worldPos.y);
    return max(distXZ, distY);
}

float FLWFogFactor() {
    return (uFogRange.y - FragDistance) / (uFogRange.y - uFogRange.x);
}
// Adjust the [0,1] normalized lightmap value based on the texture matrix from LightTexture#enableLightmap
vec2 shiftLight(vec2 lm) {
    return lm * 0.99609375 + 0.03125;// * 255/256 + 1/32
}


uniform sampler3D uLightVolume;

uniform sampler2D uBlockAtlas;
uniform sampler2D uLightMap;

uniform vec3 uLightBoxSize;
uniform vec3 uLightBoxMin;
uniform mat4 uModel;

uniform float uTime;
uniform mat4 uViewProjection;
uniform vec3 uCameraPos;

void FLWFinalizeNormal(inout vec3 normal) {
    mat3 m;
    m[0] = uModel[0].xyz;
    m[1] = uModel[1].xyz;
    m[2] = uModel[2].xyz;
    normal = m * normal;
}

#if defined(VERTEX_SHADER)

out vec3 BoxCoord;

void FLWFinalizeWorldPos(inout vec4 worldPos) {
    worldPos = uModel * worldPos;

    BoxCoord = (worldPos.xyz - uLightBoxMin) / uLightBoxSize;

    FragDistance = max(length(worldPos.xz), abs(worldPos.y)); // cylindrical fog

    gl_Position = uViewProjection * worldPos;
}

#elif defined(FRAGMENT_SHADER)


#define ALPHA_DISCARD 0.1
// optimize discard usage
#if defined(ALPHA_DISCARD)
#if defined(GL_ARB_conservative_depth)
layout (depth_greater) out float gl_FragDepth;
#endif
#endif

in vec3 BoxCoord;

out vec4 FragColor;

vec4 FLWBlockTexture(vec2 texCoords) {
    return texture(uBlockAtlas, texCoords);
}

void FLWFinalizeColor(vec4 color) {
    float a = color.a;
    float fog = clamp(FLWFogFactor(), 0., 1.);

    color = mix(uFogColor, color, fog);
    color.a = a;

    #if defined(ALPHA_DISCARD)
    if (color.a < ALPHA_DISCARD) {
        discard;
    }
    #endif

    FragColor = color;
}

vec4 FLWLight(vec2 lightCoords) {
    lightCoords = max(lightCoords, texture(uLightVolume, BoxCoord).rg);

    return texture(uLightMap, shiftLight(lightCoords));
}

#endif


mat4 rotate(vec3 axis, float angle) {
    float s = sin(angle);
    float c = cos(angle);
    float oc = 1. - c;

    vec3 sa = axis * s;

    mat4 mr = mat4(1.);
    mr[0].xyz = oc * axis.xxz * axis.xyx + vec3(c, sa.z, -sa.y);
    mr[1].xyz = oc * axis.xyy * axis.yyz + vec3(-sa.z, c, sa.x);
    mr[2].xyz = oc * axis.zyz * axis.xzz + vec3(sa.y, -sa.x, c);

    return mr;
}

mat4 rotation(vec3 rot) {
    return rotate(vec3(0., 1., 0.), rot.y) * rotate(vec3(0., 0., 1.), rot.z) * rotate(vec3(1., 0., 0.), rot.x);
}

mat3 modelToNormal(mat4 mat) {
    // Discard the edges. This won't be accurate for scaled or skewed matrices,
    // but we don't have to work with those often.
    mat3 m;
    m[0] = mat[0].xyz;
    m[1] = mat[1].xyz;
    m[2] = mat[2].xyz;
    return m;
}

float diffuse(vec3 normal) {
    vec3 n2 = normal * normal * vec3(.6, .25, .8);
    return min(n2.x + n2.y * (3. + normal.y) + n2.z, 1.);
}

struct BlockFrag {
    vec2 texCoords;
    vec4 color;
    float diffuse;
    vec2 light;
};

#if defined(FRAGMENT_SHADER)
void fragment(BlockFrag r) {
    vec4 tex = FLWBlockTexture(r.texCoords);

    vec4 color = vec4(tex.rgb * FLWLight(r.light).rgb * r.diffuse, tex.a) * r.color;

    FLWFinalizeColor(color);
}
#endif
#define PI 3.1415926538




struct Vertex {
    vec3 pos;
    vec4 color;
    vec2 texCoords;
    vec2 modelLight;
    vec3 normal;
};



#if defined(VERTEX_SHADER)
BlockFrag vertex(Vertex v) {
    vec4 worldPos = vec4(v.pos, 1.);
    vec3 norm = v.normal;

    FLWFinalizeWorldPos(worldPos);
    FLWFinalizeNormal(norm);

    BlockFrag b;
    b.diffuse = diffuse(norm);
    b.texCoords = v.texCoords;
    b.light = v.modelLight;

    #if defined(DEBUG_NORMAL)
    b.color = vec4(norm, 1.);
    #else
    b.color = v.color;
    #endif

    return b;
}
#endif

in vec2 v2f_texCoords;
in vec4 v2f_color;
in float v2f_diffuse;
in vec2 v2f_light;
void main() {
BlockFrag o;
o.texCoords = v2f_texCoords;
o.color = v2f_color;
o.diffuse = v2f_diffuse;
o.light = v2f_light;
fragment(o);
}
[16:19:41] [Render thread/ERROR]: Shader compilation log for create:contraption_structure: WARNING: 0:2: extension 'GL_ARB_conservative_depth' is not supported

[16:19:41] [Render thread/ERROR]: #version 150
#extension GL_ARB_conservative_depth : enable
#define VERTEX_SHADER
#define DEBUG_NORMAL
#if defined(VERTEX_SHADER)
out float FragDistance;
#elif defined(FRAGMENT_SHADER)
in float FragDistance;
#endif
uniform vec4 uFogColor;
uniform vec2 uFogRange;

float cylindrical_distance(vec3 worldPos, vec3 cameraPos) {
    float distXZ = length(worldPos.xz - cameraPos.xz);
    float distY = abs(worldPos.y - cameraPos.y);
    return max(distXZ, distY);
}

float cylindrical_distance(vec3 worldPos) {
    float distXZ = length(worldPos.xz);
    float distY = abs(worldPos.y);
    return max(distXZ, distY);
}

float FLWFogFactor() {
    return (uFogRange.y - FragDistance) / (uFogRange.y - uFogRange.x);
}
// Adjust the [0,1] normalized lightmap value based on the texture matrix from LightTexture#enableLightmap
vec2 shiftLight(vec2 lm) {
    return lm * 0.99609375 + 0.03125;// * 255/256 + 1/32
}


uniform sampler3D uLightVolume;

uniform sampler2D uBlockAtlas;
uniform sampler2D uLightMap;

uniform vec3 uLightBoxSize;
uniform vec3 uLightBoxMin;
uniform mat4 uModel;

uniform float uTime;
uniform mat4 uViewProjection;
uniform vec3 uCameraPos;

void FLWFinalizeNormal(inout vec3 normal) {
    mat3 m;
    m[0] = uModel[0].xyz;
    m[1] = uModel[1].xyz;
    m[2] = uModel[2].xyz;
    normal = m * normal;
}

#if defined(VERTEX_SHADER)

out vec3 BoxCoord;

void FLWFinalizeWorldPos(inout vec4 worldPos) {
    worldPos = uModel * worldPos;

    BoxCoord = (worldPos.xyz - uLightBoxMin) / uLightBoxSize;

    FragDistance = max(length(worldPos.xz), abs(worldPos.y)); // cylindrical fog

    gl_Position = uViewProjection * worldPos;
}

#elif defined(FRAGMENT_SHADER)


#define ALPHA_DISCARD 0.1
// optimize discard usage
#if defined(ALPHA_DISCARD)
#if defined(GL_ARB_conservative_depth)
layout (depth_greater) out float gl_FragDepth;
#endif
#endif

in vec3 BoxCoord;

out vec4 FragColor;

vec4 FLWBlockTexture(vec2 texCoords) {
    return texture(uBlockAtlas, texCoords);
}

void FLWFinalizeColor(vec4 color) {
    float a = color.a;
    float fog = clamp(FLWFogFactor(), 0., 1.);

    color = mix(uFogColor, color, fog);
    color.a = a;

    #if defined(ALPHA_DISCARD)
    if (color.a < ALPHA_DISCARD) {
        discard;
    }
    #endif

    FragColor = color;
}

vec4 FLWLight(vec2 lightCoords) {
    lightCoords = max(lightCoords, texture(uLightVolume, BoxCoord).rg);

    return texture(uLightMap, shiftLight(lightCoords));
}

#endif


mat4 rotate(vec3 axis, float angle) {
    float s = sin(angle);
    float c = cos(angle);
    float oc = 1. - c;

    vec3 sa = axis * s;

    mat4 mr = mat4(1.);
    mr[0].xyz = oc * axis.xxz * axis.xyx + vec3(c, sa.z, -sa.y);
    mr[1].xyz = oc * axis.xyy * axis.yyz + vec3(-sa.z, c, sa.x);
    mr[2].xyz = oc * axis.zyz * axis.xzz + vec3(sa.y, -sa.x, c);

    return mr;
}

mat4 rotation(vec3 rot) {
    return rotate(vec3(0., 1., 0.), rot.y) * rotate(vec3(0., 0., 1.), rot.z) * rotate(vec3(1., 0., 0.), rot.x);
}

mat3 modelToNormal(mat4 mat) {
    // Discard the edges. This won't be accurate for scaled or skewed matrices,
    // but we don't have to work with those often.
    mat3 m;
    m[0] = mat[0].xyz;
    m[1] = mat[1].xyz;
    m[2] = mat[2].xyz;
    return m;
}

float diffuse(vec3 normal) {
    vec3 n2 = normal * normal * vec3(.6, .25, .8);
    return min(n2.x + n2.y * (3. + normal.y) + n2.z, 1.);
}

struct BlockFrag {
    vec2 texCoords;
    vec4 color;
    float diffuse;
    vec2 light;
};

#if defined(FRAGMENT_SHADER)
void fragment(BlockFrag r) {
    vec4 tex = FLWBlockTexture(r.texCoords);

    vec4 color = vec4(tex.rgb * FLWLight(r.light).rgb * r.diffuse, tex.a) * r.color;

    FLWFinalizeColor(color);
}
#endif
#define PI 3.1415926538




struct Vertex {
    vec3 pos;
    vec4 color;
    vec2 texCoords;
    vec2 modelLight;
    vec3 normal;
};



#if defined(VERTEX_SHADER)
BlockFrag vertex(Vertex v) {
    vec4 worldPos = vec4(v.pos, 1.);
    vec3 norm = v.normal;

    FLWFinalizeWorldPos(worldPos);
    FLWFinalizeNormal(norm);

    BlockFrag b;
    b.diffuse = diffuse(norm);
    b.texCoords = v.texCoords;
    b.light = v.modelLight;

    #if defined(DEBUG_NORMAL)
    b.color = vec4(norm, 1.);
    #else
    b.color = v.color;
    #endif

    return b;
}
#endif

in vec3 a_v_pos;
in vec4 a_v_color;
in vec2 a_v_texCoords;
in vec2 a_v_modelLight;
in vec3 a_v_normal;
out vec2 v2f_texCoords;
out vec4 v2f_color;
out float v2f_diffuse;
out vec2 v2f_light;
void main() {
Vertex v;
v.pos = a_v_pos;
v.color = a_v_color;
v.texCoords = a_v_texCoords;
v.modelLight = a_v_modelLight;
v.normal = a_v_normal;
BlockFrag o = vertex(v);
v2f_texCoords = o.texCoords;
v2f_color = o.color;
v2f_diffuse = o.diffuse;
v2f_light = o.light;
}
[16:19:41] [Render thread/ERROR]: Shader compilation log for create:contraption_structure: WARNING: 0:2: extension 'GL_ARB_conservative_depth' is not supported

[16:19:41] [Render thread/ERROR]: #version 150
#extension GL_ARB_conservative_depth : enable
#define FRAGMENT_SHADER
#define DEBUG_NORMAL
#if defined(VERTEX_SHADER)
out float FragDistance;
#elif defined(FRAGMENT_SHADER)
in float FragDistance;
#endif
uniform vec4 uFogColor;
uniform vec2 uFogRange;

float cylindrical_distance(vec3 worldPos, vec3 cameraPos) {
    float distXZ = length(worldPos.xz - cameraPos.xz);
    float distY = abs(worldPos.y - cameraPos.y);
    return max(distXZ, distY);
}

float cylindrical_distance(vec3 worldPos) {
    float distXZ = length(worldPos.xz);
    float distY = abs(worldPos.y);
    return max(distXZ, distY);
}

float FLWFogFactor() {
    return (uFogRange.y - FragDistance) / (uFogRange.y - uFogRange.x);
}
// Adjust the [0,1] normalized lightmap value based on the texture matrix from LightTexture#enableLightmap
vec2 shiftLight(vec2 lm) {
    return lm * 0.99609375 + 0.03125;// * 255/256 + 1/32
}


uniform sampler3D uLightVolume;

uniform sampler2D uBlockAtlas;
uniform sampler2D uLightMap;

uniform vec3 uLightBoxSize;
uniform vec3 uLightBoxMin;
uniform mat4 uModel;

uniform float uTime;
uniform mat4 uViewProjection;
uniform vec3 uCameraPos;

void FLWFinalizeNormal(inout vec3 normal) {
    mat3 m;
    m[0] = uModel[0].xyz;
    m[1] = uModel[1].xyz;
    m[2] = uModel[2].xyz;
    normal = m * normal;
}

#if defined(VERTEX_SHADER)

out vec3 BoxCoord;

void FLWFinalizeWorldPos(inout vec4 worldPos) {
    worldPos = uModel * worldPos;

    BoxCoord = (worldPos.xyz - uLightBoxMin) / uLightBoxSize;

    FragDistance = max(length(worldPos.xz), abs(worldPos.y)); // cylindrical fog

    gl_Position = uViewProjection * worldPos;
}

#elif defined(FRAGMENT_SHADER)


#define ALPHA_DISCARD 0.1
// optimize discard usage
#if defined(ALPHA_DISCARD)
#if defined(GL_ARB_conservative_depth)
layout (depth_greater) out float gl_FragDepth;
#endif
#endif

in vec3 BoxCoord;

out vec4 FragColor;

vec4 FLWBlockTexture(vec2 texCoords) {
    return texture(uBlockAtlas, texCoords);
}

void FLWFinalizeColor(vec4 color) {
    float a = color.a;
    float fog = clamp(FLWFogFactor(), 0., 1.);

    color = mix(uFogColor, color, fog);
    color.a = a;

    #if defined(ALPHA_DISCARD)
    if (color.a < ALPHA_DISCARD) {
        discard;
    }
    #endif

    FragColor = color;
}

vec4 FLWLight(vec2 lightCoords) {
    lightCoords = max(lightCoords, texture(uLightVolume, BoxCoord).rg);

    return texture(uLightMap, shiftLight(lightCoords));
}

#endif


mat4 rotate(vec3 axis, float angle) {
    float s = sin(angle);
    float c = cos(angle);
    float oc = 1. - c;

    vec3 sa = axis * s;

    mat4 mr = mat4(1.);
    mr[0].xyz = oc * axis.xxz * axis.xyx + vec3(c, sa.z, -sa.y);
    mr[1].xyz = oc * axis.xyy * axis.yyz + vec3(-sa.z, c, sa.x);
    mr[2].xyz = oc * axis.zyz * axis.xzz + vec3(sa.y, -sa.x, c);

    return mr;
}

mat4 rotation(vec3 rot) {
    return rotate(vec3(0., 1., 0.), rot.y) * rotate(vec3(0., 0., 1.), rot.z) * rotate(vec3(1., 0., 0.), rot.x);
}

mat3 modelToNormal(mat4 mat) {
    // Discard the edges. This won't be accurate for scaled or skewed matrices,
    // but we don't have to work with those often.
    mat3 m;
    m[0] = mat[0].xyz;
    m[1] = mat[1].xyz;
    m[2] = mat[2].xyz;
    return m;
}

float diffuse(vec3 normal) {
    vec3 n2 = normal * normal * vec3(.6, .25, .8);
    return min(n2.x + n2.y * (3. + normal.y) + n2.z, 1.);
}

struct BlockFrag {
    vec2 texCoords;
    vec4 color;
    float diffuse;
    vec2 light;
};

#if defined(FRAGMENT_SHADER)
void fragment(BlockFrag r) {
    vec4 tex = FLWBlockTexture(r.texCoords);

    vec4 color = vec4(tex.rgb * FLWLight(r.light).rgb * r.diffuse, tex.a) * r.color;

    FLWFinalizeColor(color);
}
#endif
#define PI 3.1415926538




struct Vertex {
    vec3 pos;
    vec4 color;
    vec2 texCoords;
    vec2 modelLight;
    vec3 normal;
};



#if defined(VERTEX_SHADER)
BlockFrag vertex(Vertex v) {
    vec4 worldPos = vec4(v.pos, 1.);
    vec3 norm = v.normal;

    FLWFinalizeWorldPos(worldPos);
    FLWFinalizeNormal(norm);

    BlockFrag b;
    b.diffuse = diffuse(norm);
    b.texCoords = v.texCoords;
    b.light = v.modelLight;

    #if defined(DEBUG_NORMAL)
    b.color = vec4(norm, 1.);
    #else
    b.color = v.color;
    #endif

    return b;
}
#endif

in vec2 v2f_texCoords;
in vec4 v2f_color;
in float v2f_diffuse;
in vec2 v2f_light;
void main() {
BlockFrag o;
o.texCoords = v2f_texCoords;
o.color = v2f_color;
o.diffuse = v2f_diffuse;
o.light = v2f_light;
fragment(o);
}
[16:19:41] [Render thread/INFO]: Loading context 'flywheel:context/crumbling'
[16:19:41] [Render thread/ERROR]: Shader compilation log for flywheel:model: WARNING: 0:2: extension 'GL_ARB_conservative_depth' is not supported

[16:19:41] [Render thread/ERROR]: #version 150
#extension GL_ARB_conservative_depth : enable
#define VERTEX_SHADER
#if defined(VERTEX_SHADER)
out float FragDistance;
#elif defined(FRAGMENT_SHADER)
in float FragDistance;
#endif
uniform vec4 uFogColor;
uniform vec2 uFogRange;

float cylindrical_distance(vec3 worldPos, vec3 cameraPos) {
    float distXZ = length(worldPos.xz - cameraPos.xz);
    float distY = abs(worldPos.y - cameraPos.y);
    return max(distXZ, distY);
}

float cylindrical_distance(vec3 worldPos) {
    float distXZ = length(worldPos.xz);
    float distY = abs(worldPos.y);
    return max(distXZ, distY);
}

float FLWFogFactor() {
    return (uFogRange.y - FragDistance) / (uFogRange.y - uFogRange.x);
}


uniform float uTime;
uniform mat4 uViewProjection;
uniform vec3 uCameraPos;

uniform vec2 uTextureScale;
uniform sampler2D uBlockAtlas;
uniform sampler2D uLightMap;
uniform sampler2D uCrumbling;

uniform vec2 uWindowSize;

void FLWFinalizeNormal(inout vec3 normal) {
    // noop
}

#if defined(VERTEX_SHADER)
void FLWFinalizeWorldPos(inout vec4 worldPos) {
    #if defined(USE_FOG)
    FragDistance = cylindrical_distance(worldPos.xyz, uCameraPos);
    #endif

    gl_Position = uViewProjection * worldPos;
}

#elif defined(FRAGMENT_SHADER)

out vec4 fragColor;

vec4 FLWBlockTexture(vec2 texCoords) {
    vec4 cr = texture(uCrumbling, texCoords * uTextureScale);
    float diffuseAlpha = texture(uBlockAtlas, texCoords).a;
    cr.a = cr.a * diffuseAlpha;
    return cr;
}

void FLWFinalizeColor(vec4 color) {
    #if defined(USE_FOG)
    float a = color.a;
    float fog = clamp(FLWFogFactor(), 0., 1.);

    color = mix(uFogColor, color, fog);
    color.a = a;
    #endif

    if (color.a < 0.1) {
        discard;
    }

    fragColor = color;
}

vec4 FLWLight(vec2 lightCoords) {
    return vec4(1.);
}
#endif


float diffuse(vec3 normal) {
    vec3 n2 = normal * normal * vec3(.6, .25, .8);
    return min(n2.x + n2.y * (3. + normal.y) + n2.z, 1.);
}
struct Vertex {
    vec3 pos;
    vec2 texCoords;
    vec3 normal;
};

struct BlockFrag {
    vec2 texCoords;
    vec4 color;
    float diffuse;
    vec2 light;
};

#if defined(FRAGMENT_SHADER)
void fragment(BlockFrag r) {
    vec4 tex = FLWBlockTexture(r.texCoords);

    vec4 color = vec4(tex.rgb * FLWLight(r.light).rgb * r.diffuse, tex.a) * r.color;

    FLWFinalizeColor(color);
}
#endif




struct Instance {
    vec2 light;
    vec4 color;
    mat4 transform;
    mat3 normalMat;
};

#if defined(VERTEX_SHADER)
BlockFrag vertex(Vertex v, Instance i) {
    vec4 worldPos = i.transform * vec4(v.pos, 1.);

    vec3 norm = i.normalMat * v.normal;

    FLWFinalizeWorldPos(worldPos);
    FLWFinalizeNormal(norm);

    norm = normalize(norm);

    BlockFrag b;
    b.diffuse = diffuse(norm);
    b.texCoords = v.texCoords;
    b.light = i.light;
    #if defined(DEBUG_NORMAL)
    b.color = vec4(norm, 1.);
    #else
    b.color = i.color;
    #endif
    return b;
}
#endif

in vec3 a_v_pos;
in vec2 a_v_texCoords;
in vec3 a_v_normal;
in vec2 a_i_light;
in vec4 a_i_color;
in mat4 a_i_transform;
in mat3 a_i_normalMat;
out vec2 v2f_texCoords;
out vec4 v2f_color;
out float v2f_diffuse;
out vec2 v2f_light;
void main() {
Vertex v;
v.pos = a_v_pos;
v.texCoords = a_v_texCoords;
v.normal = a_v_normal;
Instance i;
i.light = a_i_light;
i.color = a_i_color;
i.transform = a_i_transform;
i.normalMat = a_i_normalMat;
BlockFrag o = vertex(v, i);
v2f_texCoords = o.texCoords;
v2f_color = o.color;
v2f_diffuse = o.diffuse;
v2f_light = o.light;
}
[16:19:41] [Render thread/ERROR]: Shader compilation log for flywheel:model: WARNING: 0:2: extension 'GL_ARB_conservative_depth' is not supported

[16:19:41] [Render thread/ERROR]: #version 150
#extension GL_ARB_conservative_depth : enable
#define FRAGMENT_SHADER
#if defined(VERTEX_SHADER)
out float FragDistance;
#elif defined(FRAGMENT_SHADER)
in float FragDistance;
#endif
uniform vec4 uFogColor;
uniform vec2 uFogRange;

float cylindrical_distance(vec3 worldPos, vec3 cameraPos) {
    float distXZ = length(worldPos.xz - cameraPos.xz);
    float distY = abs(worldPos.y - cameraPos.y);
    return max(distXZ, distY);
}

float cylindrical_distance(vec3 worldPos) {
    float distXZ = length(worldPos.xz);
    float distY = abs(worldPos.y);
    return max(distXZ, distY);
}

float FLWFogFactor() {
    return (uFogRange.y - FragDistance) / (uFogRange.y - uFogRange.x);
}


uniform float uTime;
uniform mat4 uViewProjection;
uniform vec3 uCameraPos;

uniform vec2 uTextureScale;
uniform sampler2D uBlockAtlas;
uniform sampler2D uLightMap;
uniform sampler2D uCrumbling;

uniform vec2 uWindowSize;

void FLWFinalizeNormal(inout vec3 normal) {
    // noop
}

#if defined(VERTEX_SHADER)
void FLWFinalizeWorldPos(inout vec4 worldPos) {
    #if defined(USE_FOG)
    FragDistance = cylindrical_distance(worldPos.xyz, uCameraPos);
    #endif

    gl_Position = uViewProjection * worldPos;
}

#elif defined(FRAGMENT_SHADER)

out vec4 fragColor;

vec4 FLWBlockTexture(vec2 texCoords) {
    vec4 cr = texture(uCrumbling, texCoords * uTextureScale);
    float diffuseAlpha = texture(uBlockAtlas, texCoords).a;
    cr.a = cr.a * diffuseAlpha;
    return cr;
}

void FLWFinalizeColor(vec4 color) {
    #if defined(USE_FOG)
    float a = color.a;
    float fog = clamp(FLWFogFactor(), 0., 1.);

    color = mix(uFogColor, color, fog);
    color.a = a;
    #endif

    if (color.a < 0.1) {
        discard;
    }

    fragColor = color;
}

vec4 FLWLight(vec2 lightCoords) {
    return vec4(1.);
}
#endif


float diffuse(vec3 normal) {
    vec3 n2 = normal * normal * vec3(.6, .25, .8);
    return min(n2.x + n2.y * (3. + normal.y) + n2.z, 1.);
}
struct Vertex {
    vec3 pos;
    vec2 texCoords;
    vec3 normal;
};

struct BlockFrag {
    vec2 texCoords;
    vec4 color;
    float diffuse;
    vec2 light;
};

#if defined(FRAGMENT_SHADER)
void fragment(BlockFrag r) {
    vec4 tex = FLWBlockTexture(r.texCoords);

    vec4 color = vec4(tex.rgb * FLWLight(r.light).rgb * r.diffuse, tex.a) * r.color;

    FLWFinalizeColor(color);
}
#endif




struct Instance {
    vec2 light;
    vec4 color;
    mat4 transform;
    mat3 normalMat;
};

#if defined(VERTEX_SHADER)
BlockFrag vertex(Vertex v, Instance i) {
    vec4 worldPos = i.transform * vec4(v.pos, 1.);

    vec3 norm = i.normalMat * v.normal;

    FLWFinalizeWorldPos(worldPos);
    FLWFinalizeNormal(norm);

    norm = normalize(norm);

    BlockFrag b;
    b.diffuse = diffuse(norm);
    b.texCoords = v.texCoords;
    b.light = i.light;
    #if defined(DEBUG_NORMAL)
    b.color = vec4(norm, 1.);
    #else
    b.color = i.color;
    #endif
    return b;
}
#endif

in vec2 v2f_texCoords;
in vec4 v2f_color;
in float v2f_diffuse;
in vec2 v2f_light;
void main() {
BlockFrag o;
o.texCoords = v2f_texCoords;
o.color = v2f_color;
o.diffuse = v2f_diffuse;
o.light = v2f_light;
fragment(o);
}
[16:19:41] [Render thread/ERROR]: Shader compilation log for flywheel:model: WARNING: 0:2: extension 'GL_ARB_conservative_depth' is not supported

[16:19:41] [Render thread/ERROR]: #version 150
#extension GL_ARB_conservative_depth : enable
#define VERTEX_SHADER
#define DEBUG_NORMAL
#if defined(VERTEX_SHADER)
out float FragDistance;
#elif defined(FRAGMENT_SHADER)
in float FragDistance;
#endif
uniform vec4 uFogColor;
uniform vec2 uFogRange;

float cylindrical_distance(vec3 worldPos, vec3 cameraPos) {
    float distXZ = length(worldPos.xz - cameraPos.xz);
    float distY = abs(worldPos.y - cameraPos.y);
    return max(distXZ, distY);
}

float cylindrical_distance(vec3 worldPos) {
    float distXZ = length(worldPos.xz);
    float distY = abs(worldPos.y);
    return max(distXZ, distY);
}

float FLWFogFactor() {
    return (uFogRange.y - FragDistance) / (uFogRange.y - uFogRange.x);
}


uniform float uTime;
uniform mat4 uViewProjection;
uniform vec3 uCameraPos;

uniform vec2 uTextureScale;
uniform sampler2D uBlockAtlas;
uniform sampler2D uLightMap;
uniform sampler2D uCrumbling;

uniform vec2 uWindowSize;

void FLWFinalizeNormal(inout vec3 normal) {
    // noop
}

#if defined(VERTEX_SHADER)
void FLWFinalizeWorldPos(inout vec4 worldPos) {
    #if defined(USE_FOG)
    FragDistance = cylindrical_distance(worldPos.xyz, uCameraPos);
    #endif

    gl_Position = uViewProjection * worldPos;
}

#elif defined(FRAGMENT_SHADER)

out vec4 fragColor;

vec4 FLWBlockTexture(vec2 texCoords) {
    vec4 cr = texture(uCrumbling, texCoords * uTextureScale);
    float diffuseAlpha = texture(uBlockAtlas, texCoords).a;
    cr.a = cr.a * diffuseAlpha;
    return cr;
}

void FLWFinalizeColor(vec4 color) {
    #if defined(USE_FOG)
    float a = color.a;
    float fog = clamp(FLWFogFactor(), 0., 1.);

    color = mix(uFogColor, color, fog);
    color.a = a;
    #endif

    if (color.a < 0.1) {
        discard;
    }

    fragColor = color;
}

vec4 FLWLight(vec2 lightCoords) {
    return vec4(1.);
}
#endif


float diffuse(vec3 normal) {
    vec3 n2 = normal * normal * vec3(.6, .25, .8);
    return min(n2.x + n2.y * (3. + normal.y) + n2.z, 1.);
}
struct Vertex {
    vec3 pos;
    vec2 texCoords;
    vec3 normal;
};

struct BlockFrag {
    vec2 texCoords;
    vec4 color;
    float diffuse;
    vec2 light;
};

#if defined(FRAGMENT_SHADER)
void fragment(BlockFrag r) {
    vec4 tex = FLWBlockTexture(r.texCoords);

    vec4 color = vec4(tex.rgb * FLWLight(r.light).rgb * r.diffuse, tex.a) * r.color;

    FLWFinalizeColor(color);
}
#endif




struct Instance {
    vec2 light;
    vec4 color;
    mat4 transform;
    mat3 normalMat;
};

#if defined(VERTEX_SHADER)
BlockFrag vertex(Vertex v, Instance i) {
    vec4 worldPos = i.transform * vec4(v.pos, 1.);

    vec3 norm = i.normalMat * v.normal;

    FLWFinalizeWorldPos(worldPos);
    FLWFinalizeNormal(norm);

    norm = normalize(norm);

    BlockFrag b;
    b.diffuse = diffuse(norm);
    b.texCoords = v.texCoords;
    b.light = i.light;
    #if defined(DEBUG_NORMAL)
    b.color = vec4(norm, 1.);
    #else
    b.color = i.color;
    #endif
    return b;
}
#endif

in vec3 a_v_pos;
in vec2 a_v_texCoords;
in vec3 a_v_normal;
in vec2 a_i_light;
in vec4 a_i_color;
in mat4 a_i_transform;
in mat3 a_i_normalMat;
out vec2 v2f_texCoords;
out vec4 v2f_color;
out float v2f_diffuse;
out vec2 v2f_light;
void main() {
Vertex v;
v.pos = a_v_pos;
v.texCoords = a_v_texCoords;
v.normal = a_v_normal;
Instance i;
i.light = a_i_light;
i.color = a_i_color;
i.transform = a_i_transform;
i.normalMat = a_i_normalMat;
BlockFrag o = vertex(v, i);
v2f_texCoords = o.texCoords;
v2f_color = o.color;
v2f_diffuse = o.diffuse;
v2f_light = o.light;
}
[16:19:41] [Render thread/ERROR]: Shader compilation log for flywheel:model: WARNING: 0:2: extension 'GL_ARB_conservative_depth' is not supported

[16:19:41] [Render thread/ERROR]: #version 150
#extension GL_ARB_conservative_depth : enable
#define FRAGMENT_SHADER
#define DEBUG_NORMAL
#if defined(VERTEX_SHADER)
out float FragDistance;
#elif defined(FRAGMENT_SHADER)
in float FragDistance;
#endif
uniform vec4 uFogColor;
uniform vec2 uFogRange;

float cylindrical_distance(vec3 worldPos, vec3 cameraPos) {
    float distXZ = length(worldPos.xz - cameraPos.xz);
    float distY = abs(worldPos.y - cameraPos.y);
    return max(distXZ, distY);
}

float cylindrical_distance(vec3 worldPos) {
    float distXZ = length(worldPos.xz);
    float distY = abs(worldPos.y);
    return max(distXZ, distY);
}

float FLWFogFactor() {
    return (uFogRange.y - FragDistance) / (uFogRange.y - uFogRange.x);
}


uniform float uTime;
uniform mat4 uViewProjection;
uniform vec3 uCameraPos;

uniform vec2 uTextureScale;
uniform sampler2D uBlockAtlas;
uniform sampler2D uLightMap;
uniform sampler2D uCrumbling;

uniform vec2 uWindowSize;

void FLWFinalizeNormal(inout vec3 normal) {
    // noop
}

#if defined(VERTEX_SHADER)
void FLWFinalizeWorldPos(inout vec4 worldPos) {
    #if defined(USE_FOG)
    FragDistance = cylindrical_distance(worldPos.xyz, uCameraPos);
    #endif

    gl_Position = uViewProjection * worldPos;
}

#elif defined(FRAGMENT_SHADER)

out vec4 fragColor;

vec4 FLWBlockTexture(vec2 texCoords) {
    vec4 cr = texture(uCrumbling, texCoords * uTextureScale);
    float diffuseAlpha = texture(uBlockAtlas, texCoords).a;
    cr.a = cr.a * diffuseAlpha;
    return cr;
}

void FLWFinalizeColor(vec4 color) {
    #if defined(USE_FOG)
    float a = color.a;
    float fog = clamp(FLWFogFactor(), 0., 1.);

    color = mix(uFogColor, color, fog);
    color.a = a;
    #endif

    if (color.a < 0.1) {
        discard;
    }

    fragColor = color;
}

vec4 FLWLight(vec2 lightCoords) {
    return vec4(1.);
}
#endif


float diffuse(vec3 normal) {
    vec3 n2 = normal * normal * vec3(.6, .25, .8);
    return min(n2.x + n2.y * (3. + normal.y) + n2.z, 1.);
}
struct Vertex {
    vec3 pos;
    vec2 texCoords;
    vec3 normal;
};

struct BlockFrag {
    vec2 texCoords;
    vec4 color;
    float diffuse;
    vec2 light;
};

#if defined(FRAGMENT_SHADER)
void fragment(BlockFrag r) {
    vec4 tex = FLWBlockTexture(r.texCoords);

    vec4 color = vec4(tex.rgb * FLWLight(r.light).rgb * r.diffuse, tex.a) * r.color;

    FLWFinalizeColor(color);
}
#endif




struct Instance {
    vec2 light;
    vec4 color;
    mat4 transform;
    mat3 normalMat;
};

#if defined(VERTEX_SHADER)
BlockFrag vertex(Vertex v, Instance i) {
    vec4 worldPos = i.transform * vec4(v.pos, 1.);

    vec3 norm = i.normalMat * v.normal;

    FLWFinalizeWorldPos(worldPos);
    FLWFinalizeNormal(norm);

    norm = normalize(norm);

    BlockFrag b;
    b.diffuse = diffuse(norm);
    b.texCoords = v.texCoords;
    b.light = i.light;
    #if defined(DEBUG_NORMAL)
    b.color = vec4(norm, 1.);
    #else
    b.color = i.color;
    #endif
    return b;
}
#endif

in vec2 v2f_texCoords;
in vec4 v2f_color;
in float v2f_diffuse;
in vec2 v2f_light;
void main() {
BlockFrag o;
o.texCoords = v2f_texCoords;
o.color = v2f_color;
o.diffuse = v2f_diffuse;
o.light = v2f_light;
fragment(o);
}
[16:19:41] [Render thread/ERROR]: Shader compilation log for create:rotating: WARNING: 0:2: extension 'GL_ARB_conservative_depth' is not supported

[16:19:41] [Render thread/ERROR]: #version 150
#extension GL_ARB_conservative_depth : enable
#define VERTEX_SHADER
#if defined(VERTEX_SHADER)
out float FragDistance;
#elif defined(FRAGMENT_SHADER)
in float FragDistance;
#endif
uniform vec4 uFogColor;
uniform vec2 uFogRange;

float cylindrical_distance(vec3 worldPos, vec3 cameraPos) {
    float distXZ = length(worldPos.xz - cameraPos.xz);
    float distY = abs(worldPos.y - cameraPos.y);
    return max(distXZ, distY);
}

float cylindrical_distance(vec3 worldPos) {
    float distXZ = length(worldPos.xz);
    float distY = abs(worldPos.y);
    return max(distXZ, distY);
}

float FLWFogFactor() {
    return (uFogRange.y - FragDistance) / (uFogRange.y - uFogRange.x);
}


uniform float uTime;
uniform mat4 uViewProjection;
uniform vec3 uCameraPos;

uniform vec2 uTextureScale;
uniform sampler2D uBlockAtlas;
uniform sampler2D uLightMap;
uniform sampler2D uCrumbling;

uniform vec2 uWindowSize;

void FLWFinalizeNormal(inout vec3 normal) {
    // noop
}

#if defined(VERTEX_SHADER)
void FLWFinalizeWorldPos(inout vec4 worldPos) {
    #if defined(USE_FOG)
    FragDistance = cylindrical_distance(worldPos.xyz, uCameraPos);
    #endif

    gl_Position = uViewProjection * worldPos;
}

#elif defined(FRAGMENT_SHADER)

out vec4 fragColor;

vec4 FLWBlockTexture(vec2 texCoords) {
    vec4 cr = texture(uCrumbling, texCoords * uTextureScale);
    float diffuseAlpha = texture(uBlockAtlas, texCoords).a;
    cr.a = cr.a * diffuseAlpha;
    return cr;
}

void FLWFinalizeColor(vec4 color) {
    #if defined(USE_FOG)
    float a = color.a;
    float fog = clamp(FLWFogFactor(), 0., 1.);

    color = mix(uFogColor, color, fog);
    color.a = a;
    #endif

    if (color.a < 0.1) {
        discard;
    }

    fragColor = color;
}

vec4 FLWLight(vec2 lightCoords) {
    return vec4(1.);
}
#endif


mat4 rotate(vec3 axis, float angle) {
    float s = sin(angle);
    float c = cos(angle);
    float oc = 1. - c;

    vec3 sa = axis * s;

    mat4 mr = mat4(1.);
    mr[0].xyz = oc * axis.xxz * axis.xyx + vec3(c, sa.z, -sa.y);
    mr[1].xyz = oc * axis.xyy * axis.yyz + vec3(-sa.z, c, sa.x);
    mr[2].xyz = oc * axis.zyz * axis.xzz + vec3(sa.y, -sa.x, c);

    return mr;
}

mat4 rotation(vec3 rot) {
    return rotate(vec3(0., 1., 0.), rot.y) * rotate(vec3(0., 0., 1.), rot.z) * rotate(vec3(1., 0., 0.), rot.x);
}

mat3 modelToNormal(mat4 mat) {
    // Discard the edges. This won't be accurate for scaled or skewed matrices,
    // but we don't have to work with those often.
    mat3 m;
    m[0] = mat[0].xyz;
    m[1] = mat[1].xyz;
    m[2] = mat[2].xyz;
    return m;
}

float diffuse(vec3 normal) {
    vec3 n2 = normal * normal * vec3(.6, .25, .8);
    return min(n2.x + n2.y * (3. + normal.y) + n2.z, 1.);
}
struct Vertex {
    vec3 pos;
    vec2 texCoords;
    vec3 normal;
};

struct BlockFrag {
    vec2 texCoords;
    vec4 color;
    float diffuse;
    vec2 light;
};

#if defined(FRAGMENT_SHADER)
void fragment(BlockFrag r) {
    vec4 tex = FLWBlockTexture(r.texCoords);

    vec4 color = vec4(tex.rgb * FLWLight(r.light).rgb * r.diffuse, tex.a) * r.color;

    FLWFinalizeColor(color);
}
#endif
#define PI 3.1415926538




struct Rotating {
    vec2 light;
    vec4 color;
    vec3 pos;
    float speed;
    float offset;
    vec3 axis;
};




mat4 kineticRotation(float offset, float speed, vec3 axis) {
    float degrees = offset + uTime * speed * 3./10.;
    float angle = fract(degrees / 360.) * PI * 2.;

    return rotate(axis, angle);
}

#if defined(VERTEX_SHADER)
BlockFrag vertex(Vertex v, Rotating instance) {
    mat4 spin = kineticRotation(instance.offset, instance.speed, instance.axis);

    vec4 worldPos = spin * vec4(v.pos - .5, 1.);
    worldPos += vec4(instance.pos + .5, 0.);

    vec3 norm = modelToNormal(spin) * v.normal;

    FLWFinalizeWorldPos(worldPos);
    FLWFinalizeNormal(norm);

    BlockFrag b;
    b.diffuse = diffuse(norm);
    b.texCoords = v.texCoords;
    b.light = instance.light;

    #if defined(DEBUG_RAINBOW)
    b.color = instance.color;
    #elif defined(DEBUG_NORMAL)
    b.color = vec4(norm, 1.);
    #else
    b.color = vec4(1.);
    #endif

    return b;
}
#endif

in vec3 a_v_pos;
in vec2 a_v_texCoords;
in vec3 a_v_normal;
in vec2 a_i_light;
in vec4 a_i_color;
in vec3 a_i_pos;
in float a_i_speed;
in float a_i_offset;
in vec3 a_i_axis;
out vec2 v2f_texCoords;
out vec4 v2f_color;
out float v2f_diffuse;
out vec2 v2f_light;
void main() {
Vertex v;
v.pos = a_v_pos;
v.texCoords = a_v_texCoords;
v.normal = a_v_normal;
Rotating i;
i.light = a_i_light;
i.color = a_i_color;
i.pos = a_i_pos;
i.speed = a_i_speed;
i.offset = a_i_offset;
i.axis = a_i_axis;
BlockFrag o = vertex(v, i);
v2f_texCoords = o.texCoords;
v2f_color = o.color;
v2f_diffuse = o.diffuse;
v2f_light = o.light;
}
[16:19:41] [Render thread/ERROR]: Shader compilation log for create:rotating: WARNING: 0:2: extension 'GL_ARB_conservative_depth' is not supported

[16:19:41] [Render thread/ERROR]: #version 150
#extension GL_ARB_conservative_depth : enable
#define FRAGMENT_SHADER
#if defined(VERTEX_SHADER)
out float FragDistance;
#elif defined(FRAGMENT_SHADER)
in float FragDistance;
#endif
uniform vec4 uFogColor;
uniform vec2 uFogRange;

float cylindrical_distance(vec3 worldPos, vec3 cameraPos) {
    float distXZ = length(worldPos.xz - cameraPos.xz);
    float distY = abs(worldPos.y - cameraPos.y);
    return max(distXZ, distY);
}

float cylindrical_distance(vec3 worldPos) {
    float distXZ = length(worldPos.xz);
    float distY = abs(worldPos.y);
    return max(distXZ, distY);
}

float FLWFogFactor() {
    return (uFogRange.y - FragDistance) / (uFogRange.y - uFogRange.x);
}


uniform float uTime;
uniform mat4 uViewProjection;
uniform vec3 uCameraPos;

uniform vec2 uTextureScale;
uniform sampler2D uBlockAtlas;
uniform sampler2D uLightMap;
uniform sampler2D uCrumbling;

uniform vec2 uWindowSize;

void FLWFinalizeNormal(inout vec3 normal) {
    // noop
}

#if defined(VERTEX_SHADER)
void FLWFinalizeWorldPos(inout vec4 worldPos) {
    #if defined(USE_FOG)
    FragDistance = cylindrical_distance(worldPos.xyz, uCameraPos);
    #endif

    gl_Position = uViewProjection * worldPos;
}

#elif defined(FRAGMENT_SHADER)

out vec4 fragColor;

vec4 FLWBlockTexture(vec2 texCoords) {
    vec4 cr = texture(uCrumbling, texCoords * uTextureScale);
    float diffuseAlpha = texture(uBlockAtlas, texCoords).a;
    cr.a = cr.a * diffuseAlpha;
    return cr;
}

void FLWFinalizeColor(vec4 color) {
    #if defined(USE_FOG)
    float a = color.a;
    float fog = clamp(FLWFogFactor(), 0., 1.);

    color = mix(uFogColor, color, fog);
    color.a = a;
    #endif

    if (color.a < 0.1) {
        discard;
    }

    fragColor = color;
}

vec4 FLWLight(vec2 lightCoords) {
    return vec4(1.);
}
#endif


mat4 rotate(vec3 axis, float angle) {
    float s = sin(angle);
    float c = cos(angle);
    float oc = 1. - c;

    vec3 sa = axis * s;

    mat4 mr = mat4(1.);
    mr[0].xyz = oc * axis.xxz * axis.xyx + vec3(c, sa.z, -sa.y);
    mr[1].xyz = oc * axis.xyy * axis.yyz + vec3(-sa.z, c, sa.x);
    mr[2].xyz = oc * axis.zyz * axis.xzz + vec3(sa.y, -sa.x, c);

    return mr;
}

mat4 rotation(vec3 rot) {
    return rotate(vec3(0., 1., 0.), rot.y) * rotate(vec3(0., 0., 1.), rot.z) * rotate(vec3(1., 0., 0.), rot.x);
}

mat3 modelToNormal(mat4 mat) {
    // Discard the edges. This won't be accurate for scaled or skewed matrices,
    // but we don't have to work with those often.
    mat3 m;
    m[0] = mat[0].xyz;
    m[1] = mat[1].xyz;
    m[2] = mat[2].xyz;
    return m;
}

float diffuse(vec3 normal) {
    vec3 n2 = normal * normal * vec3(.6, .25, .8);
    return min(n2.x + n2.y * (3. + normal.y) + n2.z, 1.);
}
struct Vertex {
    vec3 pos;
    vec2 texCoords;
    vec3 normal;
};

struct BlockFrag {
    vec2 texCoords;
    vec4 color;
    float diffuse;
    vec2 light;
};

#if defined(FRAGMENT_SHADER)
void fragment(BlockFrag r) {
    vec4 tex = FLWBlockTexture(r.texCoords);

    vec4 color = vec4(tex.rgb * FLWLight(r.light).rgb * r.diffuse, tex.a) * r.color;

    FLWFinalizeColor(color);
}
#endif
#define PI 3.1415926538




struct Rotating {
    vec2 light;
    vec4 color;
    vec3 pos;
    float speed;
    float offset;
    vec3 axis;
};




mat4 kineticRotation(float offset, float speed, vec3 axis) {
    float degrees = offset + uTime * speed * 3./10.;
    float angle = fract(degrees / 360.) * PI * 2.;

    return rotate(axis, angle);
}

#if defined(VERTEX_SHADER)
BlockFrag vertex(Vertex v, Rotating instance) {
    mat4 spin = kineticRotation(instance.offset, instance.speed, instance.axis);

    vec4 worldPos = spin * vec4(v.pos - .5, 1.);
    worldPos += vec4(instance.pos + .5, 0.);

    vec3 norm = modelToNormal(spin) * v.normal;

    FLWFinalizeWorldPos(worldPos);
    FLWFinalizeNormal(norm);

    BlockFrag b;
    b.diffuse = diffuse(norm);
    b.texCoords = v.texCoords;
    b.light = instance.light;

    #if defined(DEBUG_RAINBOW)
    b.color = instance.color;
    #elif defined(DEBUG_NORMAL)
    b.color = vec4(norm, 1.);
    #else
    b.color = vec4(1.);
    #endif

    return b;
}
#endif

in vec2 v2f_texCoords;
in vec4 v2f_color;
in float v2f_diffuse;
in vec2 v2f_light;
void main() {
BlockFrag o;
o.texCoords = v2f_texCoords;
o.color = v2f_color;
o.diffuse = v2f_diffuse;
o.light = v2f_light;
fragment(o);
}
[16:19:41] [Render thread/ERROR]: Shader compilation log for create:rotating: WARNING: 0:2: extension 'GL_ARB_conservative_depth' is not supported

[16:19:41] [Render thread/ERROR]: #version 150
#extension GL_ARB_conservative_depth : enable
#define VERTEX_SHADER
#define DEBUG_RAINBOW
#if defined(VERTEX_SHADER)
out float FragDistance;
#elif defined(FRAGMENT_SHADER)
in float FragDistance;
#endif
uniform vec4 uFogColor;
uniform vec2 uFogRange;

float cylindrical_distance(vec3 worldPos, vec3 cameraPos) {
    float distXZ = length(worldPos.xz - cameraPos.xz);
    float distY = abs(worldPos.y - cameraPos.y);
    return max(distXZ, distY);
}

float cylindrical_distance(vec3 worldPos) {
    float distXZ = length(worldPos.xz);
    float distY = abs(worldPos.y);
    return max(distXZ, distY);
}

float FLWFogFactor() {
    return (uFogRange.y - FragDistance) / (uFogRange.y - uFogRange.x);
}


uniform float uTime;
uniform mat4 uViewProjection;
uniform vec3 uCameraPos;

uniform vec2 uTextureScale;
uniform sampler2D uBlockAtlas;
uniform sampler2D uLightMap;
uniform sampler2D uCrumbling;

uniform vec2 uWindowSize;

void FLWFinalizeNormal(inout vec3 normal) {
    // noop
}

#if defined(VERTEX_SHADER)
void FLWFinalizeWorldPos(inout vec4 worldPos) {
    #if defined(USE_FOG)
    FragDistance = cylindrical_distance(worldPos.xyz, uCameraPos);
    #endif

    gl_Position = uViewProjection * worldPos;
}

#elif defined(FRAGMENT_SHADER)

out vec4 fragColor;

vec4 FLWBlockTexture(vec2 texCoords) {
    vec4 cr = texture(uCrumbling, texCoords * uTextureScale);
    float diffuseAlpha = texture(uBlockAtlas, texCoords).a;
    cr.a = cr.a * diffuseAlpha;
    return cr;
}

void FLWFinalizeColor(vec4 color) {
    #if defined(USE_FOG)
    float a = color.a;
    float fog = clamp(FLWFogFactor(), 0., 1.);

    color = mix(uFogColor, color, fog);
    color.a = a;
    #endif

    if (color.a < 0.1) {
        discard;
    }

    fragColor = color;
}

vec4 FLWLight(vec2 lightCoords) {
    return vec4(1.);
}
#endif


mat4 rotate(vec3 axis, float angle) {
    float s = sin(angle);
    float c = cos(angle);
    float oc = 1. - c;

    vec3 sa = axis * s;

    mat4 mr = mat4(1.);
    mr[0].xyz = oc * axis.xxz * axis.xyx + vec3(c, sa.z, -sa.y);
    mr[1].xyz = oc * axis.xyy * axis.yyz + vec3(-sa.z, c, sa.x);
    mr[2].xyz = oc * axis.zyz * axis.xzz + vec3(sa.y, -sa.x, c);

    return mr;
}

mat4 rotation(vec3 rot) {
    return rotate(vec3(0., 1., 0.), rot.y) * rotate(vec3(0., 0., 1.), rot.z) * rotate(vec3(1., 0., 0.), rot.x);
}

mat3 modelToNormal(mat4 mat) {
    // Discard the edges. This won't be accurate for scaled or skewed matrices,
    // but we don't have to work with those often.
    mat3 m;
    m[0] = mat[0].xyz;
    m[1] = mat[1].xyz;
    m[2] = mat[2].xyz;
    return m;
}

float diffuse(vec3 normal) {
    vec3 n2 = normal * normal * vec3(.6, .25, .8);
    return min(n2.x + n2.y * (3. + normal.y) + n2.z, 1.);
}
struct Vertex {
    vec3 pos;
    vec2 texCoords;
    vec3 normal;
};

struct BlockFrag {
    vec2 texCoords;
    vec4 color;
    float diffuse;
    vec2 light;
};

#if defined(FRAGMENT_SHADER)
void fragment(BlockFrag r) {
    vec4 tex = FLWBlockTexture(r.texCoords);

    vec4 color = vec4(tex.rgb * FLWLight(r.light).rgb * r.diffuse, tex.a) * r.color;

    FLWFinalizeColor(color);
}
#endif
#define PI 3.1415926538




struct Rotating {
    vec2 light;
    vec4 color;
    vec3 pos;
    float speed;
    float offset;
    vec3 axis;
};




mat4 kineticRotation(float offset, float speed, vec3 axis) {
    float degrees = offset + uTime * speed * 3./10.;
    float angle = fract(degrees / 360.) * PI * 2.;

    return rotate(axis, angle);
}

#if defined(VERTEX_SHADER)
BlockFrag vertex(Vertex v, Rotating instance) {
    mat4 spin = kineticRotation(instance.offset, instance.speed, instance.axis);

    vec4 worldPos = spin * vec4(v.pos - .5, 1.);
    worldPos += vec4(instance.pos + .5, 0.);

    vec3 norm = modelToNormal(spin) * v.normal;

    FLWFinalizeWorldPos(worldPos);
    FLWFinalizeNormal(norm);

    BlockFrag b;
    b.diffuse = diffuse(norm);
    b.texCoords = v.texCoords;
    b.light = instance.light;

    #if defined(DEBUG_RAINBOW)
    b.color = instance.color;
    #elif defined(DEBUG_NORMAL)
    b.color = vec4(norm, 1.);
    #else
    b.color = vec4(1.);
    #endif

    return b;
}
#endif

in vec3 a_v_pos;
in vec2 a_v_texCoords;
in vec3 a_v_normal;
in vec2 a_i_light;
in vec4 a_i_color;
in vec3 a_i_pos;
in float a_i_speed;
in float a_i_offset;
in vec3 a_i_axis;
out vec2 v2f_texCoords;
out vec4 v2f_color;
out float v2f_diffuse;
out vec2 v2f_light;
void main() {
Vertex v;
v.pos = a_v_pos;
v.texCoords = a_v_texCoords;
v.normal = a_v_normal;
Rotating i;
i.light = a_i_light;
i.color = a_i_color;
i.pos = a_i_pos;
i.speed = a_i_speed;
i.offset = a_i_offset;
i.axis = a_i_axis;
BlockFrag o = vertex(v, i);
v2f_texCoords = o.texCoords;
v2f_color = o.color;
v2f_diffuse = o.diffuse;
v2f_light = o.light;
}
[16:19:41] [Render thread/ERROR]: Shader compilation log for create:rotating: WARNING: 0:2: extension 'GL_ARB_conservative_depth' is not supported

[16:19:41] [Render thread/ERROR]: #version 150
#extension GL_ARB_conservative_depth : enable
#define FRAGMENT_SHADER
#define DEBUG_RAINBOW
#if defined(VERTEX_SHADER)
out float FragDistance;
#elif defined(FRAGMENT_SHADER)
in float FragDistance;
#endif
uniform vec4 uFogColor;
uniform vec2 uFogRange;

float cylindrical_distance(vec3 worldPos, vec3 cameraPos) {
    float distXZ = length(worldPos.xz - cameraPos.xz);
    float distY = abs(worldPos.y - cameraPos.y);
    return max(distXZ, distY);
}

float cylindrical_distance(vec3 worldPos) {
    float distXZ = length(worldPos.xz);
    float distY = abs(worldPos.y);
    return max(distXZ, distY);
}

float FLWFogFactor() {
    return (uFogRange.y - FragDistance) / (uFogRange.y - uFogRange.x);
}


uniform float uTime;
uniform mat4 uViewProjection;
uniform vec3 uCameraPos;

uniform vec2 uTextureScale;
uniform sampler2D uBlockAtlas;
uniform sampler2D uLightMap;
uniform sampler2D uCrumbling;

uniform vec2 uWindowSize;

void FLWFinalizeNormal(inout vec3 normal) {
    // noop
}

#if defined(VERTEX_SHADER)
void FLWFinalizeWorldPos(inout vec4 worldPos) {
    #if defined(USE_FOG)
    FragDistance = cylindrical_distance(worldPos.xyz, uCameraPos);
    #endif

    gl_Position = uViewProjection * worldPos;
}

#elif defined(FRAGMENT_SHADER)

out vec4 fragColor;

vec4 FLWBlockTexture(vec2 texCoords) {
    vec4 cr = texture(uCrumbling, texCoords * uTextureScale);
    float diffuseAlpha = texture(uBlockAtlas, texCoords).a;
    cr.a = cr.a * diffuseAlpha;
    return cr;
}

void FLWFinalizeColor(vec4 color) {
    #if defined(USE_FOG)
    float a = color.a;
    float fog = clamp(FLWFogFactor(), 0., 1.);

    color = mix(uFogColor, color, fog);
    color.a = a;
    #endif

    if (color.a < 0.1) {
        discard;
    }

    fragColor = color;
}

vec4 FLWLight(vec2 lightCoords) {
    return vec4(1.);
}
#endif


mat4 rotate(vec3 axis, float angle) {
    float s = sin(angle);
    float c = cos(angle);
    float oc = 1. - c;

    vec3 sa = axis * s;

    mat4 mr = mat4(1.);
    mr[0].xyz = oc * axis.xxz * axis.xyx + vec3(c, sa.z, -sa.y);
    mr[1].xyz = oc * axis.xyy * axis.yyz + vec3(-sa.z, c, sa.x);
    mr[2].xyz = oc * axis.zyz * axis.xzz + vec3(sa.y, -sa.x, c);

    return mr;
}

mat4 rotation(vec3 rot) {
    return rotate(vec3(0., 1., 0.), rot.y) * rotate(vec3(0., 0., 1.), rot.z) * rotate(vec3(1., 0., 0.), rot.x);
}

mat3 modelToNormal(mat4 mat) {
    // Discard the edges. This won't be accurate for scaled or skewed matrices,
    // but we don't have to work with those often.
    mat3 m;
    m[0] = mat[0].xyz;
    m[1] = mat[1].xyz;
    m[2] = mat[2].xyz;
    return m;
}

float diffuse(vec3 normal) {
    vec3 n2 = normal * normal * vec3(.6, .25, .8);
    return min(n2.x + n2.y * (3. + normal.y) + n2.z, 1.);
}
struct Vertex {
    vec3 pos;
    vec2 texCoords;
    vec3 normal;
};

struct BlockFrag {
    vec2 texCoords;
    vec4 color;
    float diffuse;
    vec2 light;
};

#if defined(FRAGMENT_SHADER)
void fragment(BlockFrag r) {
    vec4 tex = FLWBlockTexture(r.texCoords);

    vec4 color = vec4(tex.rgb * FLWLight(r.light).rgb * r.diffuse, tex.a) * r.color;

    FLWFinalizeColor(color);
}
#endif
#define PI 3.1415926538




struct Rotating {
    vec2 light;
    vec4 color;
    vec3 pos;
    float speed;
    float offset;
    vec3 axis;
};




mat4 kineticRotation(float offset, float speed, vec3 axis) {
    float degrees = offset + uTime * speed * 3./10.;
    float angle = fract(degrees / 360.) * PI * 2.;

    return rotate(axis, angle);
}

#if defined(VERTEX_SHADER)
BlockFrag vertex(Vertex v, Rotating instance) {
    mat4 spin = kineticRotation(instance.offset, instance.speed, instance.axis);

    vec4 worldPos = spin * vec4(v.pos - .5, 1.);
    worldPos += vec4(instance.pos + .5, 0.);

    vec3 norm = modelToNormal(spin) * v.normal;

    FLWFinalizeWorldPos(worldPos);
    FLWFinalizeNormal(norm);

    BlockFrag b;
    b.diffuse = diffuse(norm);
    b.texCoords = v.texCoords;
    b.light = instance.light;

    #if defined(DEBUG_RAINBOW)
    b.color = instance.color;
    #elif defined(DEBUG_NORMAL)
    b.color = vec4(norm, 1.);
    #else
    b.color = vec4(1.);
    #endif

    return b;
}
#endif

in vec2 v2f_texCoords;
in vec4 v2f_color;
in float v2f_diffuse;
in vec2 v2f_light;
void main() {
BlockFrag o;
o.texCoords = v2f_texCoords;
o.color = v2f_color;
o.diffuse = v2f_diffuse;
o.light = v2f_light;
fragment(o);
}
[16:19:41] [Render thread/ERROR]: Shader compilation log for create:rotating: WARNING: 0:2: extension 'GL_ARB_conservative_depth' is not supported

[16:19:41] [Render thread/ERROR]: #version 150
#extension GL_ARB_conservative_depth : enable
#define VERTEX_SHADER
#define DEBUG_NORMAL
#if defined(VERTEX_SHADER)
out float FragDistance;
#elif defined(FRAGMENT_SHADER)
in float FragDistance;
#endif
uniform vec4 uFogColor;
uniform vec2 uFogRange;

float cylindrical_distance(vec3 worldPos, vec3 cameraPos) {
    float distXZ = length(worldPos.xz - cameraPos.xz);
    float distY = abs(worldPos.y - cameraPos.y);
    return max(distXZ, distY);
}

float cylindrical_distance(vec3 worldPos) {
    float distXZ = length(worldPos.xz);
    float distY = abs(worldPos.y);
    return max(distXZ, distY);
}

float FLWFogFactor() {
    return (uFogRange.y - FragDistance) / (uFogRange.y - uFogRange.x);
}


uniform float uTime;
uniform mat4 uViewProjection;
uniform vec3 uCameraPos;

uniform vec2 uTextureScale;
uniform sampler2D uBlockAtlas;
uniform sampler2D uLightMap;
uniform sampler2D uCrumbling;

uniform vec2 uWindowSize;

void FLWFinalizeNormal(inout vec3 normal) {
    // noop
}

#if defined(VERTEX_SHADER)
void FLWFinalizeWorldPos(inout vec4 worldPos) {
    #if defined(USE_FOG)
    FragDistance = cylindrical_distance(worldPos.xyz, uCameraPos);
    #endif

    gl_Position = uViewProjection * worldPos;
}

#elif defined(FRAGMENT_SHADER)

out vec4 fragColor;

vec4 FLWBlockTexture(vec2 texCoords) {
    vec4 cr = texture(uCrumbling, texCoords * uTextureScale);
    float diffuseAlpha = texture(uBlockAtlas, texCoords).a;
    cr.a = cr.a * diffuseAlpha;
    return cr;
}

void FLWFinalizeColor(vec4 color) {
    #if defined(USE_FOG)
    float a = color.a;
    float fog = clamp(FLWFogFactor(), 0., 1.);

    color = mix(uFogColor, color, fog);
    color.a = a;
    #endif

    if (color.a < 0.1) {
        discard;
    }

    fragColor = color;
}

vec4 FLWLight(vec2 lightCoords) {
    return vec4(1.);
}
#endif


mat4 rotate(vec3 axis, float angle) {
    float s = sin(angle);
    float c = cos(angle);
    float oc = 1. - c;

    vec3 sa = axis * s;

    mat4 mr = mat4(1.);
    mr[0].xyz = oc * axis.xxz * axis.xyx + vec3(c, sa.z, -sa.y);
    mr[1].xyz = oc * axis.xyy * axis.yyz + vec3(-sa.z, c, sa.x);
    mr[2].xyz = oc * axis.zyz * axis.xzz + vec3(sa.y, -sa.x, c);

    return mr;
}

mat4 rotation(vec3 rot) {
    return rotate(vec3(0., 1., 0.), rot.y) * rotate(vec3(0., 0., 1.), rot.z) * rotate(vec3(1., 0., 0.), rot.x);
}

mat3 modelToNormal(mat4 mat) {
    // Discard the edges. This won't be accurate for scaled or skewed matrices,
    // but we don't have to work with those often.
    mat3 m;
    m[0] = mat[0].xyz;
    m[1] = mat[1].xyz;
    m[2] = mat[2].xyz;
    return m;
}

float diffuse(vec3 normal) {
    vec3 n2 = normal * normal * vec3(.6, .25, .8);
    return min(n2.x + n2.y * (3. + normal.y) + n2.z, 1.);
}
struct Vertex {
    vec3 pos;
    vec2 texCoords;
    vec3 normal;
};

struct BlockFrag {
    vec2 texCoords;
    vec4 color;
    float diffuse;
    vec2 light;
};

#if defined(FRAGMENT_SHADER)
void fragment(BlockFrag r) {
    vec4 tex = FLWBlockTexture(r.texCoords);

    vec4 color = vec4(tex.rgb * FLWLight(r.light).rgb * r.diffuse, tex.a) * r.color;

    FLWFinalizeColor(color);
}
#endif
#define PI 3.1415926538




struct Rotating {
    vec2 light;
    vec4 color;
    vec3 pos;
    float speed;
    float offset;
    vec3 axis;
};




mat4 kineticRotation(float offset, float speed, vec3 axis) {
    float degrees = offset + uTime * speed * 3./10.;
    float angle = fract(degrees / 360.) * PI * 2.;

    return rotate(axis, angle);
}

#if defined(VERTEX_SHADER)
BlockFrag vertex(Vertex v, Rotating instance) {
    mat4 spin = kineticRotation(instance.offset, instance.speed, instance.axis);

    vec4 worldPos = spin * vec4(v.pos - .5, 1.);
    worldPos += vec4(instance.pos + .5, 0.);

    vec3 norm = modelToNormal(spin) * v.normal;

    FLWFinalizeWorldPos(worldPos);
    FLWFinalizeNormal(norm);

    BlockFrag b;
    b.diffuse = diffuse(norm);
    b.texCoords = v.texCoords;
    b.light = instance.light;

    #if defined(DEBUG_RAINBOW)
    b.color = instance.color;
    #elif defined(DEBUG_NORMAL)
    b.color = vec4(norm, 1.);
    #else
    b.color = vec4(1.);
    #endif

    return b;
}
#endif

in vec3 a_v_pos;
in vec2 a_v_texCoords;
in vec3 a_v_normal;
in vec2 a_i_light;
in vec4 a_i_color;
in vec3 a_i_pos;
in float a_i_speed;
in float a_i_offset;
in vec3 a_i_axis;
out vec2 v2f_texCoords;
out vec4 v2f_color;
out float v2f_diffuse;
out vec2 v2f_light;
void main() {
Vertex v;
v.pos = a_v_pos;
v.texCoords = a_v_texCoords;
v.normal = a_v_normal;
Rotating i;
i.light = a_i_light;
i.color = a_i_color;
i.pos = a_i_pos;
i.speed = a_i_speed;
i.offset = a_i_offset;
i.axis = a_i_axis;
BlockFrag o = vertex(v, i);
v2f_texCoords = o.texCoords;
v2f_color = o.color;
v2f_diffuse = o.diffuse;
v2f_light = o.light;
}
[16:19:41] [Render thread/ERROR]: Shader compilation log for create:rotating: WARNING: 0:2: extension 'GL_ARB_conservative_depth' is not supported

[16:19:41] [Render thread/ERROR]: #version 150
#extension GL_ARB_conservative_depth : enable
#define FRAGMENT_SHADER
#define DEBUG_NORMAL
#if defined(VERTEX_SHADER)
out float FragDistance;
#elif defined(FRAGMENT_SHADER)
in float FragDistance;
#endif
uniform vec4 uFogColor;
uniform vec2 uFogRange;

float cylindrical_distance(vec3 worldPos, vec3 cameraPos) {
    float distXZ = length(worldPos.xz - cameraPos.xz);
    float distY = abs(worldPos.y - cameraPos.y);
    return max(distXZ, distY);
}

float cylindrical_distance(vec3 worldPos) {
    float distXZ = length(worldPos.xz);
    float distY = abs(worldPos.y);
    return max(distXZ, distY);
}

float FLWFogFactor() {
    return (uFogRange.y - FragDistance) / (uFogRange.y - uFogRange.x);
}


uniform float uTime;
uniform mat4 uViewProjection;
uniform vec3 uCameraPos;

uniform vec2 uTextureScale;
uniform sampler2D uBlockAtlas;
uniform sampler2D uLightMap;
uniform sampler2D uCrumbling;

uniform vec2 uWindowSize;

void FLWFinalizeNormal(inout vec3 normal) {
    // noop
}

#if defined(VERTEX_SHADER)
void FLWFinalizeWorldPos(inout vec4 worldPos) {
    #if defined(USE_FOG)
    FragDistance = cylindrical_distance(worldPos.xyz, uCameraPos);
    #endif

    gl_Position = uViewProjection * worldPos;
}

#elif defined(FRAGMENT_SHADER)

out vec4 fragColor;

vec4 FLWBlockTexture(vec2 texCoords) {
    vec4 cr = texture(uCrumbling, texCoords * uTextureScale);
    float diffuseAlpha = texture(uBlockAtlas, texCoords).a;
    cr.a = cr.a * diffuseAlpha;
    return cr;
}

void FLWFinalizeColor(vec4 color) {
    #if defined(USE_FOG)
    float a = color.a;
    float fog = clamp(FLWFogFactor(), 0., 1.);

    color = mix(uFogColor, color, fog);
    color.a = a;
    #endif

    if (color.a < 0.1) {
        discard;
    }

    fragColor = color;
}

vec4 FLWLight(vec2 lightCoords) {
    return vec4(1.);
}
#endif


mat4 rotate(vec3 axis, float angle) {
    float s = sin(angle);
    float c = cos(angle);
    float oc = 1. - c;

    vec3 sa = axis * s;

    mat4 mr = mat4(1.);
    mr[0].xyz = oc * axis.xxz * axis.xyx + vec3(c, sa.z, -sa.y);
    mr[1].xyz = oc * axis.xyy * axis.yyz + vec3(-sa.z, c, sa.x);
    mr[2].xyz = oc * axis.zyz * axis.xzz + vec3(sa.y, -sa.x, c);

    return mr;
}

mat4 rotation(vec3 rot) {
    return rotate(vec3(0., 1., 0.), rot.y) * rotate(vec3(0., 0., 1.), rot.z) * rotate(vec3(1., 0., 0.), rot.x);
}

mat3 modelToNormal(mat4 mat) {
    // Discard the edges. This won't be accurate for scaled or skewed matrices,
    // but we don't have to work with those often.
    mat3 m;
    m[0] = mat[0].xyz;
    m[1] = mat[1].xyz;
    m[2] = mat[2].xyz;
    return m;
}

float diffuse(vec3 normal) {
    vec3 n2 = normal * normal * vec3(.6, .25, .8);
    return min(n2.x + n2.y * (3. + normal.y) + n2.z, 1.);
}
struct Vertex {
    vec3 pos;
    vec2 texCoords;
    vec3 normal;
};

struct BlockFrag {
    vec2 texCoords;
    vec4 color;
    float diffuse;
    vec2 light;
};

#if defined(FRAGMENT_SHADER)
void fragment(BlockFrag r) {
    vec4 tex = FLWBlockTexture(r.texCoords);

    vec4 color = vec4(tex.rgb * FLWLight(r.light).rgb * r.diffuse, tex.a) * r.color;

    FLWFinalizeColor(color);
}
#endif
#define PI 3.1415926538




struct Rotating {
    vec2 light;
    vec4 color;
    vec3 pos;
    float speed;
    float offset;
    vec3 axis;
};




mat4 kineticRotation(float offset, float speed, vec3 axis) {
    float degrees = offset + uTime * speed * 3./10.;
    float angle = fract(degrees / 360.) * PI * 2.;

    return rotate(axis, angle);
}

#if defined(VERTEX_SHADER)
BlockFrag vertex(Vertex v, Rotating instance) {
    mat4 spin = kineticRotation(instance.offset, instance.speed, instance.axis);

    vec4 worldPos = spin * vec4(v.pos - .5, 1.);
    worldPos += vec4(instance.pos + .5, 0.);

    vec3 norm = modelToNormal(spin) * v.normal;

    FLWFinalizeWorldPos(worldPos);
    FLWFinalizeNormal(norm);

    BlockFrag b;
    b.diffuse = diffuse(norm);
    b.texCoords = v.texCoords;
    b.light = instance.light;

    #if defined(DEBUG_RAINBOW)
    b.color = instance.color;
    #elif defined(DEBUG_NORMAL)
    b.color = vec4(norm, 1.);
    #else
    b.color = vec4(1.);
    #endif

    return b;
}
#endif

in vec2 v2f_texCoords;
in vec4 v2f_color;
in float v2f_diffuse;
in vec2 v2f_light;
void main() {
BlockFrag o;
o.texCoords = v2f_texCoords;
o.color = v2f_color;
o.diffuse = v2f_diffuse;
o.light = v2f_light;
fragment(o);
}
[16:19:41] [Render thread/ERROR]: Shader compilation log for flywheel:oriented: WARNING: 0:2: extension 'GL_ARB_conservative_depth' is not supported

[16:19:41] [Render thread/ERROR]: #version 150
#extension GL_ARB_conservative_depth : enable
#define VERTEX_SHADER
#if defined(VERTEX_SHADER)
out float FragDistance;
#elif defined(FRAGMENT_SHADER)
in float FragDistance;
#endif
uniform vec4 uFogColor;
uniform vec2 uFogRange;

float cylindrical_distance(vec3 worldPos, vec3 cameraPos) {
    float distXZ = length(worldPos.xz - cameraPos.xz);
    float distY = abs(worldPos.y - cameraPos.y);
    return max(distXZ, distY);
}

float cylindrical_distance(vec3 worldPos) {
    float distXZ = length(worldPos.xz);
    float distY = abs(worldPos.y);
    return max(distXZ, distY);
}

float FLWFogFactor() {
    return (uFogRange.y - FragDistance) / (uFogRange.y - uFogRange.x);
}


uniform float uTime;
uniform mat4 uViewProjection;
uniform vec3 uCameraPos;

uniform vec2 uTextureScale;
uniform sampler2D uBlockAtlas;
uniform sampler2D uLightMap;
uniform sampler2D uCrumbling;

uniform vec2 uWindowSize;

void FLWFinalizeNormal(inout vec3 normal) {
    // noop
}

#if defined(VERTEX_SHADER)
void FLWFinalizeWorldPos(inout vec4 worldPos) {
    #if defined(USE_FOG)
    FragDistance = cylindrical_distance(worldPos.xyz, uCameraPos);
    #endif

    gl_Position = uViewProjection * worldPos;
}

#elif defined(FRAGMENT_SHADER)

out vec4 fragColor;

vec4 FLWBlockTexture(vec2 texCoords) {
    vec4 cr = texture(uCrumbling, texCoords * uTextureScale);
    float diffuseAlpha = texture(uBlockAtlas, texCoords).a;
    cr.a = cr.a * diffuseAlpha;
    return cr;
}

void FLWFinalizeColor(vec4 color) {
    #if defined(USE_FOG)
    float a = color.a;
    float fog = clamp(FLWFogFactor(), 0., 1.);

    color = mix(uFogColor, color, fog);
    color.a = a;
    #endif

    if (color.a < 0.1) {
        discard;
    }

    fragColor = color;
}

vec4 FLWLight(vec2 lightCoords) {
    return vec4(1.);
}
#endif


#define PIOVER2 1.5707963268

vec4 quat(vec3 axis, float angle) {
    float halfAngle = angle * PIOVER2 / 180.0;
    vec2 cs = sin(vec2(PIOVER2 - halfAngle, halfAngle)); // compute sin and cos in one instruction
    return vec4(axis.xyz * cs.y,  cs.x);
}

vec4 quatMult(vec4 q1, vec4 q2) {
    // disgustingly vectorized quaternion multiplication
    vec4 a = q1.w * q2.xyzw;
    vec4 b = q1.x * q2.wzxy * vec4(1., -1., 1., -1.);
    vec4 c = q1.y * q2.zwxy * vec4(1., 1., -1., -1.);
    vec4 d = q1.z * q2.yxwz * vec4(-1., 1., 1., -1.);

    return a + b + c + d;
}

vec3 rotateVertexByQuat(vec3 v, vec4 q) {
    vec3 i = q.xyz;
    return v + 2.0 * cross(i, cross(i, v) + q.w * v);
}

vec3 rotateAbout(vec3 v, vec3 axis, float angle) {
    return rotateVertexByQuat(v, quat(axis, angle));
}

float diffuse(vec3 normal) {
    vec3 n2 = normal * normal * vec3(.6, .25, .8);
    return min(n2.x + n2.y * (3. + normal.y) + n2.z, 1.);
}
struct Vertex {
    vec3 pos;
    vec2 texCoords;
    vec3 normal;
};

struct BlockFrag {
    vec2 texCoords;
    vec4 color;
    float diffuse;
    vec2 light;
};

#if defined(FRAGMENT_SHADER)
void fragment(BlockFrag r) {
    vec4 tex = FLWBlockTexture(r.texCoords);

    vec4 color = vec4(tex.rgb * FLWLight(r.light).rgb * r.diffuse, tex.a) * r.color;

    FLWFinalizeColor(color);
}
#endif






struct Oriented {
    vec2 light;
    vec4 color;
    vec3 pos;
    vec3 pivot;
    vec4 rotation;
};

#if defined(VERTEX_SHADER)
BlockFrag vertex(Vertex v, Oriented o) {
    vec4 worldPos = vec4(rotateVertexByQuat(v.pos - o.pivot, o.rotation) + o.pivot + o.pos, 1.);

    vec3 norm = rotateVertexByQuat(v.normal, o.rotation);

    FLWFinalizeWorldPos(worldPos);
    FLWFinalizeNormal(norm);

    BlockFrag b;
    b.diffuse = diffuse(norm);
    b.texCoords = v.texCoords;
    b.light = o.light;
    #if defined(DEBUG_NORMAL)
    b.color = vec4(norm, 1.);
    #else
    b.color = o.color;
    #endif
    return b;
}
#endif

in vec3 a_v_pos;
in vec2 a_v_texCoords;
in vec3 a_v_normal;
in vec2 a_i_light;
in vec4 a_i_color;
in vec3 a_i_pos;
in vec3 a_i_pivot;
in vec4 a_i_rotation;
out vec2 v2f_texCoords;
out vec4 v2f_color;
out float v2f_diffuse;
out vec2 v2f_light;
void main() {
Vertex v;
v.pos = a_v_pos;
v.texCoords = a_v_texCoords;
v.normal = a_v_normal;
Oriented i;
i.light = a_i_light;
i.color = a_i_color;
i.pos = a_i_pos;
i.pivot = a_i_pivot;
i.rotation = a_i_rotation;
BlockFrag o = vertex(v, i);
v2f_texCoords = o.texCoords;
v2f_color = o.color;
v2f_diffuse = o.diffuse;
v2f_light = o.light;
}
[16:19:41] [Render thread/ERROR]: Shader compilation log for flywheel:oriented: WARNING: 0:2: extension 'GL_ARB_conservative_depth' is not supported

[16:19:41] [Render thread/ERROR]: #version 150
#extension GL_ARB_conservative_depth : enable
#define FRAGMENT_SHADER
#if defined(VERTEX_SHADER)
out float FragDistance;
#elif defined(FRAGMENT_SHADER)
in float FragDistance;
#endif
uniform vec4 uFogColor;
uniform vec2 uFogRange;

float cylindrical_distance(vec3 worldPos, vec3 cameraPos) {
    float distXZ = length(worldPos.xz - cameraPos.xz);
    float distY = abs(worldPos.y - cameraPos.y);
    return max(distXZ, distY);
}

float cylindrical_distance(vec3 worldPos) {
    float distXZ = length(worldPos.xz);
    float distY = abs(worldPos.y);
    return max(distXZ, distY);
}

float FLWFogFactor() {
    return (uFogRange.y - FragDistance) / (uFogRange.y - uFogRange.x);
}


uniform float uTime;
uniform mat4 uViewProjection;
uniform vec3 uCameraPos;

uniform vec2 uTextureScale;
uniform sampler2D uBlockAtlas;
uniform sampler2D uLightMap;
uniform sampler2D uCrumbling;

uniform vec2 uWindowSize;

void FLWFinalizeNormal(inout vec3 normal) {
    // noop
}

#if defined(VERTEX_SHADER)
void FLWFinalizeWorldPos(inout vec4 worldPos) {
    #if defined(USE_FOG)
    FragDistance = cylindrical_distance(worldPos.xyz, uCameraPos);
    #endif

    gl_Position = uViewProjection * worldPos;
}

#elif defined(FRAGMENT_SHADER)

out vec4 fragColor;

vec4 FLWBlockTexture(vec2 texCoords) {
    vec4 cr = texture(uCrumbling, texCoords * uTextureScale);
    float diffuseAlpha = texture(uBlockAtlas, texCoords).a;
    cr.a = cr.a * diffuseAlpha;
    return cr;
}

void FLWFinalizeColor(vec4 color) {
    #if defined(USE_FOG)
    float a = color.a;
    float fog = clamp(FLWFogFactor(), 0., 1.);

    color = mix(uFogColor, color, fog);
    color.a = a;
    #endif

    if (color.a < 0.1) {
        discard;
    }

    fragColor = color;
}

vec4 FLWLight(vec2 lightCoords) {
    return vec4(1.);
}
#endif


#define PIOVER2 1.5707963268

vec4 quat(vec3 axis, float angle) {
    float halfAngle = angle * PIOVER2 / 180.0;
    vec2 cs = sin(vec2(PIOVER2 - halfAngle, halfAngle)); // compute sin and cos in one instruction
    return vec4(axis.xyz * cs.y,  cs.x);
}

vec4 quatMult(vec4 q1, vec4 q2) {
    // disgustingly vectorized quaternion multiplication
    vec4 a = q1.w * q2.xyzw;
    vec4 b = q1.x * q2.wzxy * vec4(1., -1., 1., -1.);
    vec4 c = q1.y * q2.zwxy * vec4(1., 1., -1., -1.);
    vec4 d = q1.z * q2.yxwz * vec4(-1., 1., 1., -1.);

    return a + b + c + d;
}

vec3 rotateVertexByQuat(vec3 v, vec4 q) {
    vec3 i = q.xyz;
    return v + 2.0 * cross(i, cross(i, v) + q.w * v);
}

vec3 rotateAbout(vec3 v, vec3 axis, float angle) {
    return rotateVertexByQuat(v, quat(axis, angle));
}

float diffuse(vec3 normal) {
    vec3 n2 = normal * normal * vec3(.6, .25, .8);
    return min(n2.x + n2.y * (3. + normal.y) + n2.z, 1.);
}
struct Vertex {
    vec3 pos;
    vec2 texCoords;
    vec3 normal;
};

struct BlockFrag {
    vec2 texCoords;
    vec4 color;
    float diffuse;
    vec2 light;
};

#if defined(FRAGMENT_SHADER)
void fragment(BlockFrag r) {
    vec4 tex = FLWBlockTexture(r.texCoords);

    vec4 color = vec4(tex.rgb * FLWLight(r.light).rgb * r.diffuse, tex.a) * r.color;

    FLWFinalizeColor(color);
}
#endif






struct Oriented {
    vec2 light;
    vec4 color;
    vec3 pos;
    vec3 pivot;
    vec4 rotation;
};

#if defined(VERTEX_SHADER)
BlockFrag vertex(Vertex v, Oriented o) {
    vec4 worldPos = vec4(rotateVertexByQuat(v.pos - o.pivot, o.rotation) + o.pivot + o.pos, 1.);

    vec3 norm = rotateVertexByQuat(v.normal, o.rotation);

    FLWFinalizeWorldPos(worldPos);
    FLWFinalizeNormal(norm);

    BlockFrag b;
    b.diffuse = diffuse(norm);
    b.texCoords = v.texCoords;
    b.light = o.light;
    #if defined(DEBUG_NORMAL)
    b.color = vec4(norm, 1.);
    #else
    b.color = o.color;
    #endif
    return b;
}
#endif

in vec2 v2f_texCoords;
in vec4 v2f_color;
in float v2f_diffuse;
in vec2 v2f_light;
void main() {
BlockFrag o;
o.texCoords = v2f_texCoords;
o.color = v2f_color;
o.diffuse = v2f_diffuse;
o.light = v2f_light;
fragment(o);
}
[16:19:41] [Render thread/ERROR]: Shader compilation log for flywheel:oriented: WARNING: 0:2: extension 'GL_ARB_conservative_depth' is not supported

[16:19:41] [Render thread/ERROR]: #version 150
#extension GL_ARB_conservative_depth : enable
#define VERTEX_SHADER
#define DEBUG_NORMAL
#if defined(VERTEX_SHADER)
out float FragDistance;
#elif defined(FRAGMENT_SHADER)
in float FragDistance;
#endif
uniform vec4 uFogColor;
uniform vec2 uFogRange;

float cylindrical_distance(vec3 worldPos, vec3 cameraPos) {
    float distXZ = length(worldPos.xz - cameraPos.xz);
    float distY = abs(worldPos.y - cameraPos.y);
    return max(distXZ, distY);
}

float cylindrical_distance(vec3 worldPos) {
    float distXZ = length(worldPos.xz);
    float distY = abs(worldPos.y);
    return max(distXZ, distY);
}

float FLWFogFactor() {
    return (uFogRange.y - FragDistance) / (uFogRange.y - uFogRange.x);
}


uniform float uTime;
uniform mat4 uViewProjection;
uniform vec3 uCameraPos;

uniform vec2 uTextureScale;
uniform sampler2D uBlockAtlas;
uniform sampler2D uLightMap;
uniform sampler2D uCrumbling;

uniform vec2 uWindowSize;

void FLWFinalizeNormal(inout vec3 normal) {
    // noop
}

#if defined(VERTEX_SHADER)
void FLWFinalizeWorldPos(inout vec4 worldPos) {
    #if defined(USE_FOG)
    FragDistance = cylindrical_distance(worldPos.xyz, uCameraPos);
    #endif

    gl_Position = uViewProjection * worldPos;
}

#elif defined(FRAGMENT_SHADER)

out vec4 fragColor;

vec4 FLWBlockTexture(vec2 texCoords) {
    vec4 cr = texture(uCrumbling, texCoords * uTextureScale);
    float diffuseAlpha = texture(uBlockAtlas, texCoords).a;
    cr.a = cr.a * diffuseAlpha;
    return cr;
}

void FLWFinalizeColor(vec4 color) {
    #if defined(USE_FOG)
    float a = color.a;
    float fog = clamp(FLWFogFactor(), 0., 1.);

    color = mix(uFogColor, color, fog);
    color.a = a;
    #endif

    if (color.a < 0.1) {
        discard;
    }

    fragColor = color;
}

vec4 FLWLight(vec2 lightCoords) {
    return vec4(1.);
}
#endif


#define PIOVER2 1.5707963268

vec4 quat(vec3 axis, float angle) {
    float halfAngle = angle * PIOVER2 / 180.0;
    vec2 cs = sin(vec2(PIOVER2 - halfAngle, halfAngle)); // compute sin and cos in one instruction
    return vec4(axis.xyz * cs.y,  cs.x);
}

vec4 quatMult(vec4 q1, vec4 q2) {
    // disgustingly vectorized quaternion multiplication
    vec4 a = q1.w * q2.xyzw;
    vec4 b = q1.x * q2.wzxy * vec4(1., -1., 1., -1.);
    vec4 c = q1.y * q2.zwxy * vec4(1., 1., -1., -1.);
    vec4 d = q1.z * q2.yxwz * vec4(-1., 1., 1., -1.);

    return a + b + c + d;
}

vec3 rotateVertexByQuat(vec3 v, vec4 q) {
    vec3 i = q.xyz;
    return v + 2.0 * cross(i, cross(i, v) + q.w * v);
}

vec3 rotateAbout(vec3 v, vec3 axis, float angle) {
    return rotateVertexByQuat(v, quat(axis, angle));
}

float diffuse(vec3 normal) {
    vec3 n2 = normal * normal * vec3(.6, .25, .8);
    return min(n2.x + n2.y * (3. + normal.y) + n2.z, 1.);
}
struct Vertex {
    vec3 pos;
    vec2 texCoords;
    vec3 normal;
};

struct BlockFrag {
    vec2 texCoords;
    vec4 color;
    float diffuse;
    vec2 light;
};

#if defined(FRAGMENT_SHADER)
void fragment(BlockFrag r) {
    vec4 tex = FLWBlockTexture(r.texCoords);

    vec4 color = vec4(tex.rgb * FLWLight(r.light).rgb * r.diffuse, tex.a) * r.color;

    FLWFinalizeColor(color);
}
#endif






struct Oriented {
    vec2 light;
    vec4 color;
    vec3 pos;
    vec3 pivot;
    vec4 rotation;
};

#if defined(VERTEX_SHADER)
BlockFrag vertex(Vertex v, Oriented o) {
    vec4 worldPos = vec4(rotateVertexByQuat(v.pos - o.pivot, o.rotation) + o.pivot + o.pos, 1.);

    vec3 norm = rotateVertexByQuat(v.normal, o.rotation);

    FLWFinalizeWorldPos(worldPos);
    FLWFinalizeNormal(norm);

    BlockFrag b;
    b.diffuse = diffuse(norm);
    b.texCoords = v.texCoords;
    b.light = o.light;
    #if defined(DEBUG_NORMAL)
    b.color = vec4(norm, 1.);
    #else
    b.color = o.color;
    #endif
    return b;
}
#endif

in vec3 a_v_pos;
in vec2 a_v_texCoords;
in vec3 a_v_normal;
in vec2 a_i_light;
in vec4 a_i_color;
in vec3 a_i_pos;
in vec3 a_i_pivot;
in vec4 a_i_rotation;
out vec2 v2f_texCoords;
out vec4 v2f_color;
out float v2f_diffuse;
out vec2 v2f_light;
void main() {
Vertex v;
v.pos = a_v_pos;
v.texCoords = a_v_texCoords;
v.normal = a_v_normal;
Oriented i;
i.light = a_i_light;
i.color = a_i_color;
i.pos = a_i_pos;
i.pivot = a_i_pivot;
i.rotation = a_i_rotation;
BlockFrag o = vertex(v, i);
v2f_texCoords = o.texCoords;
v2f_color = o.color;
v2f_diffuse = o.diffuse;
v2f_light = o.light;
}
[16:19:41] [Render thread/ERROR]: Shader compilation log for flywheel:oriented: WARNING: 0:2: extension 'GL_ARB_conservative_depth' is not supported

[16:19:41] [Render thread/ERROR]: #version 150
#extension GL_ARB_conservative_depth : enable
#define FRAGMENT_SHADER
#define DEBUG_NORMAL
#if defined(VERTEX_SHADER)
out float FragDistance;
#elif defined(FRAGMENT_SHADER)
in float FragDistance;
#endif
uniform vec4 uFogColor;
uniform vec2 uFogRange;

float cylindrical_distance(vec3 worldPos, vec3 cameraPos) {
    float distXZ = length(worldPos.xz - cameraPos.xz);
    float distY = abs(worldPos.y - cameraPos.y);
    return max(distXZ, distY);
}

float cylindrical_distance(vec3 worldPos) {
    float distXZ = length(worldPos.xz);
    float distY = abs(worldPos.y);
    return max(distXZ, distY);
}

float FLWFogFactor() {
    return (uFogRange.y - FragDistance) / (uFogRange.y - uFogRange.x);
}


uniform float uTime;
uniform mat4 uViewProjection;
uniform vec3 uCameraPos;

uniform vec2 uTextureScale;
uniform sampler2D uBlockAtlas;
uniform sampler2D uLightMap;
uniform sampler2D uCrumbling;

uniform vec2 uWindowSize;

void FLWFinalizeNormal(inout vec3 normal) {
    // noop
}

#if defined(VERTEX_SHADER)
void FLWFinalizeWorldPos(inout vec4 worldPos) {
    #if defined(USE_FOG)
    FragDistance = cylindrical_distance(worldPos.xyz, uCameraPos);
    #endif

    gl_Position = uViewProjection * worldPos;
}

#elif defined(FRAGMENT_SHADER)

out vec4 fragColor;

vec4 FLWBlockTexture(vec2 texCoords) {
    vec4 cr = texture(uCrumbling, texCoords * uTextureScale);
    float diffuseAlpha = texture(uBlockAtlas, texCoords).a;
    cr.a = cr.a * diffuseAlpha;
    return cr;
}

void FLWFinalizeColor(vec4 color) {
    #if defined(USE_FOG)
    float a = color.a;
    float fog = clamp(FLWFogFactor(), 0., 1.);

    color = mix(uFogColor, color, fog);
    color.a = a;
    #endif

    if (color.a < 0.1) {
        discard;
    }

    fragColor = color;
}

vec4 FLWLight(vec2 lightCoords) {
    return vec4(1.);
}
#endif


#define PIOVER2 1.5707963268

vec4 quat(vec3 axis, float angle) {
    float halfAngle = angle * PIOVER2 / 180.0;
    vec2 cs = sin(vec2(PIOVER2 - halfAngle, halfAngle)); // compute sin and cos in one instruction
    return vec4(axis.xyz * cs.y,  cs.x);
}

vec4 quatMult(vec4 q1, vec4 q2) {
    // disgustingly vectorized quaternion multiplication
    vec4 a = q1.w * q2.xyzw;
    vec4 b = q1.x * q2.wzxy * vec4(1., -1., 1., -1.);
    vec4 c = q1.y * q2.zwxy * vec4(1., 1., -1., -1.);
    vec4 d = q1.z * q2.yxwz * vec4(-1., 1., 1., -1.);

    return a + b + c + d;
}

vec3 rotateVertexByQuat(vec3 v, vec4 q) {
    vec3 i = q.xyz;
    return v + 2.0 * cross(i, cross(i, v) + q.w * v);
}

vec3 rotateAbout(vec3 v, vec3 axis, float angle) {
    return rotateVertexByQuat(v, quat(axis, angle));
}

float diffuse(vec3 normal) {
    vec3 n2 = normal * normal * vec3(.6, .25, .8);
    return min(n2.x + n2.y * (3. + normal.y) + n2.z, 1.);
}
struct Vertex {
    vec3 pos;
    vec2 texCoords;
    vec3 normal;
};

struct BlockFrag {
    vec2 texCoords;
    vec4 color;
    float diffuse;
    vec2 light;
};

#if defined(FRAGMENT_SHADER)
void fragment(BlockFrag r) {
    vec4 tex = FLWBlockTexture(r.texCoords);

    vec4 color = vec4(tex.rgb * FLWLight(r.light).rgb * r.diffuse, tex.a) * r.color;

    FLWFinalizeColor(color);
}
#endif






struct Oriented {
    vec2 light;
    vec4 color;
    vec3 pos;
    vec3 pivot;
    vec4 rotation;
};

#if defined(VERTEX_SHADER)
BlockFrag vertex(Vertex v, Oriented o) {
    vec4 worldPos = vec4(rotateVertexByQuat(v.pos - o.pivot, o.rotation) + o.pivot + o.pos, 1.);

    vec3 norm = rotateVertexByQuat(v.normal, o.rotation);

    FLWFinalizeWorldPos(worldPos);
    FLWFinalizeNormal(norm);

    BlockFrag b;
    b.diffuse = diffuse(norm);
    b.texCoords = v.texCoords;
    b.light = o.light;
    #if defined(DEBUG_NORMAL)
    b.color = vec4(norm, 1.);
    #else
    b.color = o.color;
    #endif
    return b;
}
#endif

in vec2 v2f_texCoords;
in vec4 v2f_color;
in float v2f_diffuse;
in vec2 v2f_light;
void main() {
BlockFrag o;
o.texCoords = v2f_texCoords;
o.color = v2f_color;
o.diffuse = v2f_diffuse;
o.light = v2f_light;
fragment(o);
}
[16:19:41] [Render thread/ERROR]: Shader compilation log for create:contraption_actor: WARNING: 0:2: extension 'GL_ARB_conservative_depth' is not supported

[16:19:41] [Render thread/ERROR]: #version 150
#extension GL_ARB_conservative_depth : enable
#define VERTEX_SHADER
#if defined(VERTEX_SHADER)
out float FragDistance;
#elif defined(FRAGMENT_SHADER)
in float FragDistance;
#endif
uniform vec4 uFogColor;
uniform vec2 uFogRange;

float cylindrical_distance(vec3 worldPos, vec3 cameraPos) {
    float distXZ = length(worldPos.xz - cameraPos.xz);
    float distY = abs(worldPos.y - cameraPos.y);
    return max(distXZ, distY);
}

float cylindrical_distance(vec3 worldPos) {
    float distXZ = length(worldPos.xz);
    float distY = abs(worldPos.y);
    return max(distXZ, distY);
}

float FLWFogFactor() {
    return (uFogRange.y - FragDistance) / (uFogRange.y - uFogRange.x);
}


uniform float uTime;
uniform mat4 uViewProjection;
uniform vec3 uCameraPos;

uniform vec2 uTextureScale;
uniform sampler2D uBlockAtlas;
uniform sampler2D uLightMap;
uniform sampler2D uCrumbling;

uniform vec2 uWindowSize;

void FLWFinalizeNormal(inout vec3 normal) {
    // noop
}

#if defined(VERTEX_SHADER)
void FLWFinalizeWorldPos(inout vec4 worldPos) {
    #if defined(USE_FOG)
    FragDistance = cylindrical_distance(worldPos.xyz, uCameraPos);
    #endif

    gl_Position = uViewProjection * worldPos;
}

#elif defined(FRAGMENT_SHADER)

out vec4 fragColor;

vec4 FLWBlockTexture(vec2 texCoords) {
    vec4 cr = texture(uCrumbling, texCoords * uTextureScale);
    float diffuseAlpha = texture(uBlockAtlas, texCoords).a;
    cr.a = cr.a * diffuseAlpha;
    return cr;
}

void FLWFinalizeColor(vec4 color) {
    #if defined(USE_FOG)
    float a = color.a;
    float fog = clamp(FLWFogFactor(), 0., 1.);

    color = mix(uFogColor, color, fog);
    color.a = a;
    #endif

    if (color.a < 0.1) {
        discard;
    }

    fragColor = color;
}

vec4 FLWLight(vec2 lightCoords) {
    return vec4(1.);
}
#endif


mat4 rotate(vec3 axis, float angle) {
    float s = sin(angle);
    float c = cos(angle);
    float oc = 1. - c;

    vec3 sa = axis * s;

    mat4 mr = mat4(1.);
    mr[0].xyz = oc * axis.xxz * axis.xyx + vec3(c, sa.z, -sa.y);
    mr[1].xyz = oc * axis.xyy * axis.yyz + vec3(-sa.z, c, sa.x);
    mr[2].xyz = oc * axis.zyz * axis.xzz + vec3(sa.y, -sa.x, c);

    return mr;
}

mat4 rotation(vec3 rot) {
    return rotate(vec3(0., 1., 0.), rot.y) * rotate(vec3(0., 0., 1.), rot.z) * rotate(vec3(1., 0., 0.), rot.x);
}

mat3 modelToNormal(mat4 mat) {
    // Discard the edges. This won't be accurate for scaled or skewed matrices,
    // but we don't have to work with those often.
    mat3 m;
    m[0] = mat[0].xyz;
    m[1] = mat[1].xyz;
    m[2] = mat[2].xyz;
    return m;
}

#define PIOVER2 1.5707963268

vec4 quat(vec3 axis, float angle) {
    float halfAngle = angle * PIOVER2 / 180.0;
    vec2 cs = sin(vec2(PIOVER2 - halfAngle, halfAngle)); // compute sin and cos in one instruction
    return vec4(axis.xyz * cs.y,  cs.x);
}

vec4 quatMult(vec4 q1, vec4 q2) {
    // disgustingly vectorized quaternion multiplication
    vec4 a = q1.w * q2.xyzw;
    vec4 b = q1.x * q2.wzxy * vec4(1., -1., 1., -1.);
    vec4 c = q1.y * q2.zwxy * vec4(1., 1., -1., -1.);
    vec4 d = q1.z * q2.yxwz * vec4(-1., 1., 1., -1.);

    return a + b + c + d;
}

vec3 rotateVertexByQuat(vec3 v, vec4 q) {
    vec3 i = q.xyz;
    return v + 2.0 * cross(i, cross(i, v) + q.w * v);
}

vec3 rotateAbout(vec3 v, vec3 axis, float angle) {
    return rotateVertexByQuat(v, quat(axis, angle));
}

float diffuse(vec3 normal) {
    vec3 n2 = normal * normal * vec3(.6, .25, .8);
    return min(n2.x + n2.y * (3. + normal.y) + n2.z, 1.);
}
struct Vertex {
    vec3 pos;
    vec2 texCoords;
    vec3 normal;
};

struct BlockFrag {
    vec2 texCoords;
    vec4 color;
    float diffuse;
    vec2 light;
};

#if defined(FRAGMENT_SHADER)
void fragment(BlockFrag r) {
    vec4 tex = FLWBlockTexture(r.texCoords);

    vec4 color = vec4(tex.rgb * FLWLight(r.light).rgb * r.diffuse, tex.a) * r.color;

    FLWFinalizeColor(color);
}
#endif
#define PI 3.1415926538





struct Actor {
    vec3 pos;
    vec2 light;
    float offset;
    vec3 axis;
    vec4 rotation;
    vec3 rotationCenter;
    float speed;
};




#if defined(VERTEX_SHADER)
BlockFrag vertex(Vertex v, Actor instance) {
    float degrees = instance.offset + uTime * instance.speed / 20.;
    //float angle = fract(degrees / 360.) * PI * 2.;

    vec4 kineticRot = quat(instance.axis, degrees);
    vec3 rotated = rotateVertexByQuat(v.pos - instance.rotationCenter, kineticRot) + instance.rotationCenter;

    vec4 worldPos = vec4(rotateVertexByQuat(rotated - .5, instance.rotation) + instance.pos + .5, 1.);
    vec3 norm = rotateVertexByQuat(rotateVertexByQuat(v.normal, kineticRot), instance.rotation);

    FLWFinalizeWorldPos(worldPos);
    FLWFinalizeNormal(norm);

    BlockFrag b;
    b.diffuse = diffuse(norm);
    b.texCoords = v.texCoords;
    b.light = instance.light;

    #if defined(DEBUG_NORMAL)
    b.color = vec4(norm, 1.);
    #else
    b.color = vec4(1.);
    #endif

    return b;
}
#endif

in vec3 a_v_pos;
in vec2 a_v_texCoords;
in vec3 a_v_normal;
in vec3 a_i_pos;
in vec2 a_i_light;
in float a_i_offset;
in vec3 a_i_axis;
in vec4 a_i_rotation;
in vec3 a_i_rotationCenter;
in float a_i_speed;
out vec2 v2f_texCoords;
out vec4 v2f_color;
out float v2f_diffuse;
out vec2 v2f_light;
void main() {
Vertex v;
v.pos = a_v_pos;
v.texCoords = a_v_texCoords;
v.normal = a_v_normal;
Actor i;
i.pos = a_i_pos;
i.light = a_i_light;
i.offset = a_i_offset;
i.axis = a_i_axis;
i.rotation = a_i_rotation;
i.rotationCenter = a_i_rotationCenter;
i.speed = a_i_speed;
BlockFrag o = vertex(v, i);
v2f_texCoords = o.texCoords;
v2f_color = o.color;
v2f_diffuse = o.diffuse;
v2f_light = o.light;
}
[16:19:41] [Render thread/ERROR]: Shader compilation log for create:contraption_actor: WARNING: 0:2: extension 'GL_ARB_conservative_depth' is not supported

[16:19:41] [Render thread/ERROR]: #version 150
#extension GL_ARB_conservative_depth : enable
#define FRAGMENT_SHADER
#if defined(VERTEX_SHADER)
out float FragDistance;
#elif defined(FRAGMENT_SHADER)
in float FragDistance;
#endif
uniform vec4 uFogColor;
uniform vec2 uFogRange;

float cylindrical_distance(vec3 worldPos, vec3 cameraPos) {
    float distXZ = length(worldPos.xz - cameraPos.xz);
    float distY = abs(worldPos.y - cameraPos.y);
    return max(distXZ, distY);
}

float cylindrical_distance(vec3 worldPos) {
    float distXZ = length(worldPos.xz);
    float distY = abs(worldPos.y);
    return max(distXZ, distY);
}

float FLWFogFactor() {
    return (uFogRange.y - FragDistance) / (uFogRange.y - uFogRange.x);
}


uniform float uTime;
uniform mat4 uViewProjection;
uniform vec3 uCameraPos;

uniform vec2 uTextureScale;
uniform sampler2D uBlockAtlas;
uniform sampler2D uLightMap;
uniform sampler2D uCrumbling;

uniform vec2 uWindowSize;

void FLWFinalizeNormal(inout vec3 normal) {
    // noop
}

#if defined(VERTEX_SHADER)
void FLWFinalizeWorldPos(inout vec4 worldPos) {
    #if defined(USE_FOG)
    FragDistance = cylindrical_distance(worldPos.xyz, uCameraPos);
    #endif

    gl_Position = uViewProjection * worldPos;
}

#elif defined(FRAGMENT_SHADER)

out vec4 fragColor;

vec4 FLWBlockTexture(vec2 texCoords) {
    vec4 cr = texture(uCrumbling, texCoords * uTextureScale);
    float diffuseAlpha = texture(uBlockAtlas, texCoords).a;
    cr.a = cr.a * diffuseAlpha;
    return cr;
}

void FLWFinalizeColor(vec4 color) {
    #if defined(USE_FOG)
    float a = color.a;
    float fog = clamp(FLWFogFactor(), 0., 1.);

    color = mix(uFogColor, color, fog);
    color.a = a;
    #endif

    if (color.a < 0.1) {
        discard;
    }

    fragColor = color;
}

vec4 FLWLight(vec2 lightCoords) {
    return vec4(1.);
}
#endif


mat4 rotate(vec3 axis, float angle) {
    float s = sin(angle);
    float c = cos(angle);
    float oc = 1. - c;

    vec3 sa = axis * s;

    mat4 mr = mat4(1.);
    mr[0].xyz = oc * axis.xxz * axis.xyx + vec3(c, sa.z, -sa.y);
    mr[1].xyz = oc * axis.xyy * axis.yyz + vec3(-sa.z, c, sa.x);
    mr[2].xyz = oc * axis.zyz * axis.xzz + vec3(sa.y, -sa.x, c);

    return mr;
}

mat4 rotation(vec3 rot) {
    return rotate(vec3(0., 1., 0.), rot.y) * rotate(vec3(0., 0., 1.), rot.z) * rotate(vec3(1., 0., 0.), rot.x);
}

mat3 modelToNormal(mat4 mat) {
    // Discard the edges. This won't be accurate for scaled or skewed matrices,
    // but we don't have to work with those often.
    mat3 m;
    m[0] = mat[0].xyz;
    m[1] = mat[1].xyz;
    m[2] = mat[2].xyz;
    return m;
}

#define PIOVER2 1.5707963268

vec4 quat(vec3 axis, float angle) {
    float halfAngle = angle * PIOVER2 / 180.0;
    vec2 cs = sin(vec2(PIOVER2 - halfAngle, halfAngle)); // compute sin and cos in one instruction
    return vec4(axis.xyz * cs.y,  cs.x);
}

vec4 quatMult(vec4 q1, vec4 q2) {
    // disgustingly vectorized quaternion multiplication
    vec4 a = q1.w * q2.xyzw;
    vec4 b = q1.x * q2.wzxy * vec4(1., -1., 1., -1.);
    vec4 c = q1.y * q2.zwxy * vec4(1., 1., -1., -1.);
    vec4 d = q1.z * q2.yxwz * vec4(-1., 1., 1., -1.);

    return a + b + c + d;
}

vec3 rotateVertexByQuat(vec3 v, vec4 q) {
    vec3 i = q.xyz;
    return v + 2.0 * cross(i, cross(i, v) + q.w * v);
}

vec3 rotateAbout(vec3 v, vec3 axis, float angle) {
    return rotateVertexByQuat(v, quat(axis, angle));
}

float diffuse(vec3 normal) {
    vec3 n2 = normal * normal * vec3(.6, .25, .8);
    return min(n2.x + n2.y * (3. + normal.y) + n2.z, 1.);
}
struct Vertex {
    vec3 pos;
    vec2 texCoords;
    vec3 normal;
};

struct BlockFrag {
    vec2 texCoords;
    vec4 color;
    float diffuse;
    vec2 light;
};

#if defined(FRAGMENT_SHADER)
void fragment(BlockFrag r) {
    vec4 tex = FLWBlockTexture(r.texCoords);

    vec4 color = vec4(tex.rgb * FLWLight(r.light).rgb * r.diffuse, tex.a) * r.color;

    FLWFinalizeColor(color);
}
#endif
#define PI 3.1415926538





struct Actor {
    vec3 pos;
    vec2 light;
    float offset;
    vec3 axis;
    vec4 rotation;
    vec3 rotationCenter;
    float speed;
};




#if defined(VERTEX_SHADER)
BlockFrag vertex(Vertex v, Actor instance) {
    float degrees = instance.offset + uTime * instance.speed / 20.;
    //float angle = fract(degrees / 360.) * PI * 2.;

    vec4 kineticRot = quat(instance.axis, degrees);
    vec3 rotated = rotateVertexByQuat(v.pos - instance.rotationCenter, kineticRot) + instance.rotationCenter;

    vec4 worldPos = vec4(rotateVertexByQuat(rotated - .5, instance.rotation) + instance.pos + .5, 1.);
    vec3 norm = rotateVertexByQuat(rotateVertexByQuat(v.normal, kineticRot), instance.rotation);

    FLWFinalizeWorldPos(worldPos);
    FLWFinalizeNormal(norm);

    BlockFrag b;
    b.diffuse = diffuse(norm);
    b.texCoords = v.texCoords;
    b.light = instance.light;

    #if defined(DEBUG_NORMAL)
    b.color = vec4(norm, 1.);
    #else
    b.color = vec4(1.);
    #endif

    return b;
}
#endif

in vec2 v2f_texCoords;
in vec4 v2f_color;
in float v2f_diffuse;
in vec2 v2f_light;
void main() {
BlockFrag o;
o.texCoords = v2f_texCoords;
o.color = v2f_color;
o.diffuse = v2f_diffuse;
o.light = v2f_light;
fragment(o);
}
[16:19:41] [Render thread/ERROR]: Shader compilation log for create:contraption_actor: WARNING: 0:2: extension 'GL_ARB_conservative_depth' is not supported

[16:19:41] [Render thread/ERROR]: #version 150
#extension GL_ARB_conservative_depth : enable
#define VERTEX_SHADER
#define DEBUG_NORMAL
#if defined(VERTEX_SHADER)
out float FragDistance;
#elif defined(FRAGMENT_SHADER)
in float FragDistance;
#endif
uniform vec4 uFogColor;
uniform vec2 uFogRange;

float cylindrical_distance(vec3 worldPos, vec3 cameraPos) {
    float distXZ = length(worldPos.xz - cameraPos.xz);
    float distY = abs(worldPos.y - cameraPos.y);
    return max(distXZ, distY);
}

float cylindrical_distance(vec3 worldPos) {
    float distXZ = length(worldPos.xz);
    float distY = abs(worldPos.y);
    return max(distXZ, distY);
}

float FLWFogFactor() {
    return (uFogRange.y - FragDistance) / (uFogRange.y - uFogRange.x);
}


uniform float uTime;
uniform mat4 uViewProjection;
uniform vec3 uCameraPos;

uniform vec2 uTextureScale;
uniform sampler2D uBlockAtlas;
uniform sampler2D uLightMap;
uniform sampler2D uCrumbling;

uniform vec2 uWindowSize;

void FLWFinalizeNormal(inout vec3 normal) {
    // noop
}

#if defined(VERTEX_SHADER)
void FLWFinalizeWorldPos(inout vec4 worldPos) {
    #if defined(USE_FOG)
    FragDistance = cylindrical_distance(worldPos.xyz, uCameraPos);
    #endif

    gl_Position = uViewProjection * worldPos;
}

#elif defined(FRAGMENT_SHADER)

out vec4 fragColor;

vec4 FLWBlockTexture(vec2 texCoords) {
    vec4 cr = texture(uCrumbling, texCoords * uTextureScale);
    float diffuseAlpha = texture(uBlockAtlas, texCoords).a;
    cr.a = cr.a * diffuseAlpha;
    return cr;
}

void FLWFinalizeColor(vec4 color) {
    #if defined(USE_FOG)
    float a = color.a;
    float fog = clamp(FLWFogFactor(), 0., 1.);

    color = mix(uFogColor, color, fog);
    color.a = a;
    #endif

    if (color.a < 0.1) {
        discard;
    }

    fragColor = color;
}

vec4 FLWLight(vec2 lightCoords) {
    return vec4(1.);
}
#endif


mat4 rotate(vec3 axis, float angle) {
    float s = sin(angle);
    float c = cos(angle);
    float oc = 1. - c;

    vec3 sa = axis * s;

    mat4 mr = mat4(1.);
    mr[0].xyz = oc * axis.xxz * axis.xyx + vec3(c, sa.z, -sa.y);
    mr[1].xyz = oc * axis.xyy * axis.yyz + vec3(-sa.z, c, sa.x);
    mr[2].xyz = oc * axis.zyz * axis.xzz + vec3(sa.y, -sa.x, c);

    return mr;
}

mat4 rotation(vec3 rot) {
    return rotate(vec3(0., 1., 0.), rot.y) * rotate(vec3(0., 0., 1.), rot.z) * rotate(vec3(1., 0., 0.), rot.x);
}

mat3 modelToNormal(mat4 mat) {
    // Discard the edges. This won't be accurate for scaled or skewed matrices,
    // but we don't have to work with those often.
    mat3 m;
    m[0] = mat[0].xyz;
    m[1] = mat[1].xyz;
    m[2] = mat[2].xyz;
    return m;
}

#define PIOVER2 1.5707963268

vec4 quat(vec3 axis, float angle) {
    float halfAngle = angle * PIOVER2 / 180.0;
    vec2 cs = sin(vec2(PIOVER2 - halfAngle, halfAngle)); // compute sin and cos in one instruction
    return vec4(axis.xyz * cs.y,  cs.x);
}

vec4 quatMult(vec4 q1, vec4 q2) {
    // disgustingly vectorized quaternion multiplication
    vec4 a = q1.w * q2.xyzw;
    vec4 b = q1.x * q2.wzxy * vec4(1., -1., 1., -1.);
    vec4 c = q1.y * q2.zwxy * vec4(1., 1., -1., -1.);
    vec4 d = q1.z * q2.yxwz * vec4(-1., 1., 1., -1.);

    return a + b + c + d;
}

vec3 rotateVertexByQuat(vec3 v, vec4 q) {
    vec3 i = q.xyz;
    return v + 2.0 * cross(i, cross(i, v) + q.w * v);
}

vec3 rotateAbout(vec3 v, vec3 axis, float angle) {
    return rotateVertexByQuat(v, quat(axis, angle));
}

float diffuse(vec3 normal) {
    vec3 n2 = normal * normal * vec3(.6, .25, .8);
    return min(n2.x + n2.y * (3. + normal.y) + n2.z, 1.);
}
struct Vertex {
    vec3 pos;
    vec2 texCoords;
    vec3 normal;
};

struct BlockFrag {
    vec2 texCoords;
    vec4 color;
    float diffuse;
    vec2 light;
};

#if defined(FRAGMENT_SHADER)
void fragment(BlockFrag r) {
    vec4 tex = FLWBlockTexture(r.texCoords);

    vec4 color = vec4(tex.rgb * FLWLight(r.light).rgb * r.diffuse, tex.a) * r.color;

    FLWFinalizeColor(color);
}
#endif
#define PI 3.1415926538





struct Actor {
    vec3 pos;
    vec2 light;
    float offset;
    vec3 axis;
    vec4 rotation;
    vec3 rotationCenter;
    float speed;
};




#if defined(VERTEX_SHADER)
BlockFrag vertex(Vertex v, Actor instance) {
    float degrees = instance.offset + uTime * instance.speed / 20.;
    //float angle = fract(degrees / 360.) * PI * 2.;

    vec4 kineticRot = quat(instance.axis, degrees);
    vec3 rotated = rotateVertexByQuat(v.pos - instance.rotationCenter, kineticRot) + instance.rotationCenter;

    vec4 worldPos = vec4(rotateVertexByQuat(rotated - .5, instance.rotation) + instance.pos + .5, 1.);
    vec3 norm = rotateVertexByQuat(rotateVertexByQuat(v.normal, kineticRot), instance.rotation);

    FLWFinalizeWorldPos(worldPos);
    FLWFinalizeNormal(norm);

    BlockFrag b;
    b.diffuse = diffuse(norm);
    b.texCoords = v.texCoords;
    b.light = instance.light;

    #if defined(DEBUG_NORMAL)
    b.color = vec4(norm, 1.);
    #else
    b.color = vec4(1.);
    #endif

    return b;
}
#endif

in vec3 a_v_pos;
in vec2 a_v_texCoords;
in vec3 a_v_normal;
in vec3 a_i_pos;
in vec2 a_i_light;
in float a_i_offset;
in vec3 a_i_axis;
in vec4 a_i_rotation;
in vec3 a_i_rotationCenter;
in float a_i_speed;
out vec2 v2f_texCoords;
out vec4 v2f_color;
out float v2f_diffuse;
out vec2 v2f_light;
void main() {
Vertex v;
v.pos = a_v_pos;
v.texCoords = a_v_texCoords;
v.normal = a_v_normal;
Actor i;
i.pos = a_i_pos;
i.light = a_i_light;
i.offset = a_i_offset;
i.axis = a_i_axis;
i.rotation = a_i_rotation;
i.rotationCenter = a_i_rotationCenter;
i.speed = a_i_speed;
BlockFrag o = vertex(v, i);
v2f_texCoords = o.texCoords;
v2f_color = o.color;
v2f_diffuse = o.diffuse;
v2f_light = o.light;
}
[16:19:41] [Render thread/ERROR]: Shader compilation log for create:contraption_actor: WARNING: 0:2: extension 'GL_ARB_conservative_depth' is not supported

[16:19:41] [Render thread/ERROR]: #version 150
#extension GL_ARB_conservative_depth : enable
#define FRAGMENT_SHADER
#define DEBUG_NORMAL
#if defined(VERTEX_SHADER)
out float FragDistance;
#elif defined(FRAGMENT_SHADER)
in float FragDistance;
#endif
uniform vec4 uFogColor;
uniform vec2 uFogRange;

float cylindrical_distance(vec3 worldPos, vec3 cameraPos) {
    float distXZ = length(worldPos.xz - cameraPos.xz);
    float distY = abs(worldPos.y - cameraPos.y);
    return max(distXZ, distY);
}

float cylindrical_distance(vec3 worldPos) {
    float distXZ = length(worldPos.xz);
    float distY = abs(worldPos.y);
    return max(distXZ, distY);
}

float FLWFogFactor() {
    return (uFogRange.y - FragDistance) / (uFogRange.y - uFogRange.x);
}


uniform float uTime;
uniform mat4 uViewProjection;
uniform vec3 uCameraPos;

uniform vec2 uTextureScale;
uniform sampler2D uBlockAtlas;
uniform sampler2D uLightMap;
uniform sampler2D uCrumbling;

uniform vec2 uWindowSize;

void FLWFinalizeNormal(inout vec3 normal) {
    // noop
}

#if defined(VERTEX_SHADER)
void FLWFinalizeWorldPos(inout vec4 worldPos) {
    #if defined(USE_FOG)
    FragDistance = cylindrical_distance(worldPos.xyz, uCameraPos);
    #endif

    gl_Position = uViewProjection * worldPos;
}

#elif defined(FRAGMENT_SHADER)

out vec4 fragColor;

vec4 FLWBlockTexture(vec2 texCoords) {
    vec4 cr = texture(uCrumbling, texCoords * uTextureScale);
    float diffuseAlpha = texture(uBlockAtlas, texCoords).a;
    cr.a = cr.a * diffuseAlpha;
    return cr;
}

void FLWFinalizeColor(vec4 color) {
    #if defined(USE_FOG)
    float a = color.a;
    float fog = clamp(FLWFogFactor(), 0., 1.);

    color = mix(uFogColor, color, fog);
    color.a = a;
    #endif

    if (color.a < 0.1) {
        discard;
    }

    fragColor = color;
}

vec4 FLWLight(vec2 lightCoords) {
    return vec4(1.);
}
#endif


mat4 rotate(vec3 axis, float angle) {
    float s = sin(angle);
    float c = cos(angle);
    float oc = 1. - c;

    vec3 sa = axis * s;

    mat4 mr = mat4(1.);
    mr[0].xyz = oc * axis.xxz * axis.xyx + vec3(c, sa.z, -sa.y);
    mr[1].xyz = oc * axis.xyy * axis.yyz + vec3(-sa.z, c, sa.x);
    mr[2].xyz = oc * axis.zyz * axis.xzz + vec3(sa.y, -sa.x, c);

    return mr;
}

mat4 rotation(vec3 rot) {
    return rotate(vec3(0., 1., 0.), rot.y) * rotate(vec3(0., 0., 1.), rot.z) * rotate(vec3(1., 0., 0.), rot.x);
}

mat3 modelToNormal(mat4 mat) {
    // Discard the edges. This won't be accurate for scaled or skewed matrices,
    // but we don't have to work with those often.
    mat3 m;
    m[0] = mat[0].xyz;
    m[1] = mat[1].xyz;
    m[2] = mat[2].xyz;
    return m;
}

#define PIOVER2 1.5707963268

vec4 quat(vec3 axis, float angle) {
    float halfAngle = angle * PIOVER2 / 180.0;
    vec2 cs = sin(vec2(PIOVER2 - halfAngle, halfAngle)); // compute sin and cos in one instruction
    return vec4(axis.xyz * cs.y,  cs.x);
}

vec4 quatMult(vec4 q1, vec4 q2) {
    // disgustingly vectorized quaternion multiplication
    vec4 a = q1.w * q2.xyzw;
    vec4 b = q1.x * q2.wzxy * vec4(1., -1., 1., -1.);
    vec4 c = q1.y * q2.zwxy * vec4(1., 1., -1., -1.);
    vec4 d = q1.z * q2.yxwz * vec4(-1., 1., 1., -1.);

    return a + b + c + d;
}

vec3 rotateVertexByQuat(vec3 v, vec4 q) {
    vec3 i = q.xyz;
    return v + 2.0 * cross(i, cross(i, v) + q.w * v);
}

vec3 rotateAbout(vec3 v, vec3 axis, float angle) {
    return rotateVertexByQuat(v, quat(axis, angle));
}

float diffuse(vec3 normal) {
    vec3 n2 = normal * normal * vec3(.6, .25, .8);
    return min(n2.x + n2.y * (3. + normal.y) + n2.z, 1.);
}
struct Vertex {
    vec3 pos;
    vec2 texCoords;
    vec3 normal;
};

struct BlockFrag {
    vec2 texCoords;
    vec4 color;
    float diffuse;
    vec2 light;
};

#if defined(FRAGMENT_SHADER)
void fragment(BlockFrag r) {
    vec4 tex = FLWBlockTexture(r.texCoords);

    vec4 color = vec4(tex.rgb * FLWLight(r.light).rgb * r.diffuse, tex.a) * r.color;

    FLWFinalizeColor(color);
}
#endif
#define PI 3.1415926538





struct Actor {
    vec3 pos;
    vec2 light;
    float offset;
    vec3 axis;
    vec4 rotation;
    vec3 rotationCenter;
    float speed;
};




#if defined(VERTEX_SHADER)
BlockFrag vertex(Vertex v, Actor instance) {
    float degrees = instance.offset + uTime * instance.speed / 20.;
    //float angle = fract(degrees / 360.) * PI * 2.;

    vec4 kineticRot = quat(instance.axis, degrees);
    vec3 rotated = rotateVertexByQuat(v.pos - instance.rotationCenter, kineticRot) + instance.rotationCenter;

    vec4 worldPos = vec4(rotateVertexByQuat(rotated - .5, instance.rotation) + instance.pos + .5, 1.);
    vec3 norm = rotateVertexByQuat(rotateVertexByQuat(v.normal, kineticRot), instance.rotation);

    FLWFinalizeWorldPos(worldPos);
    FLWFinalizeNormal(norm);

    BlockFrag b;
    b.diffuse = diffuse(norm);
    b.texCoords = v.texCoords;
    b.light = instance.light;

    #if defined(DEBUG_NORMAL)
    b.color = vec4(norm, 1.);
    #else
    b.color = vec4(1.);
    #endif

    return b;
}
#endif

in vec2 v2f_texCoords;
in vec4 v2f_color;
in float v2f_diffuse;
in vec2 v2f_light;
void main() {
BlockFrag o;
o.texCoords = v2f_texCoords;
o.color = v2f_color;
o.diffuse = v2f_diffuse;
o.light = v2f_light;
fragment(o);
}
[16:19:41] [Render thread/ERROR]: Shader compilation log for create:flap: WARNING: 0:2: extension 'GL_ARB_conservative_depth' is not supported

[16:19:41] [Render thread/ERROR]: #version 150
#extension GL_ARB_conservative_depth : enable
#define VERTEX_SHADER
#if defined(VERTEX_SHADER)
out float FragDistance;
#elif defined(FRAGMENT_SHADER)
in float FragDistance;
#endif
uniform vec4 uFogColor;
uniform vec2 uFogRange;

float cylindrical_distance(vec3 worldPos, vec3 cameraPos) {
    float distXZ = length(worldPos.xz - cameraPos.xz);
    float distY = abs(worldPos.y - cameraPos.y);
    return max(distXZ, distY);
}

float cylindrical_distance(vec3 worldPos) {
    float distXZ = length(worldPos.xz);
    float distY = abs(worldPos.y);
    return max(distXZ, distY);
}

float FLWFogFactor() {
    return (uFogRange.y - FragDistance) / (uFogRange.y - uFogRange.x);
}


uniform float uTime;
uniform mat4 uViewProjection;
uniform vec3 uCameraPos;

uniform vec2 uTextureScale;
uniform sampler2D uBlockAtlas;
uniform sampler2D uLightMap;
uniform sampler2D uCrumbling;

uniform vec2 uWindowSize;

void FLWFinalizeNormal(inout vec3 normal) {
    // noop
}

#if defined(VERTEX_SHADER)
void FLWFinalizeWorldPos(inout vec4 worldPos) {
    #if defined(USE_FOG)
    FragDistance = cylindrical_distance(worldPos.xyz, uCameraPos);
    #endif

    gl_Position = uViewProjection * worldPos;
}

#elif defined(FRAGMENT_SHADER)

out vec4 fragColor;

vec4 FLWBlockTexture(vec2 texCoords) {
    vec4 cr = texture(uCrumbling, texCoords * uTextureScale);
    float diffuseAlpha = texture(uBlockAtlas, texCoords).a;
    cr.a = cr.a * diffuseAlpha;
    return cr;
}

void FLWFinalizeColor(vec4 color) {
    #if defined(USE_FOG)
    float a = color.a;
    float fog = clamp(FLWFogFactor(), 0., 1.);

    color = mix(uFogColor, color, fog);
    color.a = a;
    #endif

    if (color.a < 0.1) {
        discard;
    }

    fragColor = color;
}

vec4 FLWLight(vec2 lightCoords) {
    return vec4(1.);
}
#endif


mat4 rotate(vec3 axis, float angle) {
    float s = sin(angle);
    float c = cos(angle);
    float oc = 1. - c;

    vec3 sa = axis * s;

    mat4 mr = mat4(1.);
    mr[0].xyz = oc * axis.xxz * axis.xyx + vec3(c, sa.z, -sa.y);
    mr[1].xyz = oc * axis.xyy * axis.yyz + vec3(-sa.z, c, sa.x);
    mr[2].xyz = oc * axis.zyz * axis.xzz + vec3(sa.y, -sa.x, c);

    return mr;
}

mat4 rotation(vec3 rot) {
    return rotate(vec3(0., 1., 0.), rot.y) * rotate(vec3(0., 0., 1.), rot.z) * rotate(vec3(1., 0., 0.), rot.x);
}

mat3 modelToNormal(mat4 mat) {
    // Discard the edges. This won't be accurate for scaled or skewed matrices,
    // but we don't have to work with those often.
    mat3 m;
    m[0] = mat[0].xyz;
    m[1] = mat[1].xyz;
    m[2] = mat[2].xyz;
    return m;
}

#define PIOVER2 1.5707963268

vec4 quat(vec3 axis, float angle) {
    float halfAngle = angle * PIOVER2 / 180.0;
    vec2 cs = sin(vec2(PIOVER2 - halfAngle, halfAngle)); // compute sin and cos in one instruction
    return vec4(axis.xyz * cs.y,  cs.x);
}

vec4 quatMult(vec4 q1, vec4 q2) {
    // disgustingly vectorized quaternion multiplication
    vec4 a = q1.w * q2.xyzw;
    vec4 b = q1.x * q2.wzxy * vec4(1., -1., 1., -1.);
    vec4 c = q1.y * q2.zwxy * vec4(1., 1., -1., -1.);
    vec4 d = q1.z * q2.yxwz * vec4(-1., 1., 1., -1.);

    return a + b + c + d;
}

vec3 rotateVertexByQuat(vec3 v, vec4 q) {
    vec3 i = q.xyz;
    return v + 2.0 * cross(i, cross(i, v) + q.w * v);
}

vec3 rotateAbout(vec3 v, vec3 axis, float angle) {
    return rotateVertexByQuat(v, quat(axis, angle));
}

float diffuse(vec3 normal) {
    vec3 n2 = normal * normal * vec3(.6, .25, .8);
    return min(n2.x + n2.y * (3. + normal.y) + n2.z, 1.);
}
struct Vertex {
    vec3 pos;
    vec2 texCoords;
    vec3 normal;
};

struct BlockFrag {
    vec2 texCoords;
    vec4 color;
    float diffuse;
    vec2 light;
};

#if defined(FRAGMENT_SHADER)
void fragment(BlockFrag r) {
    vec4 tex = FLWBlockTexture(r.texCoords);

    vec4 color = vec4(tex.rgb * FLWLight(r.light).rgb * r.diffuse, tex.a) * r.color;

    FLWFinalizeColor(color);
}
#endif
#define PI 3.1415926538





struct Flap {
    vec3 instancePos;
    vec2 light;
    vec3 segmentOffset;
    vec3 pivot;
    float horizontalAngle;
    float intensity;
    float flapScale;
    float flapness;
};




#if defined(VERTEX_SHADER)

float toRad(float degrees) {
    return fract(degrees / 360.) * PI * 2.;
}

float getFlapAngle(float flapness, float intensity, float scale) {
    float absFlap = abs(flapness);

    float angle = sin((1. - absFlap) * PI * intensity) * 30. * flapness * scale;

    float halfAngle = angle * 0.5;

    float which = step(0., flapness); // 0 if negative, 1 if positive
    float degrees = which * halfAngle + (1. - which) * angle; // branchless conditional multiply

    return degrees;
}

BlockFrag vertex(Vertex v, Flap flap) {
    float flapAngle = getFlapAngle(flap.flapness, flap.intensity, flap.flapScale);

    vec4 orientation = quat(vec3(0., 1., 0.), -flap.horizontalAngle);
    vec4 flapRotation = quat(vec3(1., 0., 0.), flapAngle);

    vec3 rotated = rotateVertexByQuat(v.pos - flap.pivot, flapRotation) + flap.pivot + flap.segmentOffset;
    rotated = rotateVertexByQuat(rotated - .5, orientation) + flap.instancePos + .5;

    vec4 worldPos = vec4(rotated, 1.);
    vec3 norm = rotateVertexByQuat(rotateVertexByQuat(v.normal, flapRotation), orientation);

    FLWFinalizeWorldPos(worldPos);
    FLWFinalizeNormal(norm);

    BlockFrag b;
    b.diffuse = diffuse(norm);
    b.texCoords = v.texCoords;
    b.light = flap.light;
    #if defined(DEBUG_NORMAL)
    b.color = vec4(norm, 1.);
    #else
    b.color = vec4(1.);
    #endif
    return b;
}
#endif

in vec3 a_v_pos;
in vec2 a_v_texCoords;
in vec3 a_v_normal;
in vec3 a_i_instancePos;
in vec2 a_i_light;
in vec3 a_i_segmentOffset;
in vec3 a_i_pivot;
in float a_i_horizontalAngle;
in float a_i_intensity;
in float a_i_flapScale;
in float a_i_flapness;
out vec2 v2f_texCoords;
out vec4 v2f_color;
out float v2f_diffuse;
out vec2 v2f_light;
void main() {
Vertex v;
v.pos = a_v_pos;
v.texCoords = a_v_texCoords;
v.normal = a_v_normal;
Flap i;
i.instancePos = a_i_instancePos;
i.light = a_i_light;
i.segmentOffset = a_i_segmentOffset;
i.pivot = a_i_pivot;
i.horizontalAngle = a_i_horizontalAngle;
i.intensity = a_i_intensity;
i.flapScale = a_i_flapScale;
i.flapness = a_i_flapness;
BlockFrag o = vertex(v, i);
v2f_texCoords = o.texCoords;
v2f_color = o.color;
v2f_diffuse = o.diffuse;
v2f_light = o.light;
}
[16:19:41] [Render thread/ERROR]: Shader compilation log for create:flap: WARNING: 0:2: extension 'GL_ARB_conservative_depth' is not supported

[16:19:41] [Render thread/ERROR]: #version 150
#extension GL_ARB_conservative_depth : enable
#define FRAGMENT_SHADER
#if defined(VERTEX_SHADER)
out float FragDistance;
#elif defined(FRAGMENT_SHADER)
in float FragDistance;
#endif
uniform vec4 uFogColor;
uniform vec2 uFogRange;

float cylindrical_distance(vec3 worldPos, vec3 cameraPos) {
    float distXZ = length(worldPos.xz - cameraPos.xz);
    float distY = abs(worldPos.y - cameraPos.y);
    return max(distXZ, distY);
}

float cylindrical_distance(vec3 worldPos) {
    float distXZ = length(worldPos.xz);
    float distY = abs(worldPos.y);
    return max(distXZ, distY);
}

float FLWFogFactor() {
    return (uFogRange.y - FragDistance) / (uFogRange.y - uFogRange.x);
}


uniform float uTime;
uniform mat4 uViewProjection;
uniform vec3 uCameraPos;

uniform vec2 uTextureScale;
uniform sampler2D uBlockAtlas;
uniform sampler2D uLightMap;
uniform sampler2D uCrumbling;

uniform vec2 uWindowSize;

void FLWFinalizeNormal(inout vec3 normal) {
    // noop
}

#if defined(VERTEX_SHADER)
void FLWFinalizeWorldPos(inout vec4 worldPos) {
    #if defined(USE_FOG)
    FragDistance = cylindrical_distance(worldPos.xyz, uCameraPos);
    #endif

    gl_Position = uViewProjection * worldPos;
}

#elif defined(FRAGMENT_SHADER)

out vec4 fragColor;

vec4 FLWBlockTexture(vec2 texCoords) {
    vec4 cr = texture(uCrumbling, texCoords * uTextureScale);
    float diffuseAlpha = texture(uBlockAtlas, texCoords).a;
    cr.a = cr.a * diffuseAlpha;
    return cr;
}

void FLWFinalizeColor(vec4 color) {
    #if defined(USE_FOG)
    float a = color.a;
    float fog = clamp(FLWFogFactor(), 0., 1.);

    color = mix(uFogColor, color, fog);
    color.a = a;
    #endif

    if (color.a < 0.1) {
        discard;
    }

    fragColor = color;
}

vec4 FLWLight(vec2 lightCoords) {
    return vec4(1.);
}
#endif


mat4 rotate(vec3 axis, float angle) {
    float s = sin(angle);
    float c = cos(angle);
    float oc = 1. - c;

    vec3 sa = axis * s;

    mat4 mr = mat4(1.);
    mr[0].xyz = oc * axis.xxz * axis.xyx + vec3(c, sa.z, -sa.y);
    mr[1].xyz = oc * axis.xyy * axis.yyz + vec3(-sa.z, c, sa.x);
    mr[2].xyz = oc * axis.zyz * axis.xzz + vec3(sa.y, -sa.x, c);

    return mr;
}

mat4 rotation(vec3 rot) {
    return rotate(vec3(0., 1., 0.), rot.y) * rotate(vec3(0., 0., 1.), rot.z) * rotate(vec3(1., 0., 0.), rot.x);
}

mat3 modelToNormal(mat4 mat) {
    // Discard the edges. This won't be accurate for scaled or skewed matrices,
    // but we don't have to work with those often.
    mat3 m;
    m[0] = mat[0].xyz;
    m[1] = mat[1].xyz;
    m[2] = mat[2].xyz;
    return m;
}

#define PIOVER2 1.5707963268

vec4 quat(vec3 axis, float angle) {
    float halfAngle = angle * PIOVER2 / 180.0;
    vec2 cs = sin(vec2(PIOVER2 - halfAngle, halfAngle)); // compute sin and cos in one instruction
    return vec4(axis.xyz * cs.y,  cs.x);
}

vec4 quatMult(vec4 q1, vec4 q2) {
    // disgustingly vectorized quaternion multiplication
    vec4 a = q1.w * q2.xyzw;
    vec4 b = q1.x * q2.wzxy * vec4(1., -1., 1., -1.);
    vec4 c = q1.y * q2.zwxy * vec4(1., 1., -1., -1.);
    vec4 d = q1.z * q2.yxwz * vec4(-1., 1., 1., -1.);

    return a + b + c + d;
}

vec3 rotateVertexByQuat(vec3 v, vec4 q) {
    vec3 i = q.xyz;
    return v + 2.0 * cross(i, cross(i, v) + q.w * v);
}

vec3 rotateAbout(vec3 v, vec3 axis, float angle) {
    return rotateVertexByQuat(v, quat(axis, angle));
}

float diffuse(vec3 normal) {
    vec3 n2 = normal * normal * vec3(.6, .25, .8);
    return min(n2.x + n2.y * (3. + normal.y) + n2.z, 1.);
}
struct Vertex {
    vec3 pos;
    vec2 texCoords;
    vec3 normal;
};

struct BlockFrag {
    vec2 texCoords;
    vec4 color;
    float diffuse;
    vec2 light;
};

#if defined(FRAGMENT_SHADER)
void fragment(BlockFrag r) {
    vec4 tex = FLWBlockTexture(r.texCoords);

    vec4 color = vec4(tex.rgb * FLWLight(r.light).rgb * r.diffuse, tex.a) * r.color;

    FLWFinalizeColor(color);
}
#endif
#define PI 3.1415926538





struct Flap {
    vec3 instancePos;
    vec2 light;
    vec3 segmentOffset;
    vec3 pivot;
    float horizontalAngle;
    float intensity;
    float flapScale;
    float flapness;
};




#if defined(VERTEX_SHADER)

float toRad(float degrees) {
    return fract(degrees / 360.) * PI * 2.;
}

float getFlapAngle(float flapness, float intensity, float scale) {
    float absFlap = abs(flapness);

    float angle = sin((1. - absFlap) * PI * intensity) * 30. * flapness * scale;

    float halfAngle = angle * 0.5;

    float which = step(0., flapness); // 0 if negative, 1 if positive
    float degrees = which * halfAngle + (1. - which) * angle; // branchless conditional multiply

    return degrees;
}

BlockFrag vertex(Vertex v, Flap flap) {
    float flapAngle = getFlapAngle(flap.flapness, flap.intensity, flap.flapScale);

    vec4 orientation = quat(vec3(0., 1., 0.), -flap.horizontalAngle);
    vec4 flapRotation = quat(vec3(1., 0., 0.), flapAngle);

    vec3 rotated = rotateVertexByQuat(v.pos - flap.pivot, flapRotation) + flap.pivot + flap.segmentOffset;
    rotated = rotateVertexByQuat(rotated - .5, orientation) + flap.instancePos + .5;

    vec4 worldPos = vec4(rotated, 1.);
    vec3 norm = rotateVertexByQuat(rotateVertexByQuat(v.normal, flapRotation), orientation);

    FLWFinalizeWorldPos(worldPos);
    FLWFinalizeNormal(norm);

    BlockFrag b;
    b.diffuse = diffuse(norm);
    b.texCoords = v.texCoords;
    b.light = flap.light;
    #if defined(DEBUG_NORMAL)
    b.color = vec4(norm, 1.);
    #else
    b.color = vec4(1.);
    #endif
    return b;
}
#endif

in vec2 v2f_texCoords;
in vec4 v2f_color;
in float v2f_diffuse;
in vec2 v2f_light;
void main() {
BlockFrag o;
o.texCoords = v2f_texCoords;
o.color = v2f_color;
o.diffuse = v2f_diffuse;
o.light = v2f_light;
fragment(o);
}
[16:19:41] [Render thread/ERROR]: Shader compilation log for create:flap: WARNING: 0:2: extension 'GL_ARB_conservative_depth' is not supported

[16:19:41] [Render thread/ERROR]: #version 150
#extension GL_ARB_conservative_depth : enable
#define VERTEX_SHADER
#define DEBUG_NORMAL
#if defined(VERTEX_SHADER)
out float FragDistance;
#elif defined(FRAGMENT_SHADER)
in float FragDistance;
#endif
uniform vec4 uFogColor;
uniform vec2 uFogRange;

float cylindrical_distance(vec3 worldPos, vec3 cameraPos) {
    float distXZ = length(worldPos.xz - cameraPos.xz);
    float distY = abs(worldPos.y - cameraPos.y);
    return max(distXZ, distY);
}

float cylindrical_distance(vec3 worldPos) {
    float distXZ = length(worldPos.xz);
    float distY = abs(worldPos.y);
    return max(distXZ, distY);
}

float FLWFogFactor() {
    return (uFogRange.y - FragDistance) / (uFogRange.y - uFogRange.x);
}


uniform float uTime;
uniform mat4 uViewProjection;
uniform vec3 uCameraPos;

uniform vec2 uTextureScale;
uniform sampler2D uBlockAtlas;
uniform sampler2D uLightMap;
uniform sampler2D uCrumbling;

uniform vec2 uWindowSize;

void FLWFinalizeNormal(inout vec3 normal) {
    // noop
}

#if defined(VERTEX_SHADER)
void FLWFinalizeWorldPos(inout vec4 worldPos) {
    #if defined(USE_FOG)
    FragDistance = cylindrical_distance(worldPos.xyz, uCameraPos);
    #endif

    gl_Position = uViewProjection * worldPos;
}

#elif defined(FRAGMENT_SHADER)

out vec4 fragColor;

vec4 FLWBlockTexture(vec2 texCoords) {
    vec4 cr = texture(uCrumbling, texCoords * uTextureScale);
    float diffuseAlpha = texture(uBlockAtlas, texCoords).a;
    cr.a = cr.a * diffuseAlpha;
    return cr;
}

void FLWFinalizeColor(vec4 color) {
    #if defined(USE_FOG)
    float a = color.a;
    float fog = clamp(FLWFogFactor(), 0., 1.);

    color = mix(uFogColor, color, fog);
    color.a = a;
    #endif

    if (color.a < 0.1) {
        discard;
    }

    fragColor = color;
}

vec4 FLWLight(vec2 lightCoords) {
    return vec4(1.);
}
#endif


mat4 rotate(vec3 axis, float angle) {
    float s = sin(angle);
    float c = cos(angle);
    float oc = 1. - c;

    vec3 sa = axis * s;

    mat4 mr = mat4(1.);
    mr[0].xyz = oc * axis.xxz * axis.xyx + vec3(c, sa.z, -sa.y);
    mr[1].xyz = oc * axis.xyy * axis.yyz + vec3(-sa.z, c, sa.x);
    mr[2].xyz = oc * axis.zyz * axis.xzz + vec3(sa.y, -sa.x, c);

    return mr;
}

mat4 rotation(vec3 rot) {
    return rotate(vec3(0., 1., 0.), rot.y) * rotate(vec3(0., 0., 1.), rot.z) * rotate(vec3(1., 0., 0.), rot.x);
}

mat3 modelToNormal(mat4 mat) {
    // Discard the edges. This won't be accurate for scaled or skewed matrices,
    // but we don't have to work with those often.
    mat3 m;
    m[0] = mat[0].xyz;
    m[1] = mat[1].xyz;
    m[2] = mat[2].xyz;
    return m;
}

#define PIOVER2 1.5707963268

vec4 quat(vec3 axis, float angle) {
    float halfAngle = angle * PIOVER2 / 180.0;
    vec2 cs = sin(vec2(PIOVER2 - halfAngle, halfAngle)); // compute sin and cos in one instruction
    return vec4(axis.xyz * cs.y,  cs.x);
}

vec4 quatMult(vec4 q1, vec4 q2) {
    // disgustingly vectorized quaternion multiplication
    vec4 a = q1.w * q2.xyzw;
    vec4 b = q1.x * q2.wzxy * vec4(1., -1., 1., -1.);
    vec4 c = q1.y * q2.zwxy * vec4(1., 1., -1., -1.);
    vec4 d = q1.z * q2.yxwz * vec4(-1., 1., 1., -1.);

    return a + b + c + d;
}

vec3 rotateVertexByQuat(vec3 v, vec4 q) {
    vec3 i = q.xyz;
    return v + 2.0 * cross(i, cross(i, v) + q.w * v);
}

vec3 rotateAbout(vec3 v, vec3 axis, float angle) {
    return rotateVertexByQuat(v, quat(axis, angle));
}

float diffuse(vec3 normal) {
    vec3 n2 = normal * normal * vec3(.6, .25, .8);
    return min(n2.x + n2.y * (3. + normal.y) + n2.z, 1.);
}
struct Vertex {
    vec3 pos;
    vec2 texCoords;
    vec3 normal;
};

struct BlockFrag {
    vec2 texCoords;
    vec4 color;
    float diffuse;
    vec2 light;
};

#if defined(FRAGMENT_SHADER)
void fragment(BlockFrag r) {
    vec4 tex = FLWBlockTexture(r.texCoords);

    vec4 color = vec4(tex.rgb * FLWLight(r.light).rgb * r.diffuse, tex.a) * r.color;

    FLWFinalizeColor(color);
}
#endif
#define PI 3.1415926538





struct Flap {
    vec3 instancePos;
    vec2 light;
    vec3 segmentOffset;
    vec3 pivot;
    float horizontalAngle;
    float intensity;
    float flapScale;
    float flapness;
};




#if defined(VERTEX_SHADER)

float toRad(float degrees) {
    return fract(degrees / 360.) * PI * 2.;
}

float getFlapAngle(float flapness, float intensity, float scale) {
    float absFlap = abs(flapness);

    float angle = sin((1. - absFlap) * PI * intensity) * 30. * flapness * scale;

    float halfAngle = angle * 0.5;

    float which = step(0., flapness); // 0 if negative, 1 if positive
    float degrees = which * halfAngle + (1. - which) * angle; // branchless conditional multiply

    return degrees;
}

BlockFrag vertex(Vertex v, Flap flap) {
    float flapAngle = getFlapAngle(flap.flapness, flap.intensity, flap.flapScale);

    vec4 orientation = quat(vec3(0., 1., 0.), -flap.horizontalAngle);
    vec4 flapRotation = quat(vec3(1., 0., 0.), flapAngle);

    vec3 rotated = rotateVertexByQuat(v.pos - flap.pivot, flapRotation) + flap.pivot + flap.segmentOffset;
    rotated = rotateVertexByQuat(rotated - .5, orientation) + flap.instancePos + .5;

    vec4 worldPos = vec4(rotated, 1.);
    vec3 norm = rotateVertexByQuat(rotateVertexByQuat(v.normal, flapRotation), orientation);

    FLWFinalizeWorldPos(worldPos);
    FLWFinalizeNormal(norm);

    BlockFrag b;
    b.diffuse = diffuse(norm);
    b.texCoords = v.texCoords;
    b.light = flap.light;
    #if defined(DEBUG_NORMAL)
    b.color = vec4(norm, 1.);
    #else
    b.color = vec4(1.);
    #endif
    return b;
}
#endif

in vec3 a_v_pos;
in vec2 a_v_texCoords;
in vec3 a_v_normal;
in vec3 a_i_instancePos;
in vec2 a_i_light;
in vec3 a_i_segmentOffset;
in vec3 a_i_pivot;
in float a_i_horizontalAngle;
in float a_i_intensity;
in float a_i_flapScale;
in float a_i_flapness;
out vec2 v2f_texCoords;
out vec4 v2f_color;
out float v2f_diffuse;
out vec2 v2f_light;
void main() {
Vertex v;
v.pos = a_v_pos;
v.texCoords = a_v_texCoords;
v.normal = a_v_normal;
Flap i;
i.instancePos = a_i_instancePos;
i.light = a_i_light;
i.segmentOffset = a_i_segmentOffset;
i.pivot = a_i_pivot;
i.horizontalAngle = a_i_horizontalAngle;
i.intensity = a_i_intensity;
i.flapScale = a_i_flapScale;
i.flapness = a_i_flapness;
BlockFrag o = vertex(v, i);
v2f_texCoords = o.texCoords;
v2f_color = o.color;
v2f_diffuse = o.diffuse;
v2f_light = o.light;
}
[16:19:41] [Render thread/ERROR]: Shader compilation log for create:flap: WARNING: 0:2: extension 'GL_ARB_conservative_depth' is not supported

[16:19:41] [Render thread/ERROR]: #version 150
#extension GL_ARB_conservative_depth : enable
#define FRAGMENT_SHADER
#define DEBUG_NORMAL
#if defined(VERTEX_SHADER)
out float FragDistance;
#elif defined(FRAGMENT_SHADER)
in float FragDistance;
#endif
uniform vec4 uFogColor;
uniform vec2 uFogRange;

float cylindrical_distance(vec3 worldPos, vec3 cameraPos) {
    float distXZ = length(worldPos.xz - cameraPos.xz);
    float distY = abs(worldPos.y - cameraPos.y);
    return max(distXZ, distY);
}

float cylindrical_distance(vec3 worldPos) {
    float distXZ = length(worldPos.xz);
    float distY = abs(worldPos.y);
    return max(distXZ, distY);
}

float FLWFogFactor() {
    return (uFogRange.y - FragDistance) / (uFogRange.y - uFogRange.x);
}


uniform float uTime;
uniform mat4 uViewProjection;
uniform vec3 uCameraPos;

uniform vec2 uTextureScale;
uniform sampler2D uBlockAtlas;
uniform sampler2D uLightMap;
uniform sampler2D uCrumbling;

uniform vec2 uWindowSize;

void FLWFinalizeNormal(inout vec3 normal) {
    // noop
}

#if defined(VERTEX_SHADER)
void FLWFinalizeWorldPos(inout vec4 worldPos) {
    #if defined(USE_FOG)
    FragDistance = cylindrical_distance(worldPos.xyz, uCameraPos);
    #endif

    gl_Position = uViewProjection * worldPos;
}

#elif defined(FRAGMENT_SHADER)

out vec4 fragColor;

vec4 FLWBlockTexture(vec2 texCoords) {
    vec4 cr = texture(uCrumbling, texCoords * uTextureScale);
    float diffuseAlpha = texture(uBlockAtlas, texCoords).a;
    cr.a = cr.a * diffuseAlpha;
    return cr;
}

void FLWFinalizeColor(vec4 color) {
    #if defined(USE_FOG)
    float a = color.a;
    float fog = clamp(FLWFogFactor(), 0., 1.);

    color = mix(uFogColor, color, fog);
    color.a = a;
    #endif

    if (color.a < 0.1) {
        discard;
    }

    fragColor = color;
}

vec4 FLWLight(vec2 lightCoords) {
    return vec4(1.);
}
#endif


mat4 rotate(vec3 axis, float angle) {
    float s = sin(angle);
    float c = cos(angle);
    float oc = 1. - c;

    vec3 sa = axis * s;

    mat4 mr = mat4(1.);
    mr[0].xyz = oc * axis.xxz * axis.xyx + vec3(c, sa.z, -sa.y);
    mr[1].xyz = oc * axis.xyy * axis.yyz + vec3(-sa.z, c, sa.x);
    mr[2].xyz = oc * axis.zyz * axis.xzz + vec3(sa.y, -sa.x, c);

    return mr;
}

mat4 rotation(vec3 rot) {
    return rotate(vec3(0., 1., 0.), rot.y) * rotate(vec3(0., 0., 1.), rot.z) * rotate(vec3(1., 0., 0.), rot.x);
}

mat3 modelToNormal(mat4 mat) {
    // Discard the edges. This won't be accurate for scaled or skewed matrices,
    // but we don't have to work with those often.
    mat3 m;
    m[0] = mat[0].xyz;
    m[1] = mat[1].xyz;
    m[2] = mat[2].xyz;
    return m;
}

#define PIOVER2 1.5707963268

vec4 quat(vec3 axis, float angle) {
    float halfAngle = angle * PIOVER2 / 180.0;
    vec2 cs = sin(vec2(PIOVER2 - halfAngle, halfAngle)); // compute sin and cos in one instruction
    return vec4(axis.xyz * cs.y,  cs.x);
}

vec4 quatMult(vec4 q1, vec4 q2) {
    // disgustingly vectorized quaternion multiplication
    vec4 a = q1.w * q2.xyzw;
    vec4 b = q1.x * q2.wzxy * vec4(1., -1., 1., -1.);
    vec4 c = q1.y * q2.zwxy * vec4(1., 1., -1., -1.);
    vec4 d = q1.z * q2.yxwz * vec4(-1., 1., 1., -1.);

    return a + b + c + d;
}

vec3 rotateVertexByQuat(vec3 v, vec4 q) {
    vec3 i = q.xyz;
    return v + 2.0 * cross(i, cross(i, v) + q.w * v);
}

vec3 rotateAbout(vec3 v, vec3 axis, float angle) {
    return rotateVertexByQuat(v, quat(axis, angle));
}

float diffuse(vec3 normal) {
    vec3 n2 = normal * normal * vec3(.6, .25, .8);
    return min(n2.x + n2.y * (3. + normal.y) + n2.z, 1.);
}
struct Vertex {
    vec3 pos;
    vec2 texCoords;
    vec3 normal;
};

struct BlockFrag {
    vec2 texCoords;
    vec4 color;
    float diffuse;
    vec2 light;
};

#if defined(FRAGMENT_SHADER)
void fragment(BlockFrag r) {
    vec4 tex = FLWBlockTexture(r.texCoords);

    vec4 color = vec4(tex.rgb * FLWLight(r.light).rgb * r.diffuse, tex.a) * r.color;

    FLWFinalizeColor(color);
}
#endif
#define PI 3.1415926538





struct Flap {
    vec3 instancePos;
    vec2 light;
    vec3 segmentOffset;
    vec3 pivot;
    float horizontalAngle;
    float intensity;
    float flapScale;
    float flapness;
};




#if defined(VERTEX_SHADER)

float toRad(float degrees) {
    return fract(degrees / 360.) * PI * 2.;
}

float getFlapAngle(float flapness, float intensity, float scale) {
    float absFlap = abs(flapness);

    float angle = sin((1. - absFlap) * PI * intensity) * 30. * flapness * scale;

    float halfAngle = angle * 0.5;

    float which = step(0., flapness); // 0 if negative, 1 if positive
    float degrees = which * halfAngle + (1. - which) * angle; // branchless conditional multiply

    return degrees;
}

BlockFrag vertex(Vertex v, Flap flap) {
    float flapAngle = getFlapAngle(flap.flapness, flap.intensity, flap.flapScale);

    vec4 orientation = quat(vec3(0., 1., 0.), -flap.horizontalAngle);
    vec4 flapRotation = quat(vec3(1., 0., 0.), flapAngle);

    vec3 rotated = rotateVertexByQuat(v.pos - flap.pivot, flapRotation) + flap.pivot + flap.segmentOffset;
    rotated = rotateVertexByQuat(rotated - .5, orientation) + flap.instancePos + .5;

    vec4 worldPos = vec4(rotated, 1.);
    vec3 norm = rotateVertexByQuat(rotateVertexByQuat(v.normal, flapRotation), orientation);

    FLWFinalizeWorldPos(worldPos);
    FLWFinalizeNormal(norm);

    BlockFrag b;
    b.diffuse = diffuse(norm);
    b.texCoords = v.texCoords;
    b.light = flap.light;
    #if defined(DEBUG_NORMAL)
    b.color = vec4(norm, 1.);
    #else
    b.color = vec4(1.);
    #endif
    return b;
}
#endif

in vec2 v2f_texCoords;
in vec4 v2f_color;
in float v2f_diffuse;
in vec2 v2f_light;
void main() {
BlockFrag o;
o.texCoords = v2f_texCoords;
o.color = v2f_color;
o.diffuse = v2f_diffuse;
o.light = v2f_light;
fragment(o);
}
[16:19:41] [Render thread/ERROR]: Shader compilation log for create:belt: WARNING: 0:2: extension 'GL_ARB_conservative_depth' is not supported

[16:19:41] [Render thread/ERROR]: #version 150
#extension GL_ARB_conservative_depth : enable
#define VERTEX_SHADER
#if defined(VERTEX_SHADER)
out float FragDistance;
#elif defined(FRAGMENT_SHADER)
in float FragDistance;
#endif
uniform vec4 uFogColor;
uniform vec2 uFogRange;

float cylindrical_distance(vec3 worldPos, vec3 cameraPos) {
    float distXZ = length(worldPos.xz - cameraPos.xz);
    float distY = abs(worldPos.y - cameraPos.y);
    return max(distXZ, distY);
}

float cylindrical_distance(vec3 worldPos) {
    float distXZ = length(worldPos.xz);
    float distY = abs(worldPos.y);
    return max(distXZ, distY);
}

float FLWFogFactor() {
    return (uFogRange.y - FragDistance) / (uFogRange.y - uFogRange.x);
}


uniform float uTime;
uniform mat4 uViewProjection;
uniform vec3 uCameraPos;

uniform vec2 uTextureScale;
uniform sampler2D uBlockAtlas;
uniform sampler2D uLightMap;
uniform sampler2D uCrumbling;

uniform vec2 uWindowSize;

void FLWFinalizeNormal(inout vec3 normal) {
    // noop
}

#if defined(VERTEX_SHADER)
void FLWFinalizeWorldPos(inout vec4 worldPos) {
    #if defined(USE_FOG)
    FragDistance = cylindrical_distance(worldPos.xyz, uCameraPos);
    #endif

    gl_Position = uViewProjection * worldPos;
}

#elif defined(FRAGMENT_SHADER)

out vec4 fragColor;

vec4 FLWBlockTexture(vec2 texCoords) {
    vec4 cr = texture(uCrumbling, texCoords * uTextureScale);
    float diffuseAlpha = texture(uBlockAtlas, texCoords).a;
    cr.a = cr.a * diffuseAlpha;
    return cr;
}

void FLWFinalizeColor(vec4 color) {
    #if defined(USE_FOG)
    float a = color.a;
    float fog = clamp(FLWFogFactor(), 0., 1.);

    color = mix(uFogColor, color, fog);
    color.a = a;
    #endif

    if (color.a < 0.1) {
        discard;
    }

    fragColor = color;
}

vec4 FLWLight(vec2 lightCoords) {
    return vec4(1.);
}
#endif


#define PIOVER2 1.5707963268

vec4 quat(vec3 axis, float angle) {
    float halfAngle = angle * PIOVER2 / 180.0;
    vec2 cs = sin(vec2(PIOVER2 - halfAngle, halfAngle)); // compute sin and cos in one instruction
    return vec4(axis.xyz * cs.y,  cs.x);
}

vec4 quatMult(vec4 q1, vec4 q2) {
    // disgustingly vectorized quaternion multiplication
    vec4 a = q1.w * q2.xyzw;
    vec4 b = q1.x * q2.wzxy * vec4(1., -1., 1., -1.);
    vec4 c = q1.y * q2.zwxy * vec4(1., 1., -1., -1.);
    vec4 d = q1.z * q2.yxwz * vec4(-1., 1., 1., -1.);

    return a + b + c + d;
}

vec3 rotateVertexByQuat(vec3 v, vec4 q) {
    vec3 i = q.xyz;
    return v + 2.0 * cross(i, cross(i, v) + q.w * v);
}

vec3 rotateAbout(vec3 v, vec3 axis, float angle) {
    return rotateVertexByQuat(v, quat(axis, angle));
}

mat4 rotate(vec3 axis, float angle) {
    float s = sin(angle);
    float c = cos(angle);
    float oc = 1. - c;

    vec3 sa = axis * s;

    mat4 mr = mat4(1.);
    mr[0].xyz = oc * axis.xxz * axis.xyx + vec3(c, sa.z, -sa.y);
    mr[1].xyz = oc * axis.xyy * axis.yyz + vec3(-sa.z, c, sa.x);
    mr[2].xyz = oc * axis.zyz * axis.xzz + vec3(sa.y, -sa.x, c);

    return mr;
}

mat4 rotation(vec3 rot) {
    return rotate(vec3(0., 1., 0.), rot.y) * rotate(vec3(0., 0., 1.), rot.z) * rotate(vec3(1., 0., 0.), rot.x);
}

mat3 modelToNormal(mat4 mat) {
    // Discard the edges. This won't be accurate for scaled or skewed matrices,
    // but we don't have to work with those often.
    mat3 m;
    m[0] = mat[0].xyz;
    m[1] = mat[1].xyz;
    m[2] = mat[2].xyz;
    return m;
}

float diffuse(vec3 normal) {
    vec3 n2 = normal * normal * vec3(.6, .25, .8);
    return min(n2.x + n2.y * (3. + normal.y) + n2.z, 1.);
}
struct Vertex {
    vec3 pos;
    vec2 texCoords;
    vec3 normal;
};

struct BlockFrag {
    vec2 texCoords;
    vec4 color;
    float diffuse;
    vec2 light;
};

#if defined(FRAGMENT_SHADER)
void fragment(BlockFrag r) {
    vec4 tex = FLWBlockTexture(r.texCoords);

    vec4 color = vec4(tex.rgb * FLWLight(r.light).rgb * r.diffuse, tex.a) * r.color;

    FLWFinalizeColor(color);
}
#endif
#define PI 3.1415926538





struct Belt {
    vec2 light;
    vec4 color;
    vec3 pos;
    float speed;
    float offset;
    vec4 rotation;
    vec2 sourceTexture;
    vec4 scrollTexture;
    float scrollMult;
};




#if defined(VERTEX_SHADER)
BlockFrag vertex(Vertex v, Belt instance) {
    vec3 rotated = rotateVertexByQuat(v.pos - .5, instance.rotation) + instance.pos + .5;

    vec4 worldPos = vec4(rotated, 1.);

    vec3 norm = rotateVertexByQuat(v.normal, instance.rotation);

    FLWFinalizeWorldPos(worldPos);
    FLWFinalizeNormal(norm);

    float scrollSize = instance.scrollTexture.w - instance.scrollTexture.y;
    float scroll = fract(instance.speed * uTime / (31.5 * 16.) + instance.offset) * scrollSize * instance.scrollMult;

    BlockFrag b;
    b.diffuse = diffuse(norm);
    b.texCoords = v.texCoords - instance.sourceTexture + instance.scrollTexture.xy + vec2(0, scroll);
    b.light = instance.light;

    #if defined(DEBUG_RAINBOW)
    b.color = instance.color;
    #elif defined(DEBUG_NORMAL)
    b.color = vec4(norm, 1.);
    #else
    b.color = vec4(1.);
    #endif

    return b;
}
#endif

in vec3 a_v_pos;
in vec2 a_v_texCoords;
in vec3 a_v_normal;
in vec2 a_i_light;
in vec4 a_i_color;
in vec3 a_i_pos;
in float a_i_speed;
in float a_i_offset;
in vec4 a_i_rotation;
in vec2 a_i_sourceTexture;
in vec4 a_i_scrollTexture;
in float a_i_scrollMult;
out vec2 v2f_texCoords;
out vec4 v2f_color;
out float v2f_diffuse;
out vec2 v2f_light;
void main() {
Vertex v;
v.pos = a_v_pos;
v.texCoords = a_v_texCoords;
v.normal = a_v_normal;
Belt i;
i.light = a_i_light;
i.color = a_i_color;
i.pos = a_i_pos;
i.speed = a_i_speed;
i.offset = a_i_offset;
i.rotation = a_i_rotation;
i.sourceTexture = a_i_sourceTexture;
i.scrollTexture = a_i_scrollTexture;
i.scrollMult = a_i_scrollMult;
BlockFrag o = vertex(v, i);
v2f_texCoords = o.texCoords;
v2f_color = o.color;
v2f_diffuse = o.diffuse;
v2f_light = o.light;
}
[16:19:41] [Render thread/ERROR]: Shader compilation log for create:belt: WARNING: 0:2: extension 'GL_ARB_conservative_depth' is not supported

[16:19:41] [Render thread/ERROR]: #version 150
#extension GL_ARB_conservative_depth : enable
#define FRAGMENT_SHADER
#if defined(VERTEX_SHADER)
out float FragDistance;
#elif defined(FRAGMENT_SHADER)
in float FragDistance;
#endif
uniform vec4 uFogColor;
uniform vec2 uFogRange;

float cylindrical_distance(vec3 worldPos, vec3 cameraPos) {
    float distXZ = length(worldPos.xz - cameraPos.xz);
    float distY = abs(worldPos.y - cameraPos.y);
    return max(distXZ, distY);
}

float cylindrical_distance(vec3 worldPos) {
    float distXZ = length(worldPos.xz);
    float distY = abs(worldPos.y);
    return max(distXZ, distY);
}

float FLWFogFactor() {
    return (uFogRange.y - FragDistance) / (uFogRange.y - uFogRange.x);
}


uniform float uTime;
uniform mat4 uViewProjection;
uniform vec3 uCameraPos;

uniform vec2 uTextureScale;
uniform sampler2D uBlockAtlas;
uniform sampler2D uLightMap;
uniform sampler2D uCrumbling;

uniform vec2 uWindowSize;

void FLWFinalizeNormal(inout vec3 normal) {
    // noop
}

#if defined(VERTEX_SHADER)
void FLWFinalizeWorldPos(inout vec4 worldPos) {
    #if defined(USE_FOG)
    FragDistance = cylindrical_distance(worldPos.xyz, uCameraPos);
    #endif

    gl_Position = uViewProjection * worldPos;
}

#elif defined(FRAGMENT_SHADER)

out vec4 fragColor;

vec4 FLWBlockTexture(vec2 texCoords) {
    vec4 cr = texture(uCrumbling, texCoords * uTextureScale);
    float diffuseAlpha = texture(uBlockAtlas, texCoords).a;
    cr.a = cr.a * diffuseAlpha;
    return cr;
}

void FLWFinalizeColor(vec4 color) {
    #if defined(USE_FOG)
    float a = color.a;
    float fog = clamp(FLWFogFactor(), 0., 1.);

    color = mix(uFogColor, color, fog);
    color.a = a;
    #endif

    if (color.a < 0.1) {
        discard;
    }

    fragColor = color;
}

vec4 FLWLight(vec2 lightCoords) {
    return vec4(1.);
}
#endif


#define PIOVER2 1.5707963268

vec4 quat(vec3 axis, float angle) {
    float halfAngle = angle * PIOVER2 / 180.0;
    vec2 cs = sin(vec2(PIOVER2 - halfAngle, halfAngle)); // compute sin and cos in one instruction
    return vec4(axis.xyz * cs.y,  cs.x);
}

vec4 quatMult(vec4 q1, vec4 q2) {
    // disgustingly vectorized quaternion multiplication
    vec4 a = q1.w * q2.xyzw;
    vec4 b = q1.x * q2.wzxy * vec4(1., -1., 1., -1.);
    vec4 c = q1.y * q2.zwxy * vec4(1., 1., -1., -1.);
    vec4 d = q1.z * q2.yxwz * vec4(-1., 1., 1., -1.);

    return a + b + c + d;
}

vec3 rotateVertexByQuat(vec3 v, vec4 q) {
    vec3 i = q.xyz;
    return v + 2.0 * cross(i, cross(i, v) + q.w * v);
}

vec3 rotateAbout(vec3 v, vec3 axis, float angle) {
    return rotateVertexByQuat(v, quat(axis, angle));
}

mat4 rotate(vec3 axis, float angle) {
    float s = sin(angle);
    float c = cos(angle);
    float oc = 1. - c;

    vec3 sa = axis * s;

    mat4 mr = mat4(1.);
    mr[0].xyz = oc * axis.xxz * axis.xyx + vec3(c, sa.z, -sa.y);
    mr[1].xyz = oc * axis.xyy * axis.yyz + vec3(-sa.z, c, sa.x);
    mr[2].xyz = oc * axis.zyz * axis.xzz + vec3(sa.y, -sa.x, c);

    return mr;
}

mat4 rotation(vec3 rot) {
    return rotate(vec3(0., 1., 0.), rot.y) * rotate(vec3(0., 0., 1.), rot.z) * rotate(vec3(1., 0., 0.), rot.x);
}

mat3 modelToNormal(mat4 mat) {
    // Discard the edges. This won't be accurate for scaled or skewed matrices,
    // but we don't have to work with those often.
    mat3 m;
    m[0] = mat[0].xyz;
    m[1] = mat[1].xyz;
    m[2] = mat[2].xyz;
    return m;
}

float diffuse(vec3 normal) {
    vec3 n2 = normal * normal * vec3(.6, .25, .8);
    return min(n2.x + n2.y * (3. + normal.y) + n2.z, 1.);
}
struct Vertex {
    vec3 pos;
    vec2 texCoords;
    vec3 normal;
};

struct BlockFrag {
    vec2 texCoords;
    vec4 color;
    float diffuse;
    vec2 light;
};

#if defined(FRAGMENT_SHADER)
void fragment(BlockFrag r) {
    vec4 tex = FLWBlockTexture(r.texCoords);

    vec4 color = vec4(tex.rgb * FLWLight(r.light).rgb * r.diffuse, tex.a) * r.color;

    FLWFinalizeColor(color);
}
#endif
#define PI 3.1415926538





struct Belt {
    vec2 light;
    vec4 color;
    vec3 pos;
    float speed;
    float offset;
    vec4 rotation;
    vec2 sourceTexture;
    vec4 scrollTexture;
    float scrollMult;
};




#if defined(VERTEX_SHADER)
BlockFrag vertex(Vertex v, Belt instance) {
    vec3 rotated = rotateVertexByQuat(v.pos - .5, instance.rotation) + instance.pos + .5;

    vec4 worldPos = vec4(rotated, 1.);

    vec3 norm = rotateVertexByQuat(v.normal, instance.rotation);

    FLWFinalizeWorldPos(worldPos);
    FLWFinalizeNormal(norm);

    float scrollSize = instance.scrollTexture.w - instance.scrollTexture.y;
    float scroll = fract(instance.speed * uTime / (31.5 * 16.) + instance.offset) * scrollSize * instance.scrollMult;

    BlockFrag b;
    b.diffuse = diffuse(norm);
    b.texCoords = v.texCoords - instance.sourceTexture + instance.scrollTexture.xy + vec2(0, scroll);
    b.light = instance.light;

    #if defined(DEBUG_RAINBOW)
    b.color = instance.color;
    #elif defined(DEBUG_NORMAL)
    b.color = vec4(norm, 1.);
    #else
    b.color = vec4(1.);
    #endif

    return b;
}
#endif

in vec2 v2f_texCoords;
in vec4 v2f_color;
in float v2f_diffuse;
in vec2 v2f_light;
void main() {
BlockFrag o;
o.texCoords = v2f_texCoords;
o.color = v2f_color;
o.diffuse = v2f_diffuse;
o.light = v2f_light;
fragment(o);
}
[16:19:41] [Render thread/ERROR]: Shader compilation log for create:belt: WARNING: 0:2: extension 'GL_ARB_conservative_depth' is not supported

[16:19:41] [Render thread/ERROR]: #version 150
#extension GL_ARB_conservative_depth : enable
#define VERTEX_SHADER
#define DEBUG_RAINBOW
#if defined(VERTEX_SHADER)
out float FragDistance;
#elif defined(FRAGMENT_SHADER)
in float FragDistance;
#endif
uniform vec4 uFogColor;
uniform vec2 uFogRange;

float cylindrical_distance(vec3 worldPos, vec3 cameraPos) {
    float distXZ = length(worldPos.xz - cameraPos.xz);
    float distY = abs(worldPos.y - cameraPos.y);
    return max(distXZ, distY);
}

float cylindrical_distance(vec3 worldPos) {
    float distXZ = length(worldPos.xz);
    float distY = abs(worldPos.y);
    return max(distXZ, distY);
}

float FLWFogFactor() {
    return (uFogRange.y - FragDistance) / (uFogRange.y - uFogRange.x);
}


uniform float uTime;
uniform mat4 uViewProjection;
uniform vec3 uCameraPos;

uniform vec2 uTextureScale;
uniform sampler2D uBlockAtlas;
uniform sampler2D uLightMap;
uniform sampler2D uCrumbling;

uniform vec2 uWindowSize;

void FLWFinalizeNormal(inout vec3 normal) {
    // noop
}

#if defined(VERTEX_SHADER)
void FLWFinalizeWorldPos(inout vec4 worldPos) {
    #if defined(USE_FOG)
    FragDistance = cylindrical_distance(worldPos.xyz, uCameraPos);
    #endif

    gl_Position = uViewProjection * worldPos;
}

#elif defined(FRAGMENT_SHADER)

out vec4 fragColor;

vec4 FLWBlockTexture(vec2 texCoords) {
    vec4 cr = texture(uCrumbling, texCoords * uTextureScale);
    float diffuseAlpha = texture(uBlockAtlas, texCoords).a;
    cr.a = cr.a * diffuseAlpha;
    return cr;
}

void FLWFinalizeColor(vec4 color) {
    #if defined(USE_FOG)
    float a = color.a;
    float fog = clamp(FLWFogFactor(), 0., 1.);

    color = mix(uFogColor, color, fog);
    color.a = a;
    #endif

    if (color.a < 0.1) {
        discard;
    }

    fragColor = color;
}

vec4 FLWLight(vec2 lightCoords) {
    return vec4(1.);
}
#endif


#define PIOVER2 1.5707963268

vec4 quat(vec3 axis, float angle) {
    float halfAngle = angle * PIOVER2 / 180.0;
    vec2 cs = sin(vec2(PIOVER2 - halfAngle, halfAngle)); // compute sin and cos in one instruction
    return vec4(axis.xyz * cs.y,  cs.x);
}

vec4 quatMult(vec4 q1, vec4 q2) {
    // disgustingly vectorized quaternion multiplication
    vec4 a = q1.w * q2.xyzw;
    vec4 b = q1.x * q2.wzxy * vec4(1., -1., 1., -1.);
    vec4 c = q1.y * q2.zwxy * vec4(1., 1., -1., -1.);
    vec4 d = q1.z * q2.yxwz * vec4(-1., 1., 1., -1.);

    return a + b + c + d;
}

vec3 rotateVertexByQuat(vec3 v, vec4 q) {
    vec3 i = q.xyz;
    return v + 2.0 * cross(i, cross(i, v) + q.w * v);
}

vec3 rotateAbout(vec3 v, vec3 axis, float angle) {
    return rotateVertexByQuat(v, quat(axis, angle));
}

mat4 rotate(vec3 axis, float angle) {
    float s = sin(angle);
    float c = cos(angle);
    float oc = 1. - c;

    vec3 sa = axis * s;

    mat4 mr = mat4(1.);
    mr[0].xyz = oc * axis.xxz * axis.xyx + vec3(c, sa.z, -sa.y);
    mr[1].xyz = oc * axis.xyy * axis.yyz + vec3(-sa.z, c, sa.x);
    mr[2].xyz = oc * axis.zyz * axis.xzz + vec3(sa.y, -sa.x, c);

    return mr;
}

mat4 rotation(vec3 rot) {
    return rotate(vec3(0., 1., 0.), rot.y) * rotate(vec3(0., 0., 1.), rot.z) * rotate(vec3(1., 0., 0.), rot.x);
}

mat3 modelToNormal(mat4 mat) {
    // Discard the edges. This won't be accurate for scaled or skewed matrices,
    // but we don't have to work with those often.
    mat3 m;
    m[0] = mat[0].xyz;
    m[1] = mat[1].xyz;
    m[2] = mat[2].xyz;
    return m;
}

float diffuse(vec3 normal) {
    vec3 n2 = normal * normal * vec3(.6, .25, .8);
    return min(n2.x + n2.y * (3. + normal.y) + n2.z, 1.);
}
struct Vertex {
    vec3 pos;
    vec2 texCoords;
    vec3 normal;
};

struct BlockFrag {
    vec2 texCoords;
    vec4 color;
    float diffuse;
    vec2 light;
};

#if defined(FRAGMENT_SHADER)
void fragment(BlockFrag r) {
    vec4 tex = FLWBlockTexture(r.texCoords);

    vec4 color = vec4(tex.rgb * FLWLight(r.light).rgb * r.diffuse, tex.a) * r.color;

    FLWFinalizeColor(color);
}
#endif
#define PI 3.1415926538





struct Belt {
    vec2 light;
    vec4 color;
    vec3 pos;
    float speed;
    float offset;
    vec4 rotation;
    vec2 sourceTexture;
    vec4 scrollTexture;
    float scrollMult;
};




#if defined(VERTEX_SHADER)
BlockFrag vertex(Vertex v, Belt instance) {
    vec3 rotated = rotateVertexByQuat(v.pos - .5, instance.rotation) + instance.pos + .5;

    vec4 worldPos = vec4(rotated, 1.);

    vec3 norm = rotateVertexByQuat(v.normal, instance.rotation);

    FLWFinalizeWorldPos(worldPos);
    FLWFinalizeNormal(norm);

    float scrollSize = instance.scrollTexture.w - instance.scrollTexture.y;
    float scroll = fract(instance.speed * uTime / (31.5 * 16.) + instance.offset) * scrollSize * instance.scrollMult;

    BlockFrag b;
    b.diffuse = diffuse(norm);
    b.texCoords = v.texCoords - instance.sourceTexture + instance.scrollTexture.xy + vec2(0, scroll);
    b.light = instance.light;

    #if defined(DEBUG_RAINBOW)
    b.color = instance.color;
    #elif defined(DEBUG_NORMAL)
    b.color = vec4(norm, 1.);
    #else
    b.color = vec4(1.);
    #endif

    return b;
}
#endif

in vec3 a_v_pos;
in vec2 a_v_texCoords;
in vec3 a_v_normal;
in vec2 a_i_light;
in vec4 a_i_color;
in vec3 a_i_pos;
in float a_i_speed;
in float a_i_offset;
in vec4 a_i_rotation;
in vec2 a_i_sourceTexture;
in vec4 a_i_scrollTexture;
in float a_i_scrollMult;
out vec2 v2f_texCoords;
out vec4 v2f_color;
out float v2f_diffuse;
out vec2 v2f_light;
void main() {
Vertex v;
v.pos = a_v_pos;
v.texCoords = a_v_texCoords;
v.normal = a_v_normal;
Belt i;
i.light = a_i_light;
i.color = a_i_color;
i.pos = a_i_pos;
i.speed = a_i_speed;
i.offset = a_i_offset;
i.rotation = a_i_rotation;
i.sourceTexture = a_i_sourceTexture;
i.scrollTexture = a_i_scrollTexture;
i.scrollMult = a_i_scrollMult;
BlockFrag o = vertex(v, i);
v2f_texCoords = o.texCoords;
v2f_color = o.color;
v2f_diffuse = o.diffuse;
v2f_light = o.light;
}
[16:19:41] [Render thread/ERROR]: Shader compilation log for create:belt: WARNING: 0:2: extension 'GL_ARB_conservative_depth' is not supported

[16:19:41] [Render thread/ERROR]: #version 150
#extension GL_ARB_conservative_depth : enable
#define FRAGMENT_SHADER
#define DEBUG_RAINBOW
#if defined(VERTEX_SHADER)
out float FragDistance;
#elif defined(FRAGMENT_SHADER)
in float FragDistance;
#endif
uniform vec4 uFogColor;
uniform vec2 uFogRange;

float cylindrical_distance(vec3 worldPos, vec3 cameraPos) {
    float distXZ = length(worldPos.xz - cameraPos.xz);
    float distY = abs(worldPos.y - cameraPos.y);
    return max(distXZ, distY);
}

float cylindrical_distance(vec3 worldPos) {
    float distXZ = length(worldPos.xz);
    float distY = abs(worldPos.y);
    return max(distXZ, distY);
}

float FLWFogFactor() {
    return (uFogRange.y - FragDistance) / (uFogRange.y - uFogRange.x);
}


uniform float uTime;
uniform mat4 uViewProjection;
uniform vec3 uCameraPos;

uniform vec2 uTextureScale;
uniform sampler2D uBlockAtlas;
uniform sampler2D uLightMap;
uniform sampler2D uCrumbling;

uniform vec2 uWindowSize;

void FLWFinalizeNormal(inout vec3 normal) {
    // noop
}

#if defined(VERTEX_SHADER)
void FLWFinalizeWorldPos(inout vec4 worldPos) {
    #if defined(USE_FOG)
    FragDistance = cylindrical_distance(worldPos.xyz, uCameraPos);
    #endif

    gl_Position = uViewProjection * worldPos;
}

#elif defined(FRAGMENT_SHADER)

out vec4 fragColor;

vec4 FLWBlockTexture(vec2 texCoords) {
    vec4 cr = texture(uCrumbling, texCoords * uTextureScale);
    float diffuseAlpha = texture(uBlockAtlas, texCoords).a;
    cr.a = cr.a * diffuseAlpha;
    return cr;
}

void FLWFinalizeColor(vec4 color) {
    #if defined(USE_FOG)
    float a = color.a;
    float fog = clamp(FLWFogFactor(), 0., 1.);

    color = mix(uFogColor, color, fog);
    color.a = a;
    #endif

    if (color.a < 0.1) {
        discard;
    }

    fragColor = color;
}

vec4 FLWLight(vec2 lightCoords) {
    return vec4(1.);
}
#endif


#define PIOVER2 1.5707963268

vec4 quat(vec3 axis, float angle) {
    float halfAngle = angle * PIOVER2 / 180.0;
    vec2 cs = sin(vec2(PIOVER2 - halfAngle, halfAngle)); // compute sin and cos in one instruction
    return vec4(axis.xyz * cs.y,  cs.x);
}

vec4 quatMult(vec4 q1, vec4 q2) {
    // disgustingly vectorized quaternion multiplication
    vec4 a = q1.w * q2.xyzw;
    vec4 b = q1.x * q2.wzxy * vec4(1., -1., 1., -1.);
    vec4 c = q1.y * q2.zwxy * vec4(1., 1., -1., -1.);
    vec4 d = q1.z * q2.yxwz * vec4(-1., 1., 1., -1.);

    return a + b + c + d;
}

vec3 rotateVertexByQuat(vec3 v, vec4 q) {
    vec3 i = q.xyz;
    return v + 2.0 * cross(i, cross(i, v) + q.w * v);
}

vec3 rotateAbout(vec3 v, vec3 axis, float angle) {
    return rotateVertexByQuat(v, quat(axis, angle));
}

mat4 rotate(vec3 axis, float angle) {
    float s = sin(angle);
    float c = cos(angle);
    float oc = 1. - c;

    vec3 sa = axis * s;

    mat4 mr = mat4(1.);
    mr[0].xyz = oc * axis.xxz * axis.xyx + vec3(c, sa.z, -sa.y);
    mr[1].xyz = oc * axis.xyy * axis.yyz + vec3(-sa.z, c, sa.x);
    mr[2].xyz = oc * axis.zyz * axis.xzz + vec3(sa.y, -sa.x, c);

    return mr;
}

mat4 rotation(vec3 rot) {
    return rotate(vec3(0., 1., 0.), rot.y) * rotate(vec3(0., 0., 1.), rot.z) * rotate(vec3(1., 0., 0.), rot.x);
}

mat3 modelToNormal(mat4 mat) {
    // Discard the edges. This won't be accurate for scaled or skewed matrices,
    // but we don't have to work with those often.
    mat3 m;
    m[0] = mat[0].xyz;
    m[1] = mat[1].xyz;
    m[2] = mat[2].xyz;
    return m;
}

float diffuse(vec3 normal) {
    vec3 n2 = normal * normal * vec3(.6, .25, .8);
    return min(n2.x + n2.y * (3. + normal.y) + n2.z, 1.);
}
struct Vertex {
    vec3 pos;
    vec2 texCoords;
    vec3 normal;
};

struct BlockFrag {
    vec2 texCoords;
    vec4 color;
    float diffuse;
    vec2 light;
};

#if defined(FRAGMENT_SHADER)
void fragment(BlockFrag r) {
    vec4 tex = FLWBlockTexture(r.texCoords);

    vec4 color = vec4(tex.rgb * FLWLight(r.light).rgb * r.diffuse, tex.a) * r.color;

    FLWFinalizeColor(color);
}
#endif
#define PI 3.1415926538





struct Belt {
    vec2 light;
    vec4 color;
    vec3 pos;
    float speed;
    float offset;
    vec4 rotation;
    vec2 sourceTexture;
    vec4 scrollTexture;
    float scrollMult;
};




#if defined(VERTEX_SHADER)
BlockFrag vertex(Vertex v, Belt instance) {
    vec3 rotated = rotateVertexByQuat(v.pos - .5, instance.rotation) + instance.pos + .5;

    vec4 worldPos = vec4(rotated, 1.);

    vec3 norm = rotateVertexByQuat(v.normal, instance.rotation);

    FLWFinalizeWorldPos(worldPos);
    FLWFinalizeNormal(norm);

    float scrollSize = instance.scrollTexture.w - instance.scrollTexture.y;
    float scroll = fract(instance.speed * uTime / (31.5 * 16.) + instance.offset) * scrollSize * instance.scrollMult;

    BlockFrag b;
    b.diffuse = diffuse(norm);
    b.texCoords = v.texCoords - instance.sourceTexture + instance.scrollTexture.xy + vec2(0, scroll);
    b.light = instance.light;

    #if defined(DEBUG_RAINBOW)
    b.color = instance.color;
    #elif defined(DEBUG_NORMAL)
    b.color = vec4(norm, 1.);
    #else
    b.color = vec4(1.);
    #endif

    return b;
}
#endif

in vec2 v2f_texCoords;
in vec4 v2f_color;
in float v2f_diffuse;
in vec2 v2f_light;
void main() {
BlockFrag o;
o.texCoords = v2f_texCoords;
o.color = v2f_color;
o.diffuse = v2f_diffuse;
o.light = v2f_light;
fragment(o);
}
[16:19:41] [Render thread/ERROR]: Shader compilation log for create:belt: WARNING: 0:2: extension 'GL_ARB_conservative_depth' is not supported

[16:19:41] [Render thread/ERROR]: #version 150
#extension GL_ARB_conservative_depth : enable
#define VERTEX_SHADER
#define DEBUG_NORMAL
#if defined(VERTEX_SHADER)
out float FragDistance;
#elif defined(FRAGMENT_SHADER)
in float FragDistance;
#endif
uniform vec4 uFogColor;
uniform vec2 uFogRange;

float cylindrical_distance(vec3 worldPos, vec3 cameraPos) {
    float distXZ = length(worldPos.xz - cameraPos.xz);
    float distY = abs(worldPos.y - cameraPos.y);
    return max(distXZ, distY);
}

float cylindrical_distance(vec3 worldPos) {
    float distXZ = length(worldPos.xz);
    float distY = abs(worldPos.y);
    return max(distXZ, distY);
}

float FLWFogFactor() {
    return (uFogRange.y - FragDistance) / (uFogRange.y - uFogRange.x);
}


uniform float uTime;
uniform mat4 uViewProjection;
uniform vec3 uCameraPos;

uniform vec2 uTextureScale;
uniform sampler2D uBlockAtlas;
uniform sampler2D uLightMap;
uniform sampler2D uCrumbling;

uniform vec2 uWindowSize;

void FLWFinalizeNormal(inout vec3 normal) {
    // noop
}

#if defined(VERTEX_SHADER)
void FLWFinalizeWorldPos(inout vec4 worldPos) {
    #if defined(USE_FOG)
    FragDistance = cylindrical_distance(worldPos.xyz, uCameraPos);
    #endif

    gl_Position = uViewProjection * worldPos;
}

#elif defined(FRAGMENT_SHADER)

out vec4 fragColor;

vec4 FLWBlockTexture(vec2 texCoords) {
    vec4 cr = texture(uCrumbling, texCoords * uTextureScale);
    float diffuseAlpha = texture(uBlockAtlas, texCoords).a;
    cr.a = cr.a * diffuseAlpha;
    return cr;
}

void FLWFinalizeColor(vec4 color) {
    #if defined(USE_FOG)
    float a = color.a;
    float fog = clamp(FLWFogFactor(), 0., 1.);

    color = mix(uFogColor, color, fog);
    color.a = a;
    #endif

    if (color.a < 0.1) {
        discard;
    }

    fragColor = color;
}

vec4 FLWLight(vec2 lightCoords) {
    return vec4(1.);
}
#endif


#define PIOVER2 1.5707963268

vec4 quat(vec3 axis, float angle) {
    float halfAngle = angle * PIOVER2 / 180.0;
    vec2 cs = sin(vec2(PIOVER2 - halfAngle, halfAngle)); // compute sin and cos in one instruction
    return vec4(axis.xyz * cs.y,  cs.x);
}

vec4 quatMult(vec4 q1, vec4 q2) {
    // disgustingly vectorized quaternion multiplication
    vec4 a = q1.w * q2.xyzw;
    vec4 b = q1.x * q2.wzxy * vec4(1., -1., 1., -1.);
    vec4 c = q1.y * q2.zwxy * vec4(1., 1., -1., -1.);
    vec4 d = q1.z * q2.yxwz * vec4(-1., 1., 1., -1.);

    return a + b + c + d;
}

vec3 rotateVertexByQuat(vec3 v, vec4 q) {
    vec3 i = q.xyz;
    return v + 2.0 * cross(i, cross(i, v) + q.w * v);
}

vec3 rotateAbout(vec3 v, vec3 axis, float angle) {
    return rotateVertexByQuat(v, quat(axis, angle));
}

mat4 rotate(vec3 axis, float angle) {
    float s = sin(angle);
    float c = cos(angle);
    float oc = 1. - c;

    vec3 sa = axis * s;

    mat4 mr = mat4(1.);
    mr[0].xyz = oc * axis.xxz * axis.xyx + vec3(c, sa.z, -sa.y);
    mr[1].xyz = oc * axis.xyy * axis.yyz + vec3(-sa.z, c, sa.x);
    mr[2].xyz = oc * axis.zyz * axis.xzz + vec3(sa.y, -sa.x, c);

    return mr;
}

mat4 rotation(vec3 rot) {
    return rotate(vec3(0., 1., 0.), rot.y) * rotate(vec3(0., 0., 1.), rot.z) * rotate(vec3(1., 0., 0.), rot.x);
}

mat3 modelToNormal(mat4 mat) {
    // Discard the edges. This won't be accurate for scaled or skewed matrices,
    // but we don't have to work with those often.
    mat3 m;
    m[0] = mat[0].xyz;
    m[1] = mat[1].xyz;
    m[2] = mat[2].xyz;
    return m;
}

float diffuse(vec3 normal) {
    vec3 n2 = normal * normal * vec3(.6, .25, .8);
    return min(n2.x + n2.y * (3. + normal.y) + n2.z, 1.);
}
struct Vertex {
    vec3 pos;
    vec2 texCoords;
    vec3 normal;
};

struct BlockFrag {
    vec2 texCoords;
    vec4 color;
    float diffuse;
    vec2 light;
};

#if defined(FRAGMENT_SHADER)
void fragment(BlockFrag r) {
    vec4 tex = FLWBlockTexture(r.texCoords);

    vec4 color = vec4(tex.rgb * FLWLight(r.light).rgb * r.diffuse, tex.a) * r.color;

    FLWFinalizeColor(color);
}
#endif
#define PI 3.1415926538





struct Belt {
    vec2 light;
    vec4 color;
    vec3 pos;
    float speed;
    float offset;
    vec4 rotation;
    vec2 sourceTexture;
    vec4 scrollTexture;
    float scrollMult;
};




#if defined(VERTEX_SHADER)
BlockFrag vertex(Vertex v, Belt instance) {
    vec3 rotated = rotateVertexByQuat(v.pos - .5, instance.rotation) + instance.pos + .5;

    vec4 worldPos = vec4(rotated, 1.);

    vec3 norm = rotateVertexByQuat(v.normal, instance.rotation);

    FLWFinalizeWorldPos(worldPos);
    FLWFinalizeNormal(norm);

    float scrollSize = instance.scrollTexture.w - instance.scrollTexture.y;
    float scroll = fract(instance.speed * uTime / (31.5 * 16.) + instance.offset) * scrollSize * instance.scrollMult;

    BlockFrag b;
    b.diffuse = diffuse(norm);
    b.texCoords = v.texCoords - instance.sourceTexture + instance.scrollTexture.xy + vec2(0, scroll);
    b.light = instance.light;

    #if defined(DEBUG_RAINBOW)
    b.color = instance.color;
    #elif defined(DEBUG_NORMAL)
    b.color = vec4(norm, 1.);
    #else
    b.color = vec4(1.);
    #endif

    return b;
}
#endif

in vec3 a_v_pos;
in vec2 a_v_texCoords;
in vec3 a_v_normal;
in vec2 a_i_light;
in vec4 a_i_color;
in vec3 a_i_pos;
in float a_i_speed;
in float a_i_offset;
in vec4 a_i_rotation;
in vec2 a_i_sourceTexture;
in vec4 a_i_scrollTexture;
in float a_i_scrollMult;
out vec2 v2f_texCoords;
out vec4 v2f_color;
out float v2f_diffuse;
out vec2 v2f_light;
void main() {
Vertex v;
v.pos = a_v_pos;
v.texCoords = a_v_texCoords;
v.normal = a_v_normal;
Belt i;
i.light = a_i_light;
i.color = a_i_color;
i.pos = a_i_pos;
i.speed = a_i_speed;
i.offset = a_i_offset;
i.rotation = a_i_rotation;
i.sourceTexture = a_i_sourceTexture;
i.scrollTexture = a_i_scrollTexture;
i.scrollMult = a_i_scrollMult;
BlockFrag o = vertex(v, i);
v2f_texCoords = o.texCoords;
v2f_color = o.color;
v2f_diffuse = o.diffuse;
v2f_light = o.light;
}
[16:19:41] [Render thread/ERROR]: Shader compilation log for create:belt: WARNING: 0:2: extension 'GL_ARB_conservative_depth' is not supported

[16:19:41] [Render thread/ERROR]: #version 150
#extension GL_ARB_conservative_depth : enable
#define FRAGMENT_SHADER
#define DEBUG_NORMAL
#if defined(VERTEX_SHADER)
out float FragDistance;
#elif defined(FRAGMENT_SHADER)
in float FragDistance;
#endif
uniform vec4 uFogColor;
uniform vec2 uFogRange;

float cylindrical_distance(vec3 worldPos, vec3 cameraPos) {
    float distXZ = length(worldPos.xz - cameraPos.xz);
    float distY = abs(worldPos.y - cameraPos.y);
    return max(distXZ, distY);
}

float cylindrical_distance(vec3 worldPos) {
    float distXZ = length(worldPos.xz);
    float distY = abs(worldPos.y);
    return max(distXZ, distY);
}

float FLWFogFactor() {
    return (uFogRange.y - FragDistance) / (uFogRange.y - uFogRange.x);
}


uniform float uTime;
uniform mat4 uViewProjection;
uniform vec3 uCameraPos;

uniform vec2 uTextureScale;
uniform sampler2D uBlockAtlas;
uniform sampler2D uLightMap;
uniform sampler2D uCrumbling;

uniform vec2 uWindowSize;

void FLWFinalizeNormal(inout vec3 normal) {
    // noop
}

#if defined(VERTEX_SHADER)
void FLWFinalizeWorldPos(inout vec4 worldPos) {
    #if defined(USE_FOG)
    FragDistance = cylindrical_distance(worldPos.xyz, uCameraPos);
    #endif

    gl_Position = uViewProjection * worldPos;
}

#elif defined(FRAGMENT_SHADER)

out vec4 fragColor;

vec4 FLWBlockTexture(vec2 texCoords) {
    vec4 cr = texture(uCrumbling, texCoords * uTextureScale);
    float diffuseAlpha = texture(uBlockAtlas, texCoords).a;
    cr.a = cr.a * diffuseAlpha;
    return cr;
}

void FLWFinalizeColor(vec4 color) {
    #if defined(USE_FOG)
    float a = color.a;
    float fog = clamp(FLWFogFactor(), 0., 1.);

    color = mix(uFogColor, color, fog);
    color.a = a;
    #endif

    if (color.a < 0.1) {
        discard;
    }

    fragColor = color;
}

vec4 FLWLight(vec2 lightCoords) {
    return vec4(1.);
}
#endif


#define PIOVER2 1.5707963268

vec4 quat(vec3 axis, float angle) {
    float halfAngle = angle * PIOVER2 / 180.0;
    vec2 cs = sin(vec2(PIOVER2 - halfAngle, halfAngle)); // compute sin and cos in one instruction
    return vec4(axis.xyz * cs.y,  cs.x);
}

vec4 quatMult(vec4 q1, vec4 q2) {
    // disgustingly vectorized quaternion multiplication
    vec4 a = q1.w * q2.xyzw;
    vec4 b = q1.x * q2.wzxy * vec4(1., -1., 1., -1.);
    vec4 c = q1.y * q2.zwxy * vec4(1., 1., -1., -1.);
    vec4 d = q1.z * q2.yxwz * vec4(-1., 1., 1., -1.);

    return a + b + c + d;
}

vec3 rotateVertexByQuat(vec3 v, vec4 q) {
    vec3 i = q.xyz;
    return v + 2.0 * cross(i, cross(i, v) + q.w * v);
}

vec3 rotateAbout(vec3 v, vec3 axis, float angle) {
    return rotateVertexByQuat(v, quat(axis, angle));
}

mat4 rotate(vec3 axis, float angle) {
    float s = sin(angle);
    float c = cos(angle);
    float oc = 1. - c;

    vec3 sa = axis * s;

    mat4 mr = mat4(1.);
    mr[0].xyz = oc * axis.xxz * axis.xyx + vec3(c, sa.z, -sa.y);
    mr[1].xyz = oc * axis.xyy * axis.yyz + vec3(-sa.z, c, sa.x);
    mr[2].xyz = oc * axis.zyz * axis.xzz + vec3(sa.y, -sa.x, c);

    return mr;
}

mat4 rotation(vec3 rot) {
    return rotate(vec3(0., 1., 0.), rot.y) * rotate(vec3(0., 0., 1.), rot.z) * rotate(vec3(1., 0., 0.), rot.x);
}

mat3 modelToNormal(mat4 mat) {
    // Discard the edges. This won't be accurate for scaled or skewed matrices,
    // but we don't have to work with those often.
    mat3 m;
    m[0] = mat[0].xyz;
    m[1] = mat[1].xyz;
    m[2] = mat[2].xyz;
    return m;
}

float diffuse(vec3 normal) {
    vec3 n2 = normal * normal * vec3(.6, .25, .8);
    return min(n2.x + n2.y * (3. + normal.y) + n2.z, 1.);
}
struct Vertex {
    vec3 pos;
    vec2 texCoords;
    vec3 normal;
};

struct BlockFrag {
    vec2 texCoords;
    vec4 color;
    float diffuse;
    vec2 light;
};

#if defined(FRAGMENT_SHADER)
void fragment(BlockFrag r) {
    vec4 tex = FLWBlockTexture(r.texCoords);

    vec4 color = vec4(tex.rgb * FLWLight(r.light).rgb * r.diffuse, tex.a) * r.color;

    FLWFinalizeColor(color);
}
#endif
#define PI 3.1415926538





struct Belt {
    vec2 light;
    vec4 color;
    vec3 pos;
    float speed;
    float offset;
    vec4 rotation;
    vec2 sourceTexture;
    vec4 scrollTexture;
    float scrollMult;
};




#if defined(VERTEX_SHADER)
BlockFrag vertex(Vertex v, Belt instance) {
    vec3 rotated = rotateVertexByQuat(v.pos - .5, instance.rotation) + instance.pos + .5;

    vec4 worldPos = vec4(rotated, 1.);

    vec3 norm = rotateVertexByQuat(v.normal, instance.rotation);

    FLWFinalizeWorldPos(worldPos);
    FLWFinalizeNormal(norm);

    float scrollSize = instance.scrollTexture.w - instance.scrollTexture.y;
    float scroll = fract(instance.speed * uTime / (31.5 * 16.) + instance.offset) * scrollSize * instance.scrollMult;

    BlockFrag b;
    b.diffuse = diffuse(norm);
    b.texCoords = v.texCoords - instance.sourceTexture + instance.scrollTexture.xy + vec2(0, scroll);
    b.light = instance.light;

    #if defined(DEBUG_RAINBOW)
    b.color = instance.color;
    #elif defined(DEBUG_NORMAL)
    b.color = vec4(norm, 1.);
    #else
    b.color = vec4(1.);
    #endif

    return b;
}
#endif

in vec2 v2f_texCoords;
in vec4 v2f_color;
in float v2f_diffuse;
in vec2 v2f_light;
void main() {
BlockFrag o;
o.texCoords = v2f_texCoords;
o.color = v2f_color;
o.diffuse = v2f_diffuse;
o.light = v2f_light;
fragment(o);
}
[16:19:41] [Render thread/INFO]: Loading context 'flywheel:context/world'
[16:19:41] [Render thread/ERROR]: Shader compilation log for flywheel:model: WARNING: 0:2: extension 'GL_ARB_conservative_depth' is not supported

[16:19:41] [Render thread/ERROR]: #version 150
#extension GL_ARB_conservative_depth : enable
#define VERTEX_SHADER
#if defined(VERTEX_SHADER)
out float FragDistance;
#elif defined(FRAGMENT_SHADER)
in float FragDistance;
#endif
uniform vec4 uFogColor;
uniform vec2 uFogRange;

float cylindrical_distance(vec3 worldPos, vec3 cameraPos) {
    float distXZ = length(worldPos.xz - cameraPos.xz);
    float distY = abs(worldPos.y - cameraPos.y);
    return max(distXZ, distY);
}

float cylindrical_distance(vec3 worldPos) {
    float distXZ = length(worldPos.xz);
    float distY = abs(worldPos.y);
    return max(distXZ, distY);
}

float FLWFogFactor() {
    return (uFogRange.y - FragDistance) / (uFogRange.y - uFogRange.x);
}
// Adjust the [0,1] normalized lightmap value based on the texture matrix from LightTexture#enableLightmap
vec2 shiftLight(vec2 lm) {
    return lm * 0.99609375 + 0.03125;// * 255/256 + 1/32
}


uniform float uTime;
uniform mat4 uViewProjection;
uniform vec3 uCameraPos;

uniform vec2 uTextureScale;
uniform sampler2D uBlockAtlas;
uniform sampler2D uLightMap;

uniform vec2 uWindowSize;

void FLWFinalizeNormal(inout vec3 normal) {
    // noop
}

#if defined(VERTEX_SHADER)
void FLWFinalizeWorldPos(inout vec4 worldPos) {
    FragDistance = cylindrical_distance(worldPos.xyz, uCameraPos);

    gl_Position = uViewProjection * worldPos;
}

#elif defined(FRAGMENT_SHADER)


#define ALPHA_DISCARD 0.1
// optimize discard usage
#if defined(ALPHA_DISCARD)
#if defined(GL_ARB_conservative_depth)
layout (depth_greater) out float gl_FragDepth;
#endif
#endif
out vec4 fragColor;

vec4 FLWBlockTexture(vec2 texCoords) {
    return texture(uBlockAtlas, texCoords);
}

void FLWFinalizeColor(vec4 color) {
    float a = color.a;
    float fog = clamp(FLWFogFactor(), 0., 1.);

    color = mix(uFogColor, color, fog);
    color.a = a;

    #if defined(ALPHA_DISCARD)
    if (color.a < ALPHA_DISCARD) {
        discard;
    }
    #endif

    fragColor = color;
}

vec4 FLWLight(vec2 lightCoords) {
    return texture(uLightMap, shiftLight(lightCoords));
}
#endif


float diffuse(vec3 normal) {
    vec3 n2 = normal * normal * vec3(.6, .25, .8);
    return min(n2.x + n2.y * (3. + normal.y) + n2.z, 1.);
}
struct Vertex {
    vec3 pos;
    vec2 texCoords;
    vec3 normal;
};

struct BlockFrag {
    vec2 texCoords;
    vec4 color;
    float diffuse;
    vec2 light;
};

#if defined(FRAGMENT_SHADER)
void fragment(BlockFrag r) {
    vec4 tex = FLWBlockTexture(r.texCoords);

    vec4 color = vec4(tex.rgb * FLWLight(r.light).rgb * r.diffuse, tex.a) * r.color;

    FLWFinalizeColor(color);
}
#endif




struct Instance {
    vec2 light;
    vec4 color;
    mat4 transform;
    mat3 normalMat;
};

#if defined(VERTEX_SHADER)
BlockFrag vertex(Vertex v, Instance i) {
    vec4 worldPos = i.transform * vec4(v.pos, 1.);

    vec3 norm = i.normalMat * v.normal;

    FLWFinalizeWorldPos(worldPos);
    FLWFinalizeNormal(norm);

    norm = normalize(norm);

    BlockFrag b;
    b.diffuse = diffuse(norm);
    b.texCoords = v.texCoords;
    b.light = i.light;
    #if defined(DEBUG_NORMAL)
    b.color = vec4(norm, 1.);
    #else
    b.color = i.color;
    #endif
    return b;
}
#endif

in vec3 a_v_pos;
in vec2 a_v_texCoords;
in vec3 a_v_normal;
in vec2 a_i_light;
in vec4 a_i_color;
in mat4 a_i_transform;
in mat3 a_i_normalMat;
out vec2 v2f_texCoords;
out vec4 v2f_color;
out float v2f_diffuse;
out vec2 v2f_light;
void main() {
Vertex v;
v.pos = a_v_pos;
v.texCoords = a_v_texCoords;
v.normal = a_v_normal;
Instance i;
i.light = a_i_light;
i.color = a_i_color;
i.transform = a_i_transform;
i.normalMat = a_i_normalMat;
BlockFrag o = vertex(v, i);
v2f_texCoords = o.texCoords;
v2f_color = o.color;
v2f_diffuse = o.diffuse;
v2f_light = o.light;
}
[16:19:41] [Render thread/ERROR]: Shader compilation log for flywheel:model: WARNING: 0:2: extension 'GL_ARB_conservative_depth' is not supported

[16:19:41] [Render thread/ERROR]: #version 150
#extension GL_ARB_conservative_depth : enable
#define FRAGMENT_SHADER
#if defined(VERTEX_SHADER)
out float FragDistance;
#elif defined(FRAGMENT_SHADER)
in float FragDistance;
#endif
uniform vec4 uFogColor;
uniform vec2 uFogRange;

float cylindrical_distance(vec3 worldPos, vec3 cameraPos) {
    float distXZ = length(worldPos.xz - cameraPos.xz);
    float distY = abs(worldPos.y - cameraPos.y);
    return max(distXZ, distY);
}

float cylindrical_distance(vec3 worldPos) {
    float distXZ = length(worldPos.xz);
    float distY = abs(worldPos.y);
    return max(distXZ, distY);
}

float FLWFogFactor() {
    return (uFogRange.y - FragDistance) / (uFogRange.y - uFogRange.x);
}
// Adjust the [0,1] normalized lightmap value based on the texture matrix from LightTexture#enableLightmap
vec2 shiftLight(vec2 lm) {
    return lm * 0.99609375 + 0.03125;// * 255/256 + 1/32
}


uniform float uTime;
uniform mat4 uViewProjection;
uniform vec3 uCameraPos;

uniform vec2 uTextureScale;
uniform sampler2D uBlockAtlas;
uniform sampler2D uLightMap;

uniform vec2 uWindowSize;

void FLWFinalizeNormal(inout vec3 normal) {
    // noop
}

#if defined(VERTEX_SHADER)
void FLWFinalizeWorldPos(inout vec4 worldPos) {
    FragDistance = cylindrical_distance(worldPos.xyz, uCameraPos);

    gl_Position = uViewProjection * worldPos;
}

#elif defined(FRAGMENT_SHADER)


#define ALPHA_DISCARD 0.1
// optimize discard usage
#if defined(ALPHA_DISCARD)
#if defined(GL_ARB_conservative_depth)
layout (depth_greater) out float gl_FragDepth;
#endif
#endif
out vec4 fragColor;

vec4 FLWBlockTexture(vec2 texCoords) {
    return texture(uBlockAtlas, texCoords);
}

void FLWFinalizeColor(vec4 color) {
    float a = color.a;
    float fog = clamp(FLWFogFactor(), 0., 1.);

    color = mix(uFogColor, color, fog);
    color.a = a;

    #if defined(ALPHA_DISCARD)
    if (color.a < ALPHA_DISCARD) {
        discard;
    }
    #endif

    fragColor = color;
}

vec4 FLWLight(vec2 lightCoords) {
    return texture(uLightMap, shiftLight(lightCoords));
}
#endif


float diffuse(vec3 normal) {
    vec3 n2 = normal * normal * vec3(.6, .25, .8);
    return min(n2.x + n2.y * (3. + normal.y) + n2.z, 1.);
}
struct Vertex {
    vec3 pos;
    vec2 texCoords;
    vec3 normal;
};

struct BlockFrag {
    vec2 texCoords;
    vec4 color;
    float diffuse;
    vec2 light;
};

#if defined(FRAGMENT_SHADER)
void fragment(BlockFrag r) {
    vec4 tex = FLWBlockTexture(r.texCoords);

    vec4 color = vec4(tex.rgb * FLWLight(r.light).rgb * r.diffuse, tex.a) * r.color;

    FLWFinalizeColor(color);
}
#endif




struct Instance {
    vec2 light;
    vec4 color;
    mat4 transform;
    mat3 normalMat;
};

#if defined(VERTEX_SHADER)
BlockFrag vertex(Vertex v, Instance i) {
    vec4 worldPos = i.transform * vec4(v.pos, 1.);

    vec3 norm = i.normalMat * v.normal;

    FLWFinalizeWorldPos(worldPos);
    FLWFinalizeNormal(norm);

    norm = normalize(norm);

    BlockFrag b;
    b.diffuse = diffuse(norm);
    b.texCoords = v.texCoords;
    b.light = i.light;
    #if defined(DEBUG_NORMAL)
    b.color = vec4(norm, 1.);
    #else
    b.color = i.color;
    #endif
    return b;
}
#endif

in vec2 v2f_texCoords;
in vec4 v2f_color;
in float v2f_diffuse;
in vec2 v2f_light;
void main() {
BlockFrag o;
o.texCoords = v2f_texCoords;
o.color = v2f_color;
o.diffuse = v2f_diffuse;
o.light = v2f_light;
fragment(o);
}
[16:19:41] [Render thread/ERROR]: Shader compilation log for flywheel:model: WARNING: 0:2: extension 'GL_ARB_conservative_depth' is not supported

[16:19:41] [Render thread/ERROR]: #version 150
#extension GL_ARB_conservative_depth : enable
#define VERTEX_SHADER
#define DEBUG_NORMAL
#if defined(VERTEX_SHADER)
out float FragDistance;
#elif defined(FRAGMENT_SHADER)
in float FragDistance;
#endif
uniform vec4 uFogColor;
uniform vec2 uFogRange;

float cylindrical_distance(vec3 worldPos, vec3 cameraPos) {
    float distXZ = length(worldPos.xz - cameraPos.xz);
    float distY = abs(worldPos.y - cameraPos.y);
    return max(distXZ, distY);
}

float cylindrical_distance(vec3 worldPos) {
    float distXZ = length(worldPos.xz);
    float distY = abs(worldPos.y);
    return max(distXZ, distY);
}

float FLWFogFactor() {
    return (uFogRange.y - FragDistance) / (uFogRange.y - uFogRange.x);
}
// Adjust the [0,1] normalized lightmap value based on the texture matrix from LightTexture#enableLightmap
vec2 shiftLight(vec2 lm) {
    return lm * 0.99609375 + 0.03125;// * 255/256 + 1/32
}


uniform float uTime;
uniform mat4 uViewProjection;
uniform vec3 uCameraPos;

uniform vec2 uTextureScale;
uniform sampler2D uBlockAtlas;
uniform sampler2D uLightMap;

uniform vec2 uWindowSize;

void FLWFinalizeNormal(inout vec3 normal) {
    // noop
}

#if defined(VERTEX_SHADER)
void FLWFinalizeWorldPos(inout vec4 worldPos) {
    FragDistance = cylindrical_distance(worldPos.xyz, uCameraPos);

    gl_Position = uViewProjection * worldPos;
}

#elif defined(FRAGMENT_SHADER)


#define ALPHA_DISCARD 0.1
// optimize discard usage
#if defined(ALPHA_DISCARD)
#if defined(GL_ARB_conservative_depth)
layout (depth_greater) out float gl_FragDepth;
#endif
#endif
out vec4 fragColor;

vec4 FLWBlockTexture(vec2 texCoords) {
    return texture(uBlockAtlas, texCoords);
}

void FLWFinalizeColor(vec4 color) {
    float a = color.a;
    float fog = clamp(FLWFogFactor(), 0., 1.);

    color = mix(uFogColor, color, fog);
    color.a = a;

    #if defined(ALPHA_DISCARD)
    if (color.a < ALPHA_DISCARD) {
        discard;
    }
    #endif

    fragColor = color;
}

vec4 FLWLight(vec2 lightCoords) {
    return texture(uLightMap, shiftLight(lightCoords));
}
#endif


float diffuse(vec3 normal) {
    vec3 n2 = normal * normal * vec3(.6, .25, .8);
    return min(n2.x + n2.y * (3. + normal.y) + n2.z, 1.);
}
struct Vertex {
    vec3 pos;
    vec2 texCoords;
    vec3 normal;
};

struct BlockFrag {
    vec2 texCoords;
    vec4 color;
    float diffuse;
    vec2 light;
};

#if defined(FRAGMENT_SHADER)
void fragment(BlockFrag r) {
    vec4 tex = FLWBlockTexture(r.texCoords);

    vec4 color = vec4(tex.rgb * FLWLight(r.light).rgb * r.diffuse, tex.a) * r.color;

    FLWFinalizeColor(color);
}
#endif




struct Instance {
    vec2 light;
    vec4 color;
    mat4 transform;
    mat3 normalMat;
};

#if defined(VERTEX_SHADER)
BlockFrag vertex(Vertex v, Instance i) {
    vec4 worldPos = i.transform * vec4(v.pos, 1.);

    vec3 norm = i.normalMat * v.normal;

    FLWFinalizeWorldPos(worldPos);
    FLWFinalizeNormal(norm);

    norm = normalize(norm);

    BlockFrag b;
    b.diffuse = diffuse(norm);
    b.texCoords = v.texCoords;
    b.light = i.light;
    #if defined(DEBUG_NORMAL)
    b.color = vec4(norm, 1.);
    #else
    b.color = i.color;
    #endif
    return b;
}
#endif

in vec3 a_v_pos;
in vec2 a_v_texCoords;
in vec3 a_v_normal;
in vec2 a_i_light;
in vec4 a_i_color;
in mat4 a_i_transform;
in mat3 a_i_normalMat;
out vec2 v2f_texCoords;
out vec4 v2f_color;
out float v2f_diffuse;
out vec2 v2f_light;
void main() {
Vertex v;
v.pos = a_v_pos;
v.texCoords = a_v_texCoords;
v.normal = a_v_normal;
Instance i;
i.light = a_i_light;
i.color = a_i_color;
i.transform = a_i_transform;
i.normalMat = a_i_normalMat;
BlockFrag o = vertex(v, i);
v2f_texCoords = o.texCoords;
v2f_color = o.color;
v2f_diffuse = o.diffuse;
v2f_light = o.light;
}
[16:19:41] [Render thread/ERROR]: Shader compilation log for flywheel:model: WARNING: 0:2: extension 'GL_ARB_conservative_depth' is not supported

[16:19:41] [Render thread/ERROR]: #version 150
#extension GL_ARB_conservative_depth : enable
#define FRAGMENT_SHADER
#define DEBUG_NORMAL
#if defined(VERTEX_SHADER)
out float FragDistance;
#elif defined(FRAGMENT_SHADER)
in float FragDistance;
#endif
uniform vec4 uFogColor;
uniform vec2 uFogRange;

float cylindrical_distance(vec3 worldPos, vec3 cameraPos) {
    float distXZ = length(worldPos.xz - cameraPos.xz);
    float distY = abs(worldPos.y - cameraPos.y);
    return max(distXZ, distY);
}

float cylindrical_distance(vec3 worldPos) {
    float distXZ = length(worldPos.xz);
    float distY = abs(worldPos.y);
    return max(distXZ, distY);
}

float FLWFogFactor() {
    return (uFogRange.y - FragDistance) / (uFogRange.y - uFogRange.x);
}
// Adjust the [0,1] normalized lightmap value based on the texture matrix from LightTexture#enableLightmap
vec2 shiftLight(vec2 lm) {
    return lm * 0.99609375 + 0.03125;// * 255/256 + 1/32
}


uniform float uTime;
uniform mat4 uViewProjection;
uniform vec3 uCameraPos;

uniform vec2 uTextureScale;
uniform sampler2D uBlockAtlas;
uniform sampler2D uLightMap;

uniform vec2 uWindowSize;

void FLWFinalizeNormal(inout vec3 normal) {
    // noop
}

#if defined(VERTEX_SHADER)
void FLWFinalizeWorldPos(inout vec4 worldPos) {
    FragDistance = cylindrical_distance(worldPos.xyz, uCameraPos);

    gl_Position = uViewProjection * worldPos;
}

#elif defined(FRAGMENT_SHADER)


#define ALPHA_DISCARD 0.1
// optimize discard usage
#if defined(ALPHA_DISCARD)
#if defined(GL_ARB_conservative_depth)
layout (depth_greater) out float gl_FragDepth;
#endif
#endif
out vec4 fragColor;

vec4 FLWBlockTexture(vec2 texCoords) {
    return texture(uBlockAtlas, texCoords);
}

void FLWFinalizeColor(vec4 color) {
    float a = color.a;
    float fog = clamp(FLWFogFactor(), 0., 1.);

    color = mix(uFogColor, color, fog);
    color.a = a;

    #if defined(ALPHA_DISCARD)
    if (color.a < ALPHA_DISCARD) {
        discard;
    }
    #endif

    fragColor = color;
}

vec4 FLWLight(vec2 lightCoords) {
    return texture(uLightMap, shiftLight(lightCoords));
}
#endif


float diffuse(vec3 normal) {
    vec3 n2 = normal * normal * vec3(.6, .25, .8);
    return min(n2.x + n2.y * (3. + normal.y) + n2.z, 1.);
}
struct Vertex {
    vec3 pos;
    vec2 texCoords;
    vec3 normal;
};

struct BlockFrag {
    vec2 texCoords;
    vec4 color;
    float diffuse;
    vec2 light;
};

#if defined(FRAGMENT_SHADER)
void fragment(BlockFrag r) {
    vec4 tex = FLWBlockTexture(r.texCoords);

    vec4 color = vec4(tex.rgb * FLWLight(r.light).rgb * r.diffuse, tex.a) * r.color;

    FLWFinalizeColor(color);
}
#endif




struct Instance {
    vec2 light;
    vec4 color;
    mat4 transform;
    mat3 normalMat;
};

#if defined(VERTEX_SHADER)
BlockFrag vertex(Vertex v, Instance i) {
    vec4 worldPos = i.transform * vec4(v.pos, 1.);

    vec3 norm = i.normalMat * v.normal;

    FLWFinalizeWorldPos(worldPos);
    FLWFinalizeNormal(norm);

    norm = normalize(norm);

    BlockFrag b;
    b.diffuse = diffuse(norm);
    b.texCoords = v.texCoords;
    b.light = i.light;
    #if defined(DEBUG_NORMAL)
    b.color = vec4(norm, 1.);
    #else
    b.color = i.color;
    #endif
    return b;
}
#endif

in vec2 v2f_texCoords;
in vec4 v2f_color;
in float v2f_diffuse;
in vec2 v2f_light;
void main() {
BlockFrag o;
o.texCoords = v2f_texCoords;
o.color = v2f_color;
o.diffuse = v2f_diffuse;
o.light = v2f_light;
fragment(o);
}
[16:19:41] [Render thread/ERROR]: Shader compilation log for create:rotating: WARNING: 0:2: extension 'GL_ARB_conservative_depth' is not supported

[16:19:41] [Render thread/ERROR]: #version 150
#extension GL_ARB_conservative_depth : enable
#define VERTEX_SHADER
#if defined(VERTEX_SHADER)
out float FragDistance;
#elif defined(FRAGMENT_SHADER)
in float FragDistance;
#endif
uniform vec4 uFogColor;
uniform vec2 uFogRange;

float cylindrical_distance(vec3 worldPos, vec3 cameraPos) {
    float distXZ = length(worldPos.xz - cameraPos.xz);
    float distY = abs(worldPos.y - cameraPos.y);
    return max(distXZ, distY);
}

float cylindrical_distance(vec3 worldPos) {
    float distXZ = length(worldPos.xz);
    float distY = abs(worldPos.y);
    return max(distXZ, distY);
}

float FLWFogFactor() {
    return (uFogRange.y - FragDistance) / (uFogRange.y - uFogRange.x);
}
// Adjust the [0,1] normalized lightmap value based on the texture matrix from LightTexture#enableLightmap
vec2 shiftLight(vec2 lm) {
    return lm * 0.99609375 + 0.03125;// * 255/256 + 1/32
}


uniform float uTime;
uniform mat4 uViewProjection;
uniform vec3 uCameraPos;

uniform vec2 uTextureScale;
uniform sampler2D uBlockAtlas;
uniform sampler2D uLightMap;

uniform vec2 uWindowSize;

void FLWFinalizeNormal(inout vec3 normal) {
    // noop
}

#if defined(VERTEX_SHADER)
void FLWFinalizeWorldPos(inout vec4 worldPos) {
    FragDistance = cylindrical_distance(worldPos.xyz, uCameraPos);

    gl_Position = uViewProjection * worldPos;
}

#elif defined(FRAGMENT_SHADER)


#define ALPHA_DISCARD 0.1
// optimize discard usage
#if defined(ALPHA_DISCARD)
#if defined(GL_ARB_conservative_depth)
layout (depth_greater) out float gl_FragDepth;
#endif
#endif
out vec4 fragColor;

vec4 FLWBlockTexture(vec2 texCoords) {
    return texture(uBlockAtlas, texCoords);
}

void FLWFinalizeColor(vec4 color) {
    float a = color.a;
    float fog = clamp(FLWFogFactor(), 0., 1.);

    color = mix(uFogColor, color, fog);
    color.a = a;

    #if defined(ALPHA_DISCARD)
    if (color.a < ALPHA_DISCARD) {
        discard;
    }
    #endif

    fragColor = color;
}

vec4 FLWLight(vec2 lightCoords) {
    return texture(uLightMap, shiftLight(lightCoords));
}
#endif


mat4 rotate(vec3 axis, float angle) {
    float s = sin(angle);
    float c = cos(angle);
    float oc = 1. - c;

    vec3 sa = axis * s;

    mat4 mr = mat4(1.);
    mr[0].xyz = oc * axis.xxz * axis.xyx + vec3(c, sa.z, -sa.y);
    mr[1].xyz = oc * axis.xyy * axis.yyz + vec3(-sa.z, c, sa.x);
    mr[2].xyz = oc * axis.zyz * axis.xzz + vec3(sa.y, -sa.x, c);

    return mr;
}

mat4 rotation(vec3 rot) {
    return rotate(vec3(0., 1., 0.), rot.y) * rotate(vec3(0., 0., 1.), rot.z) * rotate(vec3(1., 0., 0.), rot.x);
}

mat3 modelToNormal(mat4 mat) {
    // Discard the edges. This won't be accurate for scaled or skewed matrices,
    // but we don't have to work with those often.
    mat3 m;
    m[0] = mat[0].xyz;
    m[1] = mat[1].xyz;
    m[2] = mat[2].xyz;
    return m;
}

float diffuse(vec3 normal) {
    vec3 n2 = normal * normal * vec3(.6, .25, .8);
    return min(n2.x + n2.y * (3. + normal.y) + n2.z, 1.);
}
struct Vertex {
    vec3 pos;
    vec2 texCoords;
    vec3 normal;
};

struct BlockFrag {
    vec2 texCoords;
    vec4 color;
    float diffuse;
    vec2 light;
};

#if defined(FRAGMENT_SHADER)
void fragment(BlockFrag r) {
    vec4 tex = FLWBlockTexture(r.texCoords);

    vec4 color = vec4(tex.rgb * FLWLight(r.light).rgb * r.diffuse, tex.a) * r.color;

    FLWFinalizeColor(color);
}
#endif
#define PI 3.1415926538




struct Rotating {
    vec2 light;
    vec4 color;
    vec3 pos;
    float speed;
    float offset;
    vec3 axis;
};




mat4 kineticRotation(float offset, float speed, vec3 axis) {
    float degrees = offset + uTime * speed * 3./10.;
    float angle = fract(degrees / 360.) * PI * 2.;

    return rotate(axis, angle);
}

#if defined(VERTEX_SHADER)
BlockFrag vertex(Vertex v, Rotating instance) {
    mat4 spin = kineticRotation(instance.offset, instance.speed, instance.axis);

    vec4 worldPos = spin * vec4(v.pos - .5, 1.);
    worldPos += vec4(instance.pos + .5, 0.);

    vec3 norm = modelToNormal(spin) * v.normal;

    FLWFinalizeWorldPos(worldPos);
    FLWFinalizeNormal(norm);

    BlockFrag b;
    b.diffuse = diffuse(norm);
    b.texCoords = v.texCoords;
    b.light = instance.light;

    #if defined(DEBUG_RAINBOW)
    b.color = instance.color;
    #elif defined(DEBUG_NORMAL)
    b.color = vec4(norm, 1.);
    #else
    b.color = vec4(1.);
    #endif

    return b;
}
#endif

in vec3 a_v_pos;
in vec2 a_v_texCoords;
in vec3 a_v_normal;
in vec2 a_i_light;
in vec4 a_i_color;
in vec3 a_i_pos;
in float a_i_speed;
in float a_i_offset;
in vec3 a_i_axis;
out vec2 v2f_texCoords;
out vec4 v2f_color;
out float v2f_diffuse;
out vec2 v2f_light;
void main() {
Vertex v;
v.pos = a_v_pos;
v.texCoords = a_v_texCoords;
v.normal = a_v_normal;
Rotating i;
i.light = a_i_light;
i.color = a_i_color;
i.pos = a_i_pos;
i.speed = a_i_speed;
i.offset = a_i_offset;
i.axis = a_i_axis;
BlockFrag o = vertex(v, i);
v2f_texCoords = o.texCoords;
v2f_color = o.color;
v2f_diffuse = o.diffuse;
v2f_light = o.light;
}
[16:19:41] [Render thread/ERROR]: Shader compilation log for create:rotating: WARNING: 0:2: extension 'GL_ARB_conservative_depth' is not supported

[16:19:41] [Render thread/ERROR]: #version 150
#extension GL_ARB_conservative_depth : enable
#define FRAGMENT_SHADER
#if defined(VERTEX_SHADER)
out float FragDistance;
#elif defined(FRAGMENT_SHADER)
in float FragDistance;
#endif
uniform vec4 uFogColor;
uniform vec2 uFogRange;

float cylindrical_distance(vec3 worldPos, vec3 cameraPos) {
    float distXZ = length(worldPos.xz - cameraPos.xz);
    float distY = abs(worldPos.y - cameraPos.y);
    return max(distXZ, distY);
}

float cylindrical_distance(vec3 worldPos) {
    float distXZ = length(worldPos.xz);
    float distY = abs(worldPos.y);
    return max(distXZ, distY);
}

float FLWFogFactor() {
    return (uFogRange.y - FragDistance) / (uFogRange.y - uFogRange.x);
}
// Adjust the [0,1] normalized lightmap value based on the texture matrix from LightTexture#enableLightmap
vec2 shiftLight(vec2 lm) {
    return lm * 0.99609375 + 0.03125;// * 255/256 + 1/32
}


uniform float uTime;
uniform mat4 uViewProjection;
uniform vec3 uCameraPos;

uniform vec2 uTextureScale;
uniform sampler2D uBlockAtlas;
uniform sampler2D uLightMap;

uniform vec2 uWindowSize;

void FLWFinalizeNormal(inout vec3 normal) {
    // noop
}

#if defined(VERTEX_SHADER)
void FLWFinalizeWorldPos(inout vec4 worldPos) {
    FragDistance = cylindrical_distance(worldPos.xyz, uCameraPos);

    gl_Position = uViewProjection * worldPos;
}

#elif defined(FRAGMENT_SHADER)


#define ALPHA_DISCARD 0.1
// optimize discard usage
#if defined(ALPHA_DISCARD)
#if defined(GL_ARB_conservative_depth)
layout (depth_greater) out float gl_FragDepth;
#endif
#endif
out vec4 fragColor;

vec4 FLWBlockTexture(vec2 texCoords) {
    return texture(uBlockAtlas, texCoords);
}

void FLWFinalizeColor(vec4 color) {
    float a = color.a;
    float fog = clamp(FLWFogFactor(), 0., 1.);

    color = mix(uFogColor, color, fog);
    color.a = a;

    #if defined(ALPHA_DISCARD)
    if (color.a < ALPHA_DISCARD) {
        discard;
    }
    #endif

    fragColor = color;
}

vec4 FLWLight(vec2 lightCoords) {
    return texture(uLightMap, shiftLight(lightCoords));
}
#endif


mat4 rotate(vec3 axis, float angle) {
    float s = sin(angle);
    float c = cos(angle);
    float oc = 1. - c;

    vec3 sa = axis * s;

    mat4 mr = mat4(1.);
    mr[0].xyz = oc * axis.xxz * axis.xyx + vec3(c, sa.z, -sa.y);
    mr[1].xyz = oc * axis.xyy * axis.yyz + vec3(-sa.z, c, sa.x);
    mr[2].xyz = oc * axis.zyz * axis.xzz + vec3(sa.y, -sa.x, c);

    return mr;
}

mat4 rotation(vec3 rot) {
    return rotate(vec3(0., 1., 0.), rot.y) * rotate(vec3(0., 0., 1.), rot.z) * rotate(vec3(1., 0., 0.), rot.x);
}

mat3 modelToNormal(mat4 mat) {
    // Discard the edges. This won't be accurate for scaled or skewed matrices,
    // but we don't have to work with those often.
    mat3 m;
    m[0] = mat[0].xyz;
    m[1] = mat[1].xyz;
    m[2] = mat[2].xyz;
    return m;
}

float diffuse(vec3 normal) {
    vec3 n2 = normal * normal * vec3(.6, .25, .8);
    return min(n2.x + n2.y * (3. + normal.y) + n2.z, 1.);
}
struct Vertex {
    vec3 pos;
    vec2 texCoords;
    vec3 normal;
};

struct BlockFrag {
    vec2 texCoords;
    vec4 color;
    float diffuse;
    vec2 light;
};

#if defined(FRAGMENT_SHADER)
void fragment(BlockFrag r) {
    vec4 tex = FLWBlockTexture(r.texCoords);

    vec4 color = vec4(tex.rgb * FLWLight(r.light).rgb * r.diffuse, tex.a) * r.color;

    FLWFinalizeColor(color);
}
#endif
#define PI 3.1415926538




struct Rotating {
    vec2 light;
    vec4 color;
    vec3 pos;
    float speed;
    float offset;
    vec3 axis;
};




mat4 kineticRotation(float offset, float speed, vec3 axis) {
    float degrees = offset + uTime * speed * 3./10.;
    float angle = fract(degrees / 360.) * PI * 2.;

    return rotate(axis, angle);
}

#if defined(VERTEX_SHADER)
BlockFrag vertex(Vertex v, Rotating instance) {
    mat4 spin = kineticRotation(instance.offset, instance.speed, instance.axis);

    vec4 worldPos = spin * vec4(v.pos - .5, 1.);
    worldPos += vec4(instance.pos + .5, 0.);

    vec3 norm = modelToNormal(spin) * v.normal;

    FLWFinalizeWorldPos(worldPos);
    FLWFinalizeNormal(norm);

    BlockFrag b;
    b.diffuse = diffuse(norm);
    b.texCoords = v.texCoords;
    b.light = instance.light;

    #if defined(DEBUG_RAINBOW)
    b.color = instance.color;
    #elif defined(DEBUG_NORMAL)
    b.color = vec4(norm, 1.);
    #else
    b.color = vec4(1.);
    #endif

    return b;
}
#endif

in vec2 v2f_texCoords;
in vec4 v2f_color;
in float v2f_diffuse;
in vec2 v2f_light;
void main() {
BlockFrag o;
o.texCoords = v2f_texCoords;
o.color = v2f_color;
o.diffuse = v2f_diffuse;
o.light = v2f_light;
fragment(o);
}
[16:19:41] [Render thread/ERROR]: Shader compilation log for create:rotating: WARNING: 0:2: extension 'GL_ARB_conservative_depth' is not supported

[16:19:41] [Render thread/ERROR]: #version 150
#extension GL_ARB_conservative_depth : enable
#define VERTEX_SHADER
#define DEBUG_RAINBOW
#if defined(VERTEX_SHADER)
out float FragDistance;
#elif defined(FRAGMENT_SHADER)
in float FragDistance;
#endif
uniform vec4 uFogColor;
uniform vec2 uFogRange;

float cylindrical_distance(vec3 worldPos, vec3 cameraPos) {
    float distXZ = length(worldPos.xz - cameraPos.xz);
    float distY = abs(worldPos.y - cameraPos.y);
    return max(distXZ, distY);
}

float cylindrical_distance(vec3 worldPos) {
    float distXZ = length(worldPos.xz);
    float distY = abs(worldPos.y);
    return max(distXZ, distY);
}

float FLWFogFactor() {
    return (uFogRange.y - FragDistance) / (uFogRange.y - uFogRange.x);
}
// Adjust the [0,1] normalized lightmap value based on the texture matrix from LightTexture#enableLightmap
vec2 shiftLight(vec2 lm) {
    return lm * 0.99609375 + 0.03125;// * 255/256 + 1/32
}


uniform float uTime;
uniform mat4 uViewProjection;
uniform vec3 uCameraPos;

uniform vec2 uTextureScale;
uniform sampler2D uBlockAtlas;
uniform sampler2D uLightMap;

uniform vec2 uWindowSize;

void FLWFinalizeNormal(inout vec3 normal) {
    // noop
}

#if defined(VERTEX_SHADER)
void FLWFinalizeWorldPos(inout vec4 worldPos) {
    FragDistance = cylindrical_distance(worldPos.xyz, uCameraPos);

    gl_Position = uViewProjection * worldPos;
}

#elif defined(FRAGMENT_SHADER)


#define ALPHA_DISCARD 0.1
// optimize discard usage
#if defined(ALPHA_DISCARD)
#if defined(GL_ARB_conservative_depth)
layout (depth_greater) out float gl_FragDepth;
#endif
#endif
out vec4 fragColor;

vec4 FLWBlockTexture(vec2 texCoords) {
    return texture(uBlockAtlas, texCoords);
}

void FLWFinalizeColor(vec4 color) {
    float a = color.a;
    float fog = clamp(FLWFogFactor(), 0., 1.);

    color = mix(uFogColor, color, fog);
    color.a = a;

    #if defined(ALPHA_DISCARD)
    if (color.a < ALPHA_DISCARD) {
        discard;
    }
    #endif

    fragColor = color;
}

vec4 FLWLight(vec2 lightCoords) {
    return texture(uLightMap, shiftLight(lightCoords));
}
#endif


mat4 rotate(vec3 axis, float angle) {
    float s = sin(angle);
    float c = cos(angle);
    float oc = 1. - c;

    vec3 sa = axis * s;

    mat4 mr = mat4(1.);
    mr[0].xyz = oc * axis.xxz * axis.xyx + vec3(c, sa.z, -sa.y);
    mr[1].xyz = oc * axis.xyy * axis.yyz + vec3(-sa.z, c, sa.x);
    mr[2].xyz = oc * axis.zyz * axis.xzz + vec3(sa.y, -sa.x, c);

    return mr;
}

mat4 rotation(vec3 rot) {
    return rotate(vec3(0., 1., 0.), rot.y) * rotate(vec3(0., 0., 1.), rot.z) * rotate(vec3(1., 0., 0.), rot.x);
}

mat3 modelToNormal(mat4 mat) {
    // Discard the edges. This won't be accurate for scaled or skewed matrices,
    // but we don't have to work with those often.
    mat3 m;
    m[0] = mat[0].xyz;
    m[1] = mat[1].xyz;
    m[2] = mat[2].xyz;
    return m;
}

float diffuse(vec3 normal) {
    vec3 n2 = normal * normal * vec3(.6, .25, .8);
    return min(n2.x + n2.y * (3. + normal.y) + n2.z, 1.);
}
struct Vertex {
    vec3 pos;
    vec2 texCoords;
    vec3 normal;
};

struct BlockFrag {
    vec2 texCoords;
    vec4 color;
    float diffuse;
    vec2 light;
};

#if defined(FRAGMENT_SHADER)
void fragment(BlockFrag r) {
    vec4 tex = FLWBlockTexture(r.texCoords);

    vec4 color = vec4(tex.rgb * FLWLight(r.light).rgb * r.diffuse, tex.a) * r.color;

    FLWFinalizeColor(color);
}
#endif
#define PI 3.1415926538




struct Rotating {
    vec2 light;
    vec4 color;
    vec3 pos;
    float speed;
    float offset;
    vec3 axis;
};




mat4 kineticRotation(float offset, float speed, vec3 axis) {
    float degrees = offset + uTime * speed * 3./10.;
    float angle = fract(degrees / 360.) * PI * 2.;

    return rotate(axis, angle);
}

#if defined(VERTEX_SHADER)
BlockFrag vertex(Vertex v, Rotating instance) {
    mat4 spin = kineticRotation(instance.offset, instance.speed, instance.axis);

    vec4 worldPos = spin * vec4(v.pos - .5, 1.);
    worldPos += vec4(instance.pos + .5, 0.);

    vec3 norm = modelToNormal(spin) * v.normal;

    FLWFinalizeWorldPos(worldPos);
    FLWFinalizeNormal(norm);

    BlockFrag b;
    b.diffuse = diffuse(norm);
    b.texCoords = v.texCoords;
    b.light = instance.light;

    #if defined(DEBUG_RAINBOW)
    b.color = instance.color;
    #elif defined(DEBUG_NORMAL)
    b.color = vec4(norm, 1.);
    #else
    b.color = vec4(1.);
    #endif

    return b;
}
#endif

in vec3 a_v_pos;
in vec2 a_v_texCoords;
in vec3 a_v_normal;
in vec2 a_i_light;
in vec4 a_i_color;
in vec3 a_i_pos;
in float a_i_speed;
in float a_i_offset;
in vec3 a_i_axis;
out vec2 v2f_texCoords;
out vec4 v2f_color;
out float v2f_diffuse;
out vec2 v2f_light;
void main() {
Vertex v;
v.pos = a_v_pos;
v.texCoords = a_v_texCoords;
v.normal = a_v_normal;
Rotating i;
i.light = a_i_light;
i.color = a_i_color;
i.pos = a_i_pos;
i.speed = a_i_speed;
i.offset = a_i_offset;
i.axis = a_i_axis;
BlockFrag o = vertex(v, i);
v2f_texCoords = o.texCoords;
v2f_color = o.color;
v2f_diffuse = o.diffuse;
v2f_light = o.light;
}
[16:19:41] [Render thread/ERROR]: Shader compilation log for create:rotating: WARNING: 0:2: extension 'GL_ARB_conservative_depth' is not supported

[16:19:41] [Render thread/ERROR]: #version 150
#extension GL_ARB_conservative_depth : enable
#define FRAGMENT_SHADER
#define DEBUG_RAINBOW
#if defined(VERTEX_SHADER)
out float FragDistance;
#elif defined(FRAGMENT_SHADER)
in float FragDistance;
#endif
uniform vec4 uFogColor;
uniform vec2 uFogRange;

float cylindrical_distance(vec3 worldPos, vec3 cameraPos) {
    float distXZ = length(worldPos.xz - cameraPos.xz);
    float distY = abs(worldPos.y - cameraPos.y);
    return max(distXZ, distY);
}

float cylindrical_distance(vec3 worldPos) {
    float distXZ = length(worldPos.xz);
    float distY = abs(worldPos.y);
    return max(distXZ, distY);
}

float FLWFogFactor() {
    return (uFogRange.y - FragDistance) / (uFogRange.y - uFogRange.x);
}
// Adjust the [0,1] normalized lightmap value based on the texture matrix from LightTexture#enableLightmap
vec2 shiftLight(vec2 lm) {
    return lm * 0.99609375 + 0.03125;// * 255/256 + 1/32
}


uniform float uTime;
uniform mat4 uViewProjection;
uniform vec3 uCameraPos;

uniform vec2 uTextureScale;
uniform sampler2D uBlockAtlas;
uniform sampler2D uLightMap;

uniform vec2 uWindowSize;

void FLWFinalizeNormal(inout vec3 normal) {
    // noop
}

#if defined(VERTEX_SHADER)
void FLWFinalizeWorldPos(inout vec4 worldPos) {
    FragDistance = cylindrical_distance(worldPos.xyz, uCameraPos);

    gl_Position = uViewProjection * worldPos;
}

#elif defined(FRAGMENT_SHADER)


#define ALPHA_DISCARD 0.1
// optimize discard usage
#if defined(ALPHA_DISCARD)
#if defined(GL_ARB_conservative_depth)
layout (depth_greater) out float gl_FragDepth;
#endif
#endif
out vec4 fragColor;

vec4 FLWBlockTexture(vec2 texCoords) {
    return texture(uBlockAtlas, texCoords);
}

void FLWFinalizeColor(vec4 color) {
    float a = color.a;
    float fog = clamp(FLWFogFactor(), 0., 1.);

    color = mix(uFogColor, color, fog);
    color.a = a;

    #if defined(ALPHA_DISCARD)
    if (color.a < ALPHA_DISCARD) {
        discard;
    }
    #endif

    fragColor = color;
}

vec4 FLWLight(vec2 lightCoords) {
    return texture(uLightMap, shiftLight(lightCoords));
}
#endif


mat4 rotate(vec3 axis, float angle) {
    float s = sin(angle);
    float c = cos(angle);
    float oc = 1. - c;

    vec3 sa = axis * s;

    mat4 mr = mat4(1.);
    mr[0].xyz = oc * axis.xxz * axis.xyx + vec3(c, sa.z, -sa.y);
    mr[1].xyz = oc * axis.xyy * axis.yyz + vec3(-sa.z, c, sa.x);
    mr[2].xyz = oc * axis.zyz * axis.xzz + vec3(sa.y, -sa.x, c);

    return mr;
}

mat4 rotation(vec3 rot) {
    return rotate(vec3(0., 1., 0.), rot.y) * rotate(vec3(0., 0., 1.), rot.z) * rotate(vec3(1., 0., 0.), rot.x);
}

mat3 modelToNormal(mat4 mat) {
    // Discard the edges. This won't be accurate for scaled or skewed matrices,
    // but we don't have to work with those often.
    mat3 m;
    m[0] = mat[0].xyz;
    m[1] = mat[1].xyz;
    m[2] = mat[2].xyz;
    return m;
}

float diffuse(vec3 normal) {
    vec3 n2 = normal * normal * vec3(.6, .25, .8);
    return min(n2.x + n2.y * (3. + normal.y) + n2.z, 1.);
}
struct Vertex {
    vec3 pos;
    vec2 texCoords;
    vec3 normal;
};

struct BlockFrag {
    vec2 texCoords;
    vec4 color;
    float diffuse;
    vec2 light;
};

#if defined(FRAGMENT_SHADER)
void fragment(BlockFrag r) {
    vec4 tex = FLWBlockTexture(r.texCoords);

    vec4 color = vec4(tex.rgb * FLWLight(r.light).rgb * r.diffuse, tex.a) * r.color;

    FLWFinalizeColor(color);
}
#endif
#define PI 3.1415926538




struct Rotating {
    vec2 light;
    vec4 color;
    vec3 pos;
    float speed;
    float offset;
    vec3 axis;
};




mat4 kineticRotation(float offset, float speed, vec3 axis) {
    float degrees = offset + uTime * speed * 3./10.;
    float angle = fract(degrees / 360.) * PI * 2.;

    return rotate(axis, angle);
}

#if defined(VERTEX_SHADER)
BlockFrag vertex(Vertex v, Rotating instance) {
    mat4 spin = kineticRotation(instance.offset, instance.speed, instance.axis);

    vec4 worldPos = spin * vec4(v.pos - .5, 1.);
    worldPos += vec4(instance.pos + .5, 0.);

    vec3 norm = modelToNormal(spin) * v.normal;

    FLWFinalizeWorldPos(worldPos);
    FLWFinalizeNormal(norm);

    BlockFrag b;
    b.diffuse = diffuse(norm);
    b.texCoords = v.texCoords;
    b.light = instance.light;

    #if defined(DEBUG_RAINBOW)
    b.color = instance.color;
    #elif defined(DEBUG_NORMAL)
    b.color = vec4(norm, 1.);
    #else
    b.color = vec4(1.);
    #endif

    return b;
}
#endif

in vec2 v2f_texCoords;
in vec4 v2f_color;
in float v2f_diffuse;
in vec2 v2f_light;
void main() {
BlockFrag o;
o.texCoords = v2f_texCoords;
o.color = v2f_color;
o.diffuse = v2f_diffuse;
o.light = v2f_light;
fragment(o);
}
[16:19:41] [Render thread/ERROR]: Shader compilation log for create:rotating: WARNING: 0:2: extension 'GL_ARB_conservative_depth' is not supported

[16:19:41] [Render thread/ERROR]: #version 150
#extension GL_ARB_conservative_depth : enable
#define VERTEX_SHADER
#define DEBUG_NORMAL
#if defined(VERTEX_SHADER)
out float FragDistance;
#elif defined(FRAGMENT_SHADER)
in float FragDistance;
#endif
uniform vec4 uFogColor;
uniform vec2 uFogRange;

float cylindrical_distance(vec3 worldPos, vec3 cameraPos) {
    float distXZ = length(worldPos.xz - cameraPos.xz);
    float distY = abs(worldPos.y - cameraPos.y);
    return max(distXZ, distY);
}

float cylindrical_distance(vec3 worldPos) {
    float distXZ = length(worldPos.xz);
    float distY = abs(worldPos.y);
    return max(distXZ, distY);
}

float FLWFogFactor() {
    return (uFogRange.y - FragDistance) / (uFogRange.y - uFogRange.x);
}
// Adjust the [0,1] normalized lightmap value based on the texture matrix from LightTexture#enableLightmap
vec2 shiftLight(vec2 lm) {
    return lm * 0.99609375 + 0.03125;// * 255/256 + 1/32
}


uniform float uTime;
uniform mat4 uViewProjection;
uniform vec3 uCameraPos;

uniform vec2 uTextureScale;
uniform sampler2D uBlockAtlas;
uniform sampler2D uLightMap;

uniform vec2 uWindowSize;

void FLWFinalizeNormal(inout vec3 normal) {
    // noop
}

#if defined(VERTEX_SHADER)
void FLWFinalizeWorldPos(inout vec4 worldPos) {
    FragDistance = cylindrical_distance(worldPos.xyz, uCameraPos);

    gl_Position = uViewProjection * worldPos;
}

#elif defined(FRAGMENT_SHADER)


#define ALPHA_DISCARD 0.1
// optimize discard usage
#if defined(ALPHA_DISCARD)
#if defined(GL_ARB_conservative_depth)
layout (depth_greater) out float gl_FragDepth;
#endif
#endif
out vec4 fragColor;

vec4 FLWBlockTexture(vec2 texCoords) {
    return texture(uBlockAtlas, texCoords);
}

void FLWFinalizeColor(vec4 color) {
    float a = color.a;
    float fog = clamp(FLWFogFactor(), 0., 1.);

    color = mix(uFogColor, color, fog);
    color.a = a;

    #if defined(ALPHA_DISCARD)
    if (color.a < ALPHA_DISCARD) {
        discard;
    }
    #endif

    fragColor = color;
}

vec4 FLWLight(vec2 lightCoords) {
    return texture(uLightMap, shiftLight(lightCoords));
}
#endif


mat4 rotate(vec3 axis, float angle) {
    float s = sin(angle);
    float c = cos(angle);
    float oc = 1. - c;

    vec3 sa = axis * s;

    mat4 mr = mat4(1.);
    mr[0].xyz = oc * axis.xxz * axis.xyx + vec3(c, sa.z, -sa.y);
    mr[1].xyz = oc * axis.xyy * axis.yyz + vec3(-sa.z, c, sa.x);
    mr[2].xyz = oc * axis.zyz * axis.xzz + vec3(sa.y, -sa.x, c);

    return mr;
}

mat4 rotation(vec3 rot) {
    return rotate(vec3(0., 1., 0.), rot.y) * rotate(vec3(0., 0., 1.), rot.z) * rotate(vec3(1., 0., 0.), rot.x);
}

mat3 modelToNormal(mat4 mat) {
    // Discard the edges. This won't be accurate for scaled or skewed matrices,
    // but we don't have to work with those often.
    mat3 m;
    m[0] = mat[0].xyz;
    m[1] = mat[1].xyz;
    m[2] = mat[2].xyz;
    return m;
}

float diffuse(vec3 normal) {
    vec3 n2 = normal * normal * vec3(.6, .25, .8);
    return min(n2.x + n2.y * (3. + normal.y) + n2.z, 1.);
}
struct Vertex {
    vec3 pos;
    vec2 texCoords;
    vec3 normal;
};

struct BlockFrag {
    vec2 texCoords;
    vec4 color;
    float diffuse;
    vec2 light;
};

#if defined(FRAGMENT_SHADER)
void fragment(BlockFrag r) {
    vec4 tex = FLWBlockTexture(r.texCoords);

    vec4 color = vec4(tex.rgb * FLWLight(r.light).rgb * r.diffuse, tex.a) * r.color;

    FLWFinalizeColor(color);
}
#endif
#define PI 3.1415926538




struct Rotating {
    vec2 light;
    vec4 color;
    vec3 pos;
    float speed;
    float offset;
    vec3 axis;
};




mat4 kineticRotation(float offset, float speed, vec3 axis) {
    float degrees = offset + uTime * speed * 3./10.;
    float angle = fract(degrees / 360.) * PI * 2.;

    return rotate(axis, angle);
}

#if defined(VERTEX_SHADER)
BlockFrag vertex(Vertex v, Rotating instance) {
    mat4 spin = kineticRotation(instance.offset, instance.speed, instance.axis);

    vec4 worldPos = spin * vec4(v.pos - .5, 1.);
    worldPos += vec4(instance.pos + .5, 0.);

    vec3 norm = modelToNormal(spin) * v.normal;

    FLWFinalizeWorldPos(worldPos);
    FLWFinalizeNormal(norm);

    BlockFrag b;
    b.diffuse = diffuse(norm);
    b.texCoords = v.texCoords;
    b.light = instance.light;

    #if defined(DEBUG_RAINBOW)
    b.color = instance.color;
    #elif defined(DEBUG_NORMAL)
    b.color = vec4(norm, 1.);
    #else
    b.color = vec4(1.);
    #endif

    return b;
}
#endif

in vec3 a_v_pos;
in vec2 a_v_texCoords;
in vec3 a_v_normal;
in vec2 a_i_light;
in vec4 a_i_color;
in vec3 a_i_pos;
in float a_i_speed;
in float a_i_offset;
in vec3 a_i_axis;
out vec2 v2f_texCoords;
out vec4 v2f_color;
out float v2f_diffuse;
out vec2 v2f_light;
void main() {
Vertex v;
v.pos = a_v_pos;
v.texCoords = a_v_texCoords;
v.normal = a_v_normal;
Rotating i;
i.light = a_i_light;
i.color = a_i_color;
i.pos = a_i_pos;
i.speed = a_i_speed;
i.offset = a_i_offset;
i.axis = a_i_axis;
BlockFrag o = vertex(v, i);
v2f_texCoords = o.texCoords;
v2f_color = o.color;
v2f_diffuse = o.diffuse;
v2f_light = o.light;
}
[16:19:41] [Render thread/ERROR]: Shader compilation log for create:rotating: WARNING: 0:2: extension 'GL_ARB_conservative_depth' is not supported

[16:19:41] [Render thread/ERROR]: #version 150
#extension GL_ARB_conservative_depth : enable
#define FRAGMENT_SHADER
#define DEBUG_NORMAL
#if defined(VERTEX_SHADER)
out float FragDistance;
#elif defined(FRAGMENT_SHADER)
in float FragDistance;
#endif
uniform vec4 uFogColor;
uniform vec2 uFogRange;

float cylindrical_distance(vec3 worldPos, vec3 cameraPos) {
    float distXZ = length(worldPos.xz - cameraPos.xz);
    float distY = abs(worldPos.y - cameraPos.y);
    return max(distXZ, distY);
}

float cylindrical_distance(vec3 worldPos) {
    float distXZ = length(worldPos.xz);
    float distY = abs(worldPos.y);
    return max(distXZ, distY);
}

float FLWFogFactor() {
    return (uFogRange.y - FragDistance) / (uFogRange.y - uFogRange.x);
}
// Adjust the [0,1] normalized lightmap value based on the texture matrix from LightTexture#enableLightmap
vec2 shiftLight(vec2 lm) {
    return lm * 0.99609375 + 0.03125;// * 255/256 + 1/32
}


uniform float uTime;
uniform mat4 uViewProjection;
uniform vec3 uCameraPos;

uniform vec2 uTextureScale;
uniform sampler2D uBlockAtlas;
uniform sampler2D uLightMap;

uniform vec2 uWindowSize;

void FLWFinalizeNormal(inout vec3 normal) {
    // noop
}

#if defined(VERTEX_SHADER)
void FLWFinalizeWorldPos(inout vec4 worldPos) {
    FragDistance = cylindrical_distance(worldPos.xyz, uCameraPos);

    gl_Position = uViewProjection * worldPos;
}

#elif defined(FRAGMENT_SHADER)


#define ALPHA_DISCARD 0.1
// optimize discard usage
#if defined(ALPHA_DISCARD)
#if defined(GL_ARB_conservative_depth)
layout (depth_greater) out float gl_FragDepth;
#endif
#endif
out vec4 fragColor;

vec4 FLWBlockTexture(vec2 texCoords) {
    return texture(uBlockAtlas, texCoords);
}

void FLWFinalizeColor(vec4 color) {
    float a = color.a;
    float fog = clamp(FLWFogFactor(), 0., 1.);

    color = mix(uFogColor, color, fog);
    color.a = a;

    #if defined(ALPHA_DISCARD)
    if (color.a < ALPHA_DISCARD) {
        discard;
    }
    #endif

    fragColor = color;
}

vec4 FLWLight(vec2 lightCoords) {
    return texture(uLightMap, shiftLight(lightCoords));
}
#endif


mat4 rotate(vec3 axis, float angle) {
    float s = sin(angle);
    float c = cos(angle);
    float oc = 1. - c;

    vec3 sa = axis * s;

    mat4 mr = mat4(1.);
    mr[0].xyz = oc * axis.xxz * axis.xyx + vec3(c, sa.z, -sa.y);
    mr[1].xyz = oc * axis.xyy * axis.yyz + vec3(-sa.z, c, sa.x);
    mr[2].xyz = oc * axis.zyz * axis.xzz + vec3(sa.y, -sa.x, c);

    return mr;
}

mat4 rotation(vec3 rot) {
    return rotate(vec3(0., 1., 0.), rot.y) * rotate(vec3(0., 0., 1.), rot.z) * rotate(vec3(1., 0., 0.), rot.x);
}

mat3 modelToNormal(mat4 mat) {
    // Discard the edges. This won't be accurate for scaled or skewed matrices,
    // but we don't have to work with those often.
    mat3 m;
    m[0] = mat[0].xyz;
    m[1] = mat[1].xyz;
    m[2] = mat[2].xyz;
    return m;
}

float diffuse(vec3 normal) {
    vec3 n2 = normal * normal * vec3(.6, .25, .8);
    return min(n2.x + n2.y * (3. + normal.y) + n2.z, 1.);
}
struct Vertex {
    vec3 pos;
    vec2 texCoords;
    vec3 normal;
};

struct BlockFrag {
    vec2 texCoords;
    vec4 color;
    float diffuse;
    vec2 light;
};

#if defined(FRAGMENT_SHADER)
void fragment(BlockFrag r) {
    vec4 tex = FLWBlockTexture(r.texCoords);

    vec4 color = vec4(tex.rgb * FLWLight(r.light).rgb * r.diffuse, tex.a) * r.color;

    FLWFinalizeColor(color);
}
#endif
#define PI 3.1415926538




struct Rotating {
    vec2 light;
    vec4 color;
    vec3 pos;
    float speed;
    float offset;
    vec3 axis;
};




mat4 kineticRotation(float offset, float speed, vec3 axis) {
    float degrees = offset + uTime * speed * 3./10.;
    float angle = fract(degrees / 360.) * PI * 2.;

    return rotate(axis, angle);
}

#if defined(VERTEX_SHADER)
BlockFrag vertex(Vertex v, Rotating instance) {
    mat4 spin = kineticRotation(instance.offset, instance.speed, instance.axis);

    vec4 worldPos = spin * vec4(v.pos - .5, 1.);
    worldPos += vec4(instance.pos + .5, 0.);

    vec3 norm = modelToNormal(spin) * v.normal;

    FLWFinalizeWorldPos(worldPos);
    FLWFinalizeNormal(norm);

    BlockFrag b;
    b.diffuse = diffuse(norm);
    b.texCoords = v.texCoords;
    b.light = instance.light;

    #if defined(DEBUG_RAINBOW)
    b.color = instance.color;
    #elif defined(DEBUG_NORMAL)
    b.color = vec4(norm, 1.);
    #else
    b.color = vec4(1.);
    #endif

    return b;
}
#endif

in vec2 v2f_texCoords;
in vec4 v2f_color;
in float v2f_diffuse;
in vec2 v2f_light;
void main() {
BlockFrag o;
o.texCoords = v2f_texCoords;
o.color = v2f_color;
o.diffuse = v2f_diffuse;
o.light = v2f_light;
fragment(o);
}
[16:19:41] [Render thread/ERROR]: Shader compilation log for flywheel:oriented: WARNING: 0:2: extension 'GL_ARB_conservative_depth' is not supported

[16:19:41] [Render thread/ERROR]: #version 150
#extension GL_ARB_conservative_depth : enable
#define VERTEX_SHADER
#if defined(VERTEX_SHADER)
out float FragDistance;
#elif defined(FRAGMENT_SHADER)
in float FragDistance;
#endif
uniform vec4 uFogColor;
uniform vec2 uFogRange;

float cylindrical_distance(vec3 worldPos, vec3 cameraPos) {
    float distXZ = length(worldPos.xz - cameraPos.xz);
    float distY = abs(worldPos.y - cameraPos.y);
    return max(distXZ, distY);
}

float cylindrical_distance(vec3 worldPos) {
    float distXZ = length(worldPos.xz);
    float distY = abs(worldPos.y);
    return max(distXZ, distY);
}

float FLWFogFactor() {
    return (uFogRange.y - FragDistance) / (uFogRange.y - uFogRange.x);
}
// Adjust the [0,1] normalized lightmap value based on the texture matrix from LightTexture#enableLightmap
vec2 shiftLight(vec2 lm) {
    return lm * 0.99609375 + 0.03125;// * 255/256 + 1/32
}


uniform float uTime;
uniform mat4 uViewProjection;
uniform vec3 uCameraPos;

uniform vec2 uTextureScale;
uniform sampler2D uBlockAtlas;
uniform sampler2D uLightMap;

uniform vec2 uWindowSize;

void FLWFinalizeNormal(inout vec3 normal) {
    // noop
}

#if defined(VERTEX_SHADER)
void FLWFinalizeWorldPos(inout vec4 worldPos) {
    FragDistance = cylindrical_distance(worldPos.xyz, uCameraPos);

    gl_Position = uViewProjection * worldPos;
}

#elif defined(FRAGMENT_SHADER)


#define ALPHA_DISCARD 0.1
// optimize discard usage
#if defined(ALPHA_DISCARD)
#if defined(GL_ARB_conservative_depth)
layout (depth_greater) out float gl_FragDepth;
#endif
#endif
out vec4 fragColor;

vec4 FLWBlockTexture(vec2 texCoords) {
    return texture(uBlockAtlas, texCoords);
}

void FLWFinalizeColor(vec4 color) {
    float a = color.a;
    float fog = clamp(FLWFogFactor(), 0., 1.);

    color = mix(uFogColor, color, fog);
    color.a = a;

    #if defined(ALPHA_DISCARD)
    if (color.a < ALPHA_DISCARD) {
        discard;
    }
    #endif

    fragColor = color;
}

vec4 FLWLight(vec2 lightCoords) {
    return texture(uLightMap, shiftLight(lightCoords));
}
#endif


#define PIOVER2 1.5707963268

vec4 quat(vec3 axis, float angle) {
    float halfAngle = angle * PIOVER2 / 180.0;
    vec2 cs = sin(vec2(PIOVER2 - halfAngle, halfAngle)); // compute sin and cos in one instruction
    return vec4(axis.xyz * cs.y,  cs.x);
}

vec4 quatMult(vec4 q1, vec4 q2) {
    // disgustingly vectorized quaternion multiplication
    vec4 a = q1.w * q2.xyzw;
    vec4 b = q1.x * q2.wzxy * vec4(1., -1., 1., -1.);
    vec4 c = q1.y * q2.zwxy * vec4(1., 1., -1., -1.);
    vec4 d = q1.z * q2.yxwz * vec4(-1., 1., 1., -1.);

    return a + b + c + d;
}

vec3 rotateVertexByQuat(vec3 v, vec4 q) {
    vec3 i = q.xyz;
    return v + 2.0 * cross(i, cross(i, v) + q.w * v);
}

vec3 rotateAbout(vec3 v, vec3 axis, float angle) {
    return rotateVertexByQuat(v, quat(axis, angle));
}

float diffuse(vec3 normal) {
    vec3 n2 = normal * normal * vec3(.6, .25, .8);
    return min(n2.x + n2.y * (3. + normal.y) + n2.z, 1.);
}
struct Vertex {
    vec3 pos;
    vec2 texCoords;
    vec3 normal;
};

struct BlockFrag {
    vec2 texCoords;
    vec4 color;
    float diffuse;
    vec2 light;
};

#if defined(FRAGMENT_SHADER)
void fragment(BlockFrag r) {
    vec4 tex = FLWBlockTexture(r.texCoords);

    vec4 color = vec4(tex.rgb * FLWLight(r.light).rgb * r.diffuse, tex.a) * r.color;

    FLWFinalizeColor(color);
}
#endif






struct Oriented {
    vec2 light;
    vec4 color;
    vec3 pos;
    vec3 pivot;
    vec4 rotation;
};

#if defined(VERTEX_SHADER)
BlockFrag vertex(Vertex v, Oriented o) {
    vec4 worldPos = vec4(rotateVertexByQuat(v.pos - o.pivot, o.rotation) + o.pivot + o.pos, 1.);

    vec3 norm = rotateVertexByQuat(v.normal, o.rotation);

    FLWFinalizeWorldPos(worldPos);
    FLWFinalizeNormal(norm);

    BlockFrag b;
    b.diffuse = diffuse(norm);
    b.texCoords = v.texCoords;
    b.light = o.light;
    #if defined(DEBUG_NORMAL)
    b.color = vec4(norm, 1.);
    #else
    b.color = o.color;
    #endif
    return b;
}
#endif

in vec3 a_v_pos;
in vec2 a_v_texCoords;
in vec3 a_v_normal;
in vec2 a_i_light;
in vec4 a_i_color;
in vec3 a_i_pos;
in vec3 a_i_pivot;
in vec4 a_i_rotation;
out vec2 v2f_texCoords;
out vec4 v2f_color;
out float v2f_diffuse;
out vec2 v2f_light;
void main() {
Vertex v;
v.pos = a_v_pos;
v.texCoords = a_v_texCoords;
v.normal = a_v_normal;
Oriented i;
i.light = a_i_light;
i.color = a_i_color;
i.pos = a_i_pos;
i.pivot = a_i_pivot;
i.rotation = a_i_rotation;
BlockFrag o = vertex(v, i);
v2f_texCoords = o.texCoords;
v2f_color = o.color;
v2f_diffuse = o.diffuse;
v2f_light = o.light;
}
[16:19:41] [Render thread/ERROR]: Shader compilation log for flywheel:oriented: WARNING: 0:2: extension 'GL_ARB_conservative_depth' is not supported

[16:19:41] [Render thread/ERROR]: #version 150
#extension GL_ARB_conservative_depth : enable
#define FRAGMENT_SHADER
#if defined(VERTEX_SHADER)
out float FragDistance;
#elif defined(FRAGMENT_SHADER)
in float FragDistance;
#endif
uniform vec4 uFogColor;
uniform vec2 uFogRange;

float cylindrical_distance(vec3 worldPos, vec3 cameraPos) {
    float distXZ = length(worldPos.xz - cameraPos.xz);
    float distY = abs(worldPos.y - cameraPos.y);
    return max(distXZ, distY);
}

float cylindrical_distance(vec3 worldPos) {
    float distXZ = length(worldPos.xz);
    float distY = abs(worldPos.y);
    return max(distXZ, distY);
}

float FLWFogFactor() {
    return (uFogRange.y - FragDistance) / (uFogRange.y - uFogRange.x);
}
// Adjust the [0,1] normalized lightmap value based on the texture matrix from LightTexture#enableLightmap
vec2 shiftLight(vec2 lm) {
    return lm * 0.99609375 + 0.03125;// * 255/256 + 1/32
}


uniform float uTime;
uniform mat4 uViewProjection;
uniform vec3 uCameraPos;

uniform vec2 uTextureScale;
uniform sampler2D uBlockAtlas;
uniform sampler2D uLightMap;

uniform vec2 uWindowSize;

void FLWFinalizeNormal(inout vec3 normal) {
    // noop
}

#if defined(VERTEX_SHADER)
void FLWFinalizeWorldPos(inout vec4 worldPos) {
    FragDistance = cylindrical_distance(worldPos.xyz, uCameraPos);

    gl_Position = uViewProjection * worldPos;
}

#elif defined(FRAGMENT_SHADER)


#define ALPHA_DISCARD 0.1
// optimize discard usage
#if defined(ALPHA_DISCARD)
#if defined(GL_ARB_conservative_depth)
layout (depth_greater) out float gl_FragDepth;
#endif
#endif
out vec4 fragColor;

vec4 FLWBlockTexture(vec2 texCoords) {
    return texture(uBlockAtlas, texCoords);
}

void FLWFinalizeColor(vec4 color) {
    float a = color.a;
    float fog = clamp(FLWFogFactor(), 0., 1.);

    color = mix(uFogColor, color, fog);
    color.a = a;

    #if defined(ALPHA_DISCARD)
    if (color.a < ALPHA_DISCARD) {
        discard;
    }
    #endif

    fragColor = color;
}

vec4 FLWLight(vec2 lightCoords) {
    return texture(uLightMap, shiftLight(lightCoords));
}
#endif


#define PIOVER2 1.5707963268

vec4 quat(vec3 axis, float angle) {
    float halfAngle = angle * PIOVER2 / 180.0;
    vec2 cs = sin(vec2(PIOVER2 - halfAngle, halfAngle)); // compute sin and cos in one instruction
    return vec4(axis.xyz * cs.y,  cs.x);
}

vec4 quatMult(vec4 q1, vec4 q2) {
    // disgustingly vectorized quaternion multiplication
    vec4 a = q1.w * q2.xyzw;
    vec4 b = q1.x * q2.wzxy * vec4(1., -1., 1., -1.);
    vec4 c = q1.y * q2.zwxy * vec4(1., 1., -1., -1.);
    vec4 d = q1.z * q2.yxwz * vec4(-1., 1., 1., -1.);

    return a + b + c + d;
}

vec3 rotateVertexByQuat(vec3 v, vec4 q) {
    vec3 i = q.xyz;
    return v + 2.0 * cross(i, cross(i, v) + q.w * v);
}

vec3 rotateAbout(vec3 v, vec3 axis, float angle) {
    return rotateVertexByQuat(v, quat(axis, angle));
}

float diffuse(vec3 normal) {
    vec3 n2 = normal * normal * vec3(.6, .25, .8);
    return min(n2.x + n2.y * (3. + normal.y) + n2.z, 1.);
}
struct Vertex {
    vec3 pos;
    vec2 texCoords;
    vec3 normal;
};

struct BlockFrag {
    vec2 texCoords;
    vec4 color;
    float diffuse;
    vec2 light;
};

#if defined(FRAGMENT_SHADER)
void fragment(BlockFrag r) {
    vec4 tex = FLWBlockTexture(r.texCoords);

    vec4 color = vec4(tex.rgb * FLWLight(r.light).rgb * r.diffuse, tex.a) * r.color;

    FLWFinalizeColor(color);
}
#endif






struct Oriented {
    vec2 light;
    vec4 color;
    vec3 pos;
    vec3 pivot;
    vec4 rotation;
};

#if defined(VERTEX_SHADER)
BlockFrag vertex(Vertex v, Oriented o) {
    vec4 worldPos = vec4(rotateVertexByQuat(v.pos - o.pivot, o.rotation) + o.pivot + o.pos, 1.);

    vec3 norm = rotateVertexByQuat(v.normal, o.rotation);

    FLWFinalizeWorldPos(worldPos);
    FLWFinalizeNormal(norm);

    BlockFrag b;
    b.diffuse = diffuse(norm);
    b.texCoords = v.texCoords;
    b.light = o.light;
    #if defined(DEBUG_NORMAL)
    b.color = vec4(norm, 1.);
    #else
    b.color = o.color;
    #endif
    return b;
}
#endif

in vec2 v2f_texCoords;
in vec4 v2f_color;
in float v2f_diffuse;
in vec2 v2f_light;
void main() {
BlockFrag o;
o.texCoords = v2f_texCoords;
o.color = v2f_color;
o.diffuse = v2f_diffuse;
o.light = v2f_light;
fragment(o);
}
[16:19:41] [Render thread/ERROR]: Shader compilation log for flywheel:oriented: WARNING: 0:2: extension 'GL_ARB_conservative_depth' is not supported

[16:19:41] [Render thread/ERROR]: #version 150
#extension GL_ARB_conservative_depth : enable
#define VERTEX_SHADER
#define DEBUG_NORMAL
#if defined(VERTEX_SHADER)
out float FragDistance;
#elif defined(FRAGMENT_SHADER)
in float FragDistance;
#endif
uniform vec4 uFogColor;
uniform vec2 uFogRange;

float cylindrical_distance(vec3 worldPos, vec3 cameraPos) {
    float distXZ = length(worldPos.xz - cameraPos.xz);
    float distY = abs(worldPos.y - cameraPos.y);
    return max(distXZ, distY);
}

float cylindrical_distance(vec3 worldPos) {
    float distXZ = length(worldPos.xz);
    float distY = abs(worldPos.y);
    return max(distXZ, distY);
}

float FLWFogFactor() {
    return (uFogRange.y - FragDistance) / (uFogRange.y - uFogRange.x);
}
// Adjust the [0,1] normalized lightmap value based on the texture matrix from LightTexture#enableLightmap
vec2 shiftLight(vec2 lm) {
    return lm * 0.99609375 + 0.03125;// * 255/256 + 1/32
}


uniform float uTime;
uniform mat4 uViewProjection;
uniform vec3 uCameraPos;

uniform vec2 uTextureScale;
uniform sampler2D uBlockAtlas;
uniform sampler2D uLightMap;

uniform vec2 uWindowSize;

void FLWFinalizeNormal(inout vec3 normal) {
    // noop
}

#if defined(VERTEX_SHADER)
void FLWFinalizeWorldPos(inout vec4 worldPos) {
    FragDistance = cylindrical_distance(worldPos.xyz, uCameraPos);

    gl_Position = uViewProjection * worldPos;
}

#elif defined(FRAGMENT_SHADER)


#define ALPHA_DISCARD 0.1
// optimize discard usage
#if defined(ALPHA_DISCARD)
#if defined(GL_ARB_conservative_depth)
layout (depth_greater) out float gl_FragDepth;
#endif
#endif
out vec4 fragColor;

vec4 FLWBlockTexture(vec2 texCoords) {
    return texture(uBlockAtlas, texCoords);
}

void FLWFinalizeColor(vec4 color) {
    float a = color.a;
    float fog = clamp(FLWFogFactor(), 0., 1.);

    color = mix(uFogColor, color, fog);
    color.a = a;

    #if defined(ALPHA_DISCARD)
    if (color.a < ALPHA_DISCARD) {
        discard;
    }
    #endif

    fragColor = color;
}

vec4 FLWLight(vec2 lightCoords) {
    return texture(uLightMap, shiftLight(lightCoords));
}
#endif


#define PIOVER2 1.5707963268

vec4 quat(vec3 axis, float angle) {
    float halfAngle = angle * PIOVER2 / 180.0;
    vec2 cs = sin(vec2(PIOVER2 - halfAngle, halfAngle)); // compute sin and cos in one instruction
    return vec4(axis.xyz * cs.y,  cs.x);
}

vec4 quatMult(vec4 q1, vec4 q2) {
    // disgustingly vectorized quaternion multiplication
    vec4 a = q1.w * q2.xyzw;
    vec4 b = q1.x * q2.wzxy * vec4(1., -1., 1., -1.);
    vec4 c = q1.y * q2.zwxy * vec4(1., 1., -1., -1.);
    vec4 d = q1.z * q2.yxwz * vec4(-1., 1., 1., -1.);

    return a + b + c + d;
}

vec3 rotateVertexByQuat(vec3 v, vec4 q) {
    vec3 i = q.xyz;
    return v + 2.0 * cross(i, cross(i, v) + q.w * v);
}

vec3 rotateAbout(vec3 v, vec3 axis, float angle) {
    return rotateVertexByQuat(v, quat(axis, angle));
}

float diffuse(vec3 normal) {
    vec3 n2 = normal * normal * vec3(.6, .25, .8);
    return min(n2.x + n2.y * (3. + normal.y) + n2.z, 1.);
}
struct Vertex {
    vec3 pos;
    vec2 texCoords;
    vec3 normal;
};

struct BlockFrag {
    vec2 texCoords;
    vec4 color;
    float diffuse;
    vec2 light;
};

#if defined(FRAGMENT_SHADER)
void fragment(BlockFrag r) {
    vec4 tex = FLWBlockTexture(r.texCoords);

    vec4 color = vec4(tex.rgb * FLWLight(r.light).rgb * r.diffuse, tex.a) * r.color;

    FLWFinalizeColor(color);
}
#endif






struct Oriented {
    vec2 light;
    vec4 color;
    vec3 pos;
    vec3 pivot;
    vec4 rotation;
};

#if defined(VERTEX_SHADER)
BlockFrag vertex(Vertex v, Oriented o) {
    vec4 worldPos = vec4(rotateVertexByQuat(v.pos - o.pivot, o.rotation) + o.pivot + o.pos, 1.);

    vec3 norm = rotateVertexByQuat(v.normal, o.rotation);

    FLWFinalizeWorldPos(worldPos);
    FLWFinalizeNormal(norm);

    BlockFrag b;
    b.diffuse = diffuse(norm);
    b.texCoords = v.texCoords;
    b.light = o.light;
    #if defined(DEBUG_NORMAL)
    b.color = vec4(norm, 1.);
    #else
    b.color = o.color;
    #endif
    return b;
}
#endif

in vec3 a_v_pos;
in vec2 a_v_texCoords;
in vec3 a_v_normal;
in vec2 a_i_light;
in vec4 a_i_color;
in vec3 a_i_pos;
in vec3 a_i_pivot;
in vec4 a_i_rotation;
out vec2 v2f_texCoords;
out vec4 v2f_color;
out float v2f_diffuse;
out vec2 v2f_light;
void main() {
Vertex v;
v.pos = a_v_pos;
v.texCoords = a_v_texCoords;
v.normal = a_v_normal;
Oriented i;
i.light = a_i_light;
i.color = a_i_color;
i.pos = a_i_pos;
i.pivot = a_i_pivot;
i.rotation = a_i_rotation;
BlockFrag o = vertex(v, i);
v2f_texCoords = o.texCoords;
v2f_color = o.color;
v2f_diffuse = o.diffuse;
v2f_light = o.light;
}
[16:19:41] [Render thread/ERROR]: Shader compilation log for flywheel:oriented: WARNING: 0:2: extension 'GL_ARB_conservative_depth' is not supported

[16:19:41] [Render thread/ERROR]: #version 150
#extension GL_ARB_conservative_depth : enable
#define FRAGMENT_SHADER
#define DEBUG_NORMAL
#if defined(VERTEX_SHADER)
out float FragDistance;
#elif defined(FRAGMENT_SHADER)
in float FragDistance;
#endif
uniform vec4 uFogColor;
uniform vec2 uFogRange;

float cylindrical_distance(vec3 worldPos, vec3 cameraPos) {
    float distXZ = length(worldPos.xz - cameraPos.xz);
    float distY = abs(worldPos.y - cameraPos.y);
    return max(distXZ, distY);
}

float cylindrical_distance(vec3 worldPos) {
    float distXZ = length(worldPos.xz);
    float distY = abs(worldPos.y);
    return max(distXZ, distY);
}

float FLWFogFactor() {
    return (uFogRange.y - FragDistance) / (uFogRange.y - uFogRange.x);
}
// Adjust the [0,1] normalized lightmap value based on the texture matrix from LightTexture#enableLightmap
vec2 shiftLight(vec2 lm) {
    return lm * 0.99609375 + 0.03125;// * 255/256 + 1/32
}


uniform float uTime;
uniform mat4 uViewProjection;
uniform vec3 uCameraPos;

uniform vec2 uTextureScale;
uniform sampler2D uBlockAtlas;
uniform sampler2D uLightMap;

uniform vec2 uWindowSize;

void FLWFinalizeNormal(inout vec3 normal) {
    // noop
}

#if defined(VERTEX_SHADER)
void FLWFinalizeWorldPos(inout vec4 worldPos) {
    FragDistance = cylindrical_distance(worldPos.xyz, uCameraPos);

    gl_Position = uViewProjection * worldPos;
}

#elif defined(FRAGMENT_SHADER)


#define ALPHA_DISCARD 0.1
// optimize discard usage
#if defined(ALPHA_DISCARD)
#if defined(GL_ARB_conservative_depth)
layout (depth_greater) out float gl_FragDepth;
#endif
#endif
out vec4 fragColor;

vec4 FLWBlockTexture(vec2 texCoords) {
    return texture(uBlockAtlas, texCoords);
}

void FLWFinalizeColor(vec4 color) {
    float a = color.a;
    float fog = clamp(FLWFogFactor(), 0., 1.);

    color = mix(uFogColor, color, fog);
    color.a = a;

    #if defined(ALPHA_DISCARD)
    if (color.a < ALPHA_DISCARD) {
        discard;
    }
    #endif

    fragColor = color;
}

vec4 FLWLight(vec2 lightCoords) {
    return texture(uLightMap, shiftLight(lightCoords));
}
#endif


#define PIOVER2 1.5707963268

vec4 quat(vec3 axis, float angle) {
    float halfAngle = angle * PIOVER2 / 180.0;
    vec2 cs = sin(vec2(PIOVER2 - halfAngle, halfAngle)); // compute sin and cos in one instruction
    return vec4(axis.xyz * cs.y,  cs.x);
}

vec4 quatMult(vec4 q1, vec4 q2) {
    // disgustingly vectorized quaternion multiplication
    vec4 a = q1.w * q2.xyzw;
    vec4 b = q1.x * q2.wzxy * vec4(1., -1., 1., -1.);
    vec4 c = q1.y * q2.zwxy * vec4(1., 1., -1., -1.);
    vec4 d = q1.z * q2.yxwz * vec4(-1., 1., 1., -1.);

    return a + b + c + d;
}

vec3 rotateVertexByQuat(vec3 v, vec4 q) {
    vec3 i = q.xyz;
    return v + 2.0 * cross(i, cross(i, v) + q.w * v);
}

vec3 rotateAbout(vec3 v, vec3 axis, float angle) {
    return rotateVertexByQuat(v, quat(axis, angle));
}

float diffuse(vec3 normal) {
    vec3 n2 = normal * normal * vec3(.6, .25, .8);
    return min(n2.x + n2.y * (3. + normal.y) + n2.z, 1.);
}
struct Vertex {
    vec3 pos;
    vec2 texCoords;
    vec3 normal;
};

struct BlockFrag {
    vec2 texCoords;
    vec4 color;
    float diffuse;
    vec2 light;
};

#if defined(FRAGMENT_SHADER)
void fragment(BlockFrag r) {
    vec4 tex = FLWBlockTexture(r.texCoords);

    vec4 color = vec4(tex.rgb * FLWLight(r.light).rgb * r.diffuse, tex.a) * r.color;

    FLWFinalizeColor(color);
}
#endif






struct Oriented {
    vec2 light;
    vec4 color;
    vec3 pos;
    vec3 pivot;
    vec4 rotation;
};

#if defined(VERTEX_SHADER)
BlockFrag vertex(Vertex v, Oriented o) {
    vec4 worldPos = vec4(rotateVertexByQuat(v.pos - o.pivot, o.rotation) + o.pivot + o.pos, 1.);

    vec3 norm = rotateVertexByQuat(v.normal, o.rotation);

    FLWFinalizeWorldPos(worldPos);
    FLWFinalizeNormal(norm);

    BlockFrag b;
    b.diffuse = diffuse(norm);
    b.texCoords = v.texCoords;
    b.light = o.light;
    #if defined(DEBUG_NORMAL)
    b.color = vec4(norm, 1.);
    #else
    b.color = o.color;
    #endif
    return b;
}
#endif

in vec2 v2f_texCoords;
in vec4 v2f_color;
in float v2f_diffuse;
in vec2 v2f_light;
void main() {
BlockFrag o;
o.texCoords = v2f_texCoords;
o.color = v2f_color;
o.diffuse = v2f_diffuse;
o.light = v2f_light;
fragment(o);
}
[16:19:41] [Render thread/ERROR]: Shader compilation log for create:contraption_actor: WARNING: 0:2: extension 'GL_ARB_conservative_depth' is not supported

[16:19:41] [Render thread/ERROR]: #version 150
#extension GL_ARB_conservative_depth : enable
#define VERTEX_SHADER
#if defined(VERTEX_SHADER)
out float FragDistance;
#elif defined(FRAGMENT_SHADER)
in float FragDistance;
#endif
uniform vec4 uFogColor;
uniform vec2 uFogRange;

float cylindrical_distance(vec3 worldPos, vec3 cameraPos) {
    float distXZ = length(worldPos.xz - cameraPos.xz);
    float distY = abs(worldPos.y - cameraPos.y);
    return max(distXZ, distY);
}

float cylindrical_distance(vec3 worldPos) {
    float distXZ = length(worldPos.xz);
    float distY = abs(worldPos.y);
    return max(distXZ, distY);
}

float FLWFogFactor() {
    return (uFogRange.y - FragDistance) / (uFogRange.y - uFogRange.x);
}
// Adjust the [0,1] normalized lightmap value based on the texture matrix from LightTexture#enableLightmap
vec2 shiftLight(vec2 lm) {
    return lm * 0.99609375 + 0.03125;// * 255/256 + 1/32
}


uniform float uTime;
uniform mat4 uViewProjection;
uniform vec3 uCameraPos;

uniform vec2 uTextureScale;
uniform sampler2D uBlockAtlas;
uniform sampler2D uLightMap;

uniform vec2 uWindowSize;

void FLWFinalizeNormal(inout vec3 normal) {
    // noop
}

#if defined(VERTEX_SHADER)
void FLWFinalizeWorldPos(inout vec4 worldPos) {
    FragDistance = cylindrical_distance(worldPos.xyz, uCameraPos);

    gl_Position = uViewProjection * worldPos;
}

#elif defined(FRAGMENT_SHADER)


#define ALPHA_DISCARD 0.1
// optimize discard usage
#if defined(ALPHA_DISCARD)
#if defined(GL_ARB_conservative_depth)
layout (depth_greater) out float gl_FragDepth;
#endif
#endif
out vec4 fragColor;

vec4 FLWBlockTexture(vec2 texCoords) {
    return texture(uBlockAtlas, texCoords);
}

void FLWFinalizeColor(vec4 color) {
    float a = color.a;
    float fog = clamp(FLWFogFactor(), 0., 1.);

    color = mix(uFogColor, color, fog);
    color.a = a;

    #if defined(ALPHA_DISCARD)
    if (color.a < ALPHA_DISCARD) {
        discard;
    }
    #endif

    fragColor = color;
}

vec4 FLWLight(vec2 lightCoords) {
    return texture(uLightMap, shiftLight(lightCoords));
}
#endif


mat4 rotate(vec3 axis, float angle) {
    float s = sin(angle);
    float c = cos(angle);
    float oc = 1. - c;

    vec3 sa = axis * s;

    mat4 mr = mat4(1.);
    mr[0].xyz = oc * axis.xxz * axis.xyx + vec3(c, sa.z, -sa.y);
    mr[1].xyz = oc * axis.xyy * axis.yyz + vec3(-sa.z, c, sa.x);
    mr[2].xyz = oc * axis.zyz * axis.xzz + vec3(sa.y, -sa.x, c);

    return mr;
}

mat4 rotation(vec3 rot) {
    return rotate(vec3(0., 1., 0.), rot.y) * rotate(vec3(0., 0., 1.), rot.z) * rotate(vec3(1., 0., 0.), rot.x);
}

mat3 modelToNormal(mat4 mat) {
    // Discard the edges. This won't be accurate for scaled or skewed matrices,
    // but we don't have to work with those often.
    mat3 m;
    m[0] = mat[0].xyz;
    m[1] = mat[1].xyz;
    m[2] = mat[2].xyz;
    return m;
}

#define PIOVER2 1.5707963268

vec4 quat(vec3 axis, float angle) {
    float halfAngle = angle * PIOVER2 / 180.0;
    vec2 cs = sin(vec2(PIOVER2 - halfAngle, halfAngle)); // compute sin and cos in one instruction
    return vec4(axis.xyz * cs.y,  cs.x);
}

vec4 quatMult(vec4 q1, vec4 q2) {
    // disgustingly vectorized quaternion multiplication
    vec4 a = q1.w * q2.xyzw;
    vec4 b = q1.x * q2.wzxy * vec4(1., -1., 1., -1.);
    vec4 c = q1.y * q2.zwxy * vec4(1., 1., -1., -1.);
    vec4 d = q1.z * q2.yxwz * vec4(-1., 1., 1., -1.);

    return a + b + c + d;
}

vec3 rotateVertexByQuat(vec3 v, vec4 q) {
    vec3 i = q.xyz;
    return v + 2.0 * cross(i, cross(i, v) + q.w * v);
}

vec3 rotateAbout(vec3 v, vec3 axis, float angle) {
    return rotateVertexByQuat(v, quat(axis, angle));
}

float diffuse(vec3 normal) {
    vec3 n2 = normal * normal * vec3(.6, .25, .8);
    return min(n2.x + n2.y * (3. + normal.y) + n2.z, 1.);
}
struct Vertex {
    vec3 pos;
    vec2 texCoords;
    vec3 normal;
};

struct BlockFrag {
    vec2 texCoords;
    vec4 color;
    float diffuse;
    vec2 light;
};

#if defined(FRAGMENT_SHADER)
void fragment(BlockFrag r) {
    vec4 tex = FLWBlockTexture(r.texCoords);

    vec4 color = vec4(tex.rgb * FLWLight(r.light).rgb * r.diffuse, tex.a) * r.color;

    FLWFinalizeColor(color);
}
#endif
#define PI 3.1415926538





struct Actor {
    vec3 pos;
    vec2 light;
    float offset;
    vec3 axis;
    vec4 rotation;
    vec3 rotationCenter;
    float speed;
};




#if defined(VERTEX_SHADER)
BlockFrag vertex(Vertex v, Actor instance) {
    float degrees = instance.offset + uTime * instance.speed / 20.;
    //float angle = fract(degrees / 360.) * PI * 2.;

    vec4 kineticRot = quat(instance.axis, degrees);
    vec3 rotated = rotateVertexByQuat(v.pos - instance.rotationCenter, kineticRot) + instance.rotationCenter;

    vec4 worldPos = vec4(rotateVertexByQuat(rotated - .5, instance.rotation) + instance.pos + .5, 1.);
    vec3 norm = rotateVertexByQuat(rotateVertexByQuat(v.normal, kineticRot), instance.rotation);

    FLWFinalizeWorldPos(worldPos);
    FLWFinalizeNormal(norm);

    BlockFrag b;
    b.diffuse = diffuse(norm);
    b.texCoords = v.texCoords;
    b.light = instance.light;

    #if defined(DEBUG_NORMAL)
    b.color = vec4(norm, 1.);
    #else
    b.color = vec4(1.);
    #endif

    return b;
}
#endif

in vec3 a_v_pos;
in vec2 a_v_texCoords;
in vec3 a_v_normal;
in vec3 a_i_pos;
in vec2 a_i_light;
in float a_i_offset;
in vec3 a_i_axis;
in vec4 a_i_rotation;
in vec3 a_i_rotationCenter;
in float a_i_speed;
out vec2 v2f_texCoords;
out vec4 v2f_color;
out float v2f_diffuse;
out vec2 v2f_light;
void main() {
Vertex v;
v.pos = a_v_pos;
v.texCoords = a_v_texCoords;
v.normal = a_v_normal;
Actor i;
i.pos = a_i_pos;
i.light = a_i_light;
i.offset = a_i_offset;
i.axis = a_i_axis;
i.rotation = a_i_rotation;
i.rotationCenter = a_i_rotationCenter;
i.speed = a_i_speed;
BlockFrag o = vertex(v, i);
v2f_texCoords = o.texCoords;
v2f_color = o.color;
v2f_diffuse = o.diffuse;
v2f_light = o.light;
}
[16:19:41] [Render thread/ERROR]: Shader compilation log for create:contraption_actor: WARNING: 0:2: extension 'GL_ARB_conservative_depth' is not supported

[16:19:41] [Render thread/ERROR]: #version 150
#extension GL_ARB_conservative_depth : enable
#define FRAGMENT_SHADER
#if defined(VERTEX_SHADER)
out float FragDistance;
#elif defined(FRAGMENT_SHADER)
in float FragDistance;
#endif
uniform vec4 uFogColor;
uniform vec2 uFogRange;

float cylindrical_distance(vec3 worldPos, vec3 cameraPos) {
    float distXZ = length(worldPos.xz - cameraPos.xz);
    float distY = abs(worldPos.y - cameraPos.y);
    return max(distXZ, distY);
}

float cylindrical_distance(vec3 worldPos) {
    float distXZ = length(worldPos.xz);
    float distY = abs(worldPos.y);
    return max(distXZ, distY);
}

float FLWFogFactor() {
    return (uFogRange.y - FragDistance) / (uFogRange.y - uFogRange.x);
}
// Adjust the [0,1] normalized lightmap value based on the texture matrix from LightTexture#enableLightmap
vec2 shiftLight(vec2 lm) {
    return lm * 0.99609375 + 0.03125;// * 255/256 + 1/32
}


uniform float uTime;
uniform mat4 uViewProjection;
uniform vec3 uCameraPos;

uniform vec2 uTextureScale;
uniform sampler2D uBlockAtlas;
uniform sampler2D uLightMap;

uniform vec2 uWindowSize;

void FLWFinalizeNormal(inout vec3 normal) {
    // noop
}

#if defined(VERTEX_SHADER)
void FLWFinalizeWorldPos(inout vec4 worldPos) {
    FragDistance = cylindrical_distance(worldPos.xyz, uCameraPos);

    gl_Position = uViewProjection * worldPos;
}

#elif defined(FRAGMENT_SHADER)


#define ALPHA_DISCARD 0.1
// optimize discard usage
#if defined(ALPHA_DISCARD)
#if defined(GL_ARB_conservative_depth)
layout (depth_greater) out float gl_FragDepth;
#endif
#endif
out vec4 fragColor;

vec4 FLWBlockTexture(vec2 texCoords) {
    return texture(uBlockAtlas, texCoords);
}

void FLWFinalizeColor(vec4 color) {
    float a = color.a;
    float fog = clamp(FLWFogFactor(), 0., 1.);

    color = mix(uFogColor, color, fog);
    color.a = a;

    #if defined(ALPHA_DISCARD)
    if (color.a < ALPHA_DISCARD) {
        discard;
    }
    #endif

    fragColor = color;
}

vec4 FLWLight(vec2 lightCoords) {
    return texture(uLightMap, shiftLight(lightCoords));
}
#endif


mat4 rotate(vec3 axis, float angle) {
    float s = sin(angle);
    float c = cos(angle);
    float oc = 1. - c;

    vec3 sa = axis * s;

    mat4 mr = mat4(1.);
    mr[0].xyz = oc * axis.xxz * axis.xyx + vec3(c, sa.z, -sa.y);
    mr[1].xyz = oc * axis.xyy * axis.yyz + vec3(-sa.z, c, sa.x);
    mr[2].xyz = oc * axis.zyz * axis.xzz + vec3(sa.y, -sa.x, c);

    return mr;
}

mat4 rotation(vec3 rot) {
    return rotate(vec3(0., 1., 0.), rot.y) * rotate(vec3(0., 0., 1.), rot.z) * rotate(vec3(1., 0., 0.), rot.x);
}

mat3 modelToNormal(mat4 mat) {
    // Discard the edges. This won't be accurate for scaled or skewed matrices,
    // but we don't have to work with those often.
    mat3 m;
    m[0] = mat[0].xyz;
    m[1] = mat[1].xyz;
    m[2] = mat[2].xyz;
    return m;
}

#define PIOVER2 1.5707963268

vec4 quat(vec3 axis, float angle) {
    float halfAngle = angle * PIOVER2 / 180.0;
    vec2 cs = sin(vec2(PIOVER2 - halfAngle, halfAngle)); // compute sin and cos in one instruction
    return vec4(axis.xyz * cs.y,  cs.x);
}

vec4 quatMult(vec4 q1, vec4 q2) {
    // disgustingly vectorized quaternion multiplication
    vec4 a = q1.w * q2.xyzw;
    vec4 b = q1.x * q2.wzxy * vec4(1., -1., 1., -1.);
    vec4 c = q1.y * q2.zwxy * vec4(1., 1., -1., -1.);
    vec4 d = q1.z * q2.yxwz * vec4(-1., 1., 1., -1.);

    return a + b + c + d;
}

vec3 rotateVertexByQuat(vec3 v, vec4 q) {
    vec3 i = q.xyz;
    return v + 2.0 * cross(i, cross(i, v) + q.w * v);
}

vec3 rotateAbout(vec3 v, vec3 axis, float angle) {
    return rotateVertexByQuat(v, quat(axis, angle));
}

float diffuse(vec3 normal) {
    vec3 n2 = normal * normal * vec3(.6, .25, .8);
    return min(n2.x + n2.y * (3. + normal.y) + n2.z, 1.);
}
struct Vertex {
    vec3 pos;
    vec2 texCoords;
    vec3 normal;
};

struct BlockFrag {
    vec2 texCoords;
    vec4 color;
    float diffuse;
    vec2 light;
};

#if defined(FRAGMENT_SHADER)
void fragment(BlockFrag r) {
    vec4 tex = FLWBlockTexture(r.texCoords);

    vec4 color = vec4(tex.rgb * FLWLight(r.light).rgb * r.diffuse, tex.a) * r.color;

    FLWFinalizeColor(color);
}
#endif
#define PI 3.1415926538





struct Actor {
    vec3 pos;
    vec2 light;
    float offset;
    vec3 axis;
    vec4 rotation;
    vec3 rotationCenter;
    float speed;
};




#if defined(VERTEX_SHADER)
BlockFrag vertex(Vertex v, Actor instance) {
    float degrees = instance.offset + uTime * instance.speed / 20.;
    //float angle = fract(degrees / 360.) * PI * 2.;

    vec4 kineticRot = quat(instance.axis, degrees);
    vec3 rotated = rotateVertexByQuat(v.pos - instance.rotationCenter, kineticRot) + instance.rotationCenter;

    vec4 worldPos = vec4(rotateVertexByQuat(rotated - .5, instance.rotation) + instance.pos + .5, 1.);
    vec3 norm = rotateVertexByQuat(rotateVertexByQuat(v.normal, kineticRot), instance.rotation);

    FLWFinalizeWorldPos(worldPos);
    FLWFinalizeNormal(norm);

    BlockFrag b;
    b.diffuse = diffuse(norm);
    b.texCoords = v.texCoords;
    b.light = instance.light;

    #if defined(DEBUG_NORMAL)
    b.color = vec4(norm, 1.);
    #else
    b.color = vec4(1.);
    #endif

    return b;
}
#endif

in vec2 v2f_texCoords;
in vec4 v2f_color;
in float v2f_diffuse;
in vec2 v2f_light;
void main() {
BlockFrag o;
o.texCoords = v2f_texCoords;
o.color = v2f_color;
o.diffuse = v2f_diffuse;
o.light = v2f_light;
fragment(o);
}
[16:19:41] [Render thread/ERROR]: Shader compilation log for create:contraption_actor: WARNING: 0:2: extension 'GL_ARB_conservative_depth' is not supported

[16:19:41] [Render thread/ERROR]: #version 150
#extension GL_ARB_conservative_depth : enable
#define VERTEX_SHADER
#define DEBUG_NORMAL
#if defined(VERTEX_SHADER)
out float FragDistance;
#elif defined(FRAGMENT_SHADER)
in float FragDistance;
#endif
uniform vec4 uFogColor;
uniform vec2 uFogRange;

float cylindrical_distance(vec3 worldPos, vec3 cameraPos) {
    float distXZ = length(worldPos.xz - cameraPos.xz);
    float distY = abs(worldPos.y - cameraPos.y);
    return max(distXZ, distY);
}

float cylindrical_distance(vec3 worldPos) {
    float distXZ = length(worldPos.xz);
    float distY = abs(worldPos.y);
    return max(distXZ, distY);
}

float FLWFogFactor() {
    return (uFogRange.y - FragDistance) / (uFogRange.y - uFogRange.x);
}
// Adjust the [0,1] normalized lightmap value based on the texture matrix from LightTexture#enableLightmap
vec2 shiftLight(vec2 lm) {
    return lm * 0.99609375 + 0.03125;// * 255/256 + 1/32
}


uniform float uTime;
uniform mat4 uViewProjection;
uniform vec3 uCameraPos;

uniform vec2 uTextureScale;
uniform sampler2D uBlockAtlas;
uniform sampler2D uLightMap;

uniform vec2 uWindowSize;

void FLWFinalizeNormal(inout vec3 normal) {
    // noop
}

#if defined(VERTEX_SHADER)
void FLWFinalizeWorldPos(inout vec4 worldPos) {
    FragDistance = cylindrical_distance(worldPos.xyz, uCameraPos);

    gl_Position = uViewProjection * worldPos;
}

#elif defined(FRAGMENT_SHADER)


#define ALPHA_DISCARD 0.1
// optimize discard usage
#if defined(ALPHA_DISCARD)
#if defined(GL_ARB_conservative_depth)
layout (depth_greater) out float gl_FragDepth;
#endif
#endif
out vec4 fragColor;

vec4 FLWBlockTexture(vec2 texCoords) {
    return texture(uBlockAtlas, texCoords);
}

void FLWFinalizeColor(vec4 color) {
    float a = color.a;
    float fog = clamp(FLWFogFactor(), 0., 1.);

    color = mix(uFogColor, color, fog);
    color.a = a;

    #if defined(ALPHA_DISCARD)
    if (color.a < ALPHA_DISCARD) {
        discard;
    }
    #endif

    fragColor = color;
}

vec4 FLWLight(vec2 lightCoords) {
    return texture(uLightMap, shiftLight(lightCoords));
}
#endif


mat4 rotate(vec3 axis, float angle) {
    float s = sin(angle);
    float c = cos(angle);
    float oc = 1. - c;

    vec3 sa = axis * s;

    mat4 mr = mat4(1.);
    mr[0].xyz = oc * axis.xxz * axis.xyx + vec3(c, sa.z, -sa.y);
    mr[1].xyz = oc * axis.xyy * axis.yyz + vec3(-sa.z, c, sa.x);
    mr[2].xyz = oc * axis.zyz * axis.xzz + vec3(sa.y, -sa.x, c);

    return mr;
}

mat4 rotation(vec3 rot) {
    return rotate(vec3(0., 1., 0.), rot.y) * rotate(vec3(0., 0., 1.), rot.z) * rotate(vec3(1., 0., 0.), rot.x);
}

mat3 modelToNormal(mat4 mat) {
    // Discard the edges. This won't be accurate for scaled or skewed matrices,
    // but we don't have to work with those often.
    mat3 m;
    m[0] = mat[0].xyz;
    m[1] = mat[1].xyz;
    m[2] = mat[2].xyz;
    return m;
}

#define PIOVER2 1.5707963268

vec4 quat(vec3 axis, float angle) {
    float halfAngle = angle * PIOVER2 / 180.0;
    vec2 cs = sin(vec2(PIOVER2 - halfAngle, halfAngle)); // compute sin and cos in one instruction
    return vec4(axis.xyz * cs.y,  cs.x);
}

vec4 quatMult(vec4 q1, vec4 q2) {
    // disgustingly vectorized quaternion multiplication
    vec4 a = q1.w * q2.xyzw;
    vec4 b = q1.x * q2.wzxy * vec4(1., -1., 1., -1.);
    vec4 c = q1.y * q2.zwxy * vec4(1., 1., -1., -1.);
    vec4 d = q1.z * q2.yxwz * vec4(-1., 1., 1., -1.);

    return a + b + c + d;
}

vec3 rotateVertexByQuat(vec3 v, vec4 q) {
    vec3 i = q.xyz;
    return v + 2.0 * cross(i, cross(i, v) + q.w * v);
}

vec3 rotateAbout(vec3 v, vec3 axis, float angle) {
    return rotateVertexByQuat(v, quat(axis, angle));
}

float diffuse(vec3 normal) {
    vec3 n2 = normal * normal * vec3(.6, .25, .8);
    return min(n2.x + n2.y * (3. + normal.y) + n2.z, 1.);
}
struct Vertex {
    vec3 pos;
    vec2 texCoords;
    vec3 normal;
};

struct BlockFrag {
    vec2 texCoords;
    vec4 color;
    float diffuse;
    vec2 light;
};

#if defined(FRAGMENT_SHADER)
void fragment(BlockFrag r) {
    vec4 tex = FLWBlockTexture(r.texCoords);

    vec4 color = vec4(tex.rgb * FLWLight(r.light).rgb * r.diffuse, tex.a) * r.color;

    FLWFinalizeColor(color);
}
#endif
#define PI 3.1415926538





struct Actor {
    vec3 pos;
    vec2 light;
    float offset;
    vec3 axis;
    vec4 rotation;
    vec3 rotationCenter;
    float speed;
};




#if defined(VERTEX_SHADER)
BlockFrag vertex(Vertex v, Actor instance) {
    float degrees = instance.offset + uTime * instance.speed / 20.;
    //float angle = fract(degrees / 360.) * PI * 2.;

    vec4 kineticRot = quat(instance.axis, degrees);
    vec3 rotated = rotateVertexByQuat(v.pos - instance.rotationCenter, kineticRot) + instance.rotationCenter;

    vec4 worldPos = vec4(rotateVertexByQuat(rotated - .5, instance.rotation) + instance.pos + .5, 1.);
    vec3 norm = rotateVertexByQuat(rotateVertexByQuat(v.normal, kineticRot), instance.rotation);

    FLWFinalizeWorldPos(worldPos);
    FLWFinalizeNormal(norm);

    BlockFrag b;
    b.diffuse = diffuse(norm);
    b.texCoords = v.texCoords;
    b.light = instance.light;

    #if defined(DEBUG_NORMAL)
    b.color = vec4(norm, 1.);
    #else
    b.color = vec4(1.);
    #endif

    return b;
}
#endif

in vec3 a_v_pos;
in vec2 a_v_texCoords;
in vec3 a_v_normal;
in vec3 a_i_pos;
in vec2 a_i_light;
in float a_i_offset;
in vec3 a_i_axis;
in vec4 a_i_rotation;
in vec3 a_i_rotationCenter;
in float a_i_speed;
out vec2 v2f_texCoords;
out vec4 v2f_color;
out float v2f_diffuse;
out vec2 v2f_light;
void main() {
Vertex v;
v.pos = a_v_pos;
v.texCoords = a_v_texCoords;
v.normal = a_v_normal;
Actor i;
i.pos = a_i_pos;
i.light = a_i_light;
i.offset = a_i_offset;
i.axis = a_i_axis;
i.rotation = a_i_rotation;
i.rotationCenter = a_i_rotationCenter;
i.speed = a_i_speed;
BlockFrag o = vertex(v, i);
v2f_texCoords = o.texCoords;
v2f_color = o.color;
v2f_diffuse = o.diffuse;
v2f_light = o.light;
}
[16:19:41] [Render thread/ERROR]: Shader compilation log for create:contraption_actor: WARNING: 0:2: extension 'GL_ARB_conservative_depth' is not supported

[16:19:41] [Render thread/ERROR]: #version 150
#extension GL_ARB_conservative_depth : enable
#define FRAGMENT_SHADER
#define DEBUG_NORMAL
#if defined(VERTEX_SHADER)
out float FragDistance;
#elif defined(FRAGMENT_SHADER)
in float FragDistance;
#endif
uniform vec4 uFogColor;
uniform vec2 uFogRange;

float cylindrical_distance(vec3 worldPos, vec3 cameraPos) {
    float distXZ = length(worldPos.xz - cameraPos.xz);
    float distY = abs(worldPos.y - cameraPos.y);
    return max(distXZ, distY);
}

float cylindrical_distance(vec3 worldPos) {
    float distXZ = length(worldPos.xz);
    float distY = abs(worldPos.y);
    return max(distXZ, distY);
}

float FLWFogFactor() {
    return (uFogRange.y - FragDistance) / (uFogRange.y - uFogRange.x);
}
// Adjust the [0,1] normalized lightmap value based on the texture matrix from LightTexture#enableLightmap
vec2 shiftLight(vec2 lm) {
    return lm * 0.99609375 + 0.03125;// * 255/256 + 1/32
}


uniform float uTime;
uniform mat4 uViewProjection;
uniform vec3 uCameraPos;

uniform vec2 uTextureScale;
uniform sampler2D uBlockAtlas;
uniform sampler2D uLightMap;

uniform vec2 uWindowSize;

void FLWFinalizeNormal(inout vec3 normal) {
    // noop
}

#if defined(VERTEX_SHADER)
void FLWFinalizeWorldPos(inout vec4 worldPos) {
    FragDistance = cylindrical_distance(worldPos.xyz, uCameraPos);

    gl_Position = uViewProjection * worldPos;
}

#elif defined(FRAGMENT_SHADER)


#define ALPHA_DISCARD 0.1
// optimize discard usage
#if defined(ALPHA_DISCARD)
#if defined(GL_ARB_conservative_depth)
layout (depth_greater) out float gl_FragDepth;
#endif
#endif
out vec4 fragColor;

vec4 FLWBlockTexture(vec2 texCoords) {
    return texture(uBlockAtlas, texCoords);
}

void FLWFinalizeColor(vec4 color) {
    float a = color.a;
    float fog = clamp(FLWFogFactor(), 0., 1.);

    color = mix(uFogColor, color, fog);
    color.a = a;

    #if defined(ALPHA_DISCARD)
    if (color.a < ALPHA_DISCARD) {
        discard;
    }
    #endif

    fragColor = color;
}

vec4 FLWLight(vec2 lightCoords) {
    return texture(uLightMap, shiftLight(lightCoords));
}
#endif


mat4 rotate(vec3 axis, float angle) {
    float s = sin(angle);
    float c = cos(angle);
    float oc = 1. - c;

    vec3 sa = axis * s;

    mat4 mr = mat4(1.);
    mr[0].xyz = oc * axis.xxz * axis.xyx + vec3(c, sa.z, -sa.y);
    mr[1].xyz = oc * axis.xyy * axis.yyz + vec3(-sa.z, c, sa.x);
    mr[2].xyz = oc * axis.zyz * axis.xzz + vec3(sa.y, -sa.x, c);

    return mr;
}

mat4 rotation(vec3 rot) {
    return rotate(vec3(0., 1., 0.), rot.y) * rotate(vec3(0., 0., 1.), rot.z) * rotate(vec3(1., 0., 0.), rot.x);
}

mat3 modelToNormal(mat4 mat) {
    // Discard the edges. This won't be accurate for scaled or skewed matrices,
    // but we don't have to work with those often.
    mat3 m;
    m[0] = mat[0].xyz;
    m[1] = mat[1].xyz;
    m[2] = mat[2].xyz;
    return m;
}

#define PIOVER2 1.5707963268

vec4 quat(vec3 axis, float angle) {
    float halfAngle = angle * PIOVER2 / 180.0;
    vec2 cs = sin(vec2(PIOVER2 - halfAngle, halfAngle)); // compute sin and cos in one instruction
    return vec4(axis.xyz * cs.y,  cs.x);
}

vec4 quatMult(vec4 q1, vec4 q2) {
    // disgustingly vectorized quaternion multiplication
    vec4 a = q1.w * q2.xyzw;
    vec4 b = q1.x * q2.wzxy * vec4(1., -1., 1., -1.);
    vec4 c = q1.y * q2.zwxy * vec4(1., 1., -1., -1.);
    vec4 d = q1.z * q2.yxwz * vec4(-1., 1., 1., -1.);

    return a + b + c + d;
}

vec3 rotateVertexByQuat(vec3 v, vec4 q) {
    vec3 i = q.xyz;
    return v + 2.0 * cross(i, cross(i, v) + q.w * v);
}

vec3 rotateAbout(vec3 v, vec3 axis, float angle) {
    return rotateVertexByQuat(v, quat(axis, angle));
}

float diffuse(vec3 normal) {
    vec3 n2 = normal * normal * vec3(.6, .25, .8);
    return min(n2.x + n2.y * (3. + normal.y) + n2.z, 1.);
}
struct Vertex {
    vec3 pos;
    vec2 texCoords;
    vec3 normal;
};

struct BlockFrag {
    vec2 texCoords;
    vec4 color;
    float diffuse;
    vec2 light;
};

#if defined(FRAGMENT_SHADER)
void fragment(BlockFrag r) {
    vec4 tex = FLWBlockTexture(r.texCoords);

    vec4 color = vec4(tex.rgb * FLWLight(r.light).rgb * r.diffuse, tex.a) * r.color;

    FLWFinalizeColor(color);
}
#endif
#define PI 3.1415926538





struct Actor {
    vec3 pos;
    vec2 light;
    float offset;
    vec3 axis;
    vec4 rotation;
    vec3 rotationCenter;
    float speed;
};




#if defined(VERTEX_SHADER)
BlockFrag vertex(Vertex v, Actor instance) {
    float degrees = instance.offset + uTime * instance.speed / 20.;
    //float angle = fract(degrees / 360.) * PI * 2.;

    vec4 kineticRot = quat(instance.axis, degrees);
    vec3 rotated = rotateVertexByQuat(v.pos - instance.rotationCenter, kineticRot) + instance.rotationCenter;

    vec4 worldPos = vec4(rotateVertexByQuat(rotated - .5, instance.rotation) + instance.pos + .5, 1.);
    vec3 norm = rotateVertexByQuat(rotateVertexByQuat(v.normal, kineticRot), instance.rotation);

    FLWFinalizeWorldPos(worldPos);
    FLWFinalizeNormal(norm);

    BlockFrag b;
    b.diffuse = diffuse(norm);
    b.texCoords = v.texCoords;
    b.light = instance.light;

    #if defined(DEBUG_NORMAL)
    b.color = vec4(norm, 1.);
    #else
    b.color = vec4(1.);
    #endif

    return b;
}
#endif

in vec2 v2f_texCoords;
in vec4 v2f_color;
in float v2f_diffuse;
in vec2 v2f_light;
void main() {
BlockFrag o;
o.texCoords = v2f_texCoords;
o.color = v2f_color;
o.diffuse = v2f_diffuse;
o.light = v2f_light;
fragment(o);
}
[16:19:41] [Render thread/ERROR]: Shader compilation log for create:flap: WARNING: 0:2: extension 'GL_ARB_conservative_depth' is not supported

[16:19:41] [Render thread/ERROR]: #version 150
#extension GL_ARB_conservative_depth : enable
#define VERTEX_SHADER
#if defined(VERTEX_SHADER)
out float FragDistance;
#elif defined(FRAGMENT_SHADER)
in float FragDistance;
#endif
uniform vec4 uFogColor;
uniform vec2 uFogRange;

float cylindrical_distance(vec3 worldPos, vec3 cameraPos) {
    float distXZ = length(worldPos.xz - cameraPos.xz);
    float distY = abs(worldPos.y - cameraPos.y);
    return max(distXZ, distY);
}

float cylindrical_distance(vec3 worldPos) {
    float distXZ = length(worldPos.xz);
    float distY = abs(worldPos.y);
    return max(distXZ, distY);
}

float FLWFogFactor() {
    return (uFogRange.y - FragDistance) / (uFogRange.y - uFogRange.x);
}
// Adjust the [0,1] normalized lightmap value based on the texture matrix from LightTexture#enableLightmap
vec2 shiftLight(vec2 lm) {
    return lm * 0.99609375 + 0.03125;// * 255/256 + 1/32
}


uniform float uTime;
uniform mat4 uViewProjection;
uniform vec3 uCameraPos;

uniform vec2 uTextureScale;
uniform sampler2D uBlockAtlas;
uniform sampler2D uLightMap;

uniform vec2 uWindowSize;

void FLWFinalizeNormal(inout vec3 normal) {
    // noop
}

#if defined(VERTEX_SHADER)
void FLWFinalizeWorldPos(inout vec4 worldPos) {
    FragDistance = cylindrical_distance(worldPos.xyz, uCameraPos);

    gl_Position = uViewProjection * worldPos;
}

#elif defined(FRAGMENT_SHADER)


#define ALPHA_DISCARD 0.1
// optimize discard usage
#if defined(ALPHA_DISCARD)
#if defined(GL_ARB_conservative_depth)
layout (depth_greater) out float gl_FragDepth;
#endif
#endif
out vec4 fragColor;

vec4 FLWBlockTexture(vec2 texCoords) {
    return texture(uBlockAtlas, texCoords);
}

void FLWFinalizeColor(vec4 color) {
    float a = color.a;
    float fog = clamp(FLWFogFactor(), 0., 1.);

    color = mix(uFogColor, color, fog);
    color.a = a;

    #if defined(ALPHA_DISCARD)
    if (color.a < ALPHA_DISCARD) {
        discard;
    }
    #endif

    fragColor = color;
}

vec4 FLWLight(vec2 lightCoords) {
    return texture(uLightMap, shiftLight(lightCoords));
}
#endif


mat4 rotate(vec3 axis, float angle) {
    float s = sin(angle);
    float c = cos(angle);
    float oc = 1. - c;

    vec3 sa = axis * s;

    mat4 mr = mat4(1.);
    mr[0].xyz = oc * axis.xxz * axis.xyx + vec3(c, sa.z, -sa.y);
    mr[1].xyz = oc * axis.xyy * axis.yyz + vec3(-sa.z, c, sa.x);
    mr[2].xyz = oc * axis.zyz * axis.xzz + vec3(sa.y, -sa.x, c);

    return mr;
}

mat4 rotation(vec3 rot) {
    return rotate(vec3(0., 1., 0.), rot.y) * rotate(vec3(0., 0., 1.), rot.z) * rotate(vec3(1., 0., 0.), rot.x);
}

mat3 modelToNormal(mat4 mat) {
    // Discard the edges. This won't be accurate for scaled or skewed matrices,
    // but we don't have to work with those often.
    mat3 m;
    m[0] = mat[0].xyz;
    m[1] = mat[1].xyz;
    m[2] = mat[2].xyz;
    return m;
}

#define PIOVER2 1.5707963268

vec4 quat(vec3 axis, float angle) {
    float halfAngle = angle * PIOVER2 / 180.0;
    vec2 cs = sin(vec2(PIOVER2 - halfAngle, halfAngle)); // compute sin and cos in one instruction
    return vec4(axis.xyz * cs.y,  cs.x);
}

vec4 quatMult(vec4 q1, vec4 q2) {
    // disgustingly vectorized quaternion multiplication
    vec4 a = q1.w * q2.xyzw;
    vec4 b = q1.x * q2.wzxy * vec4(1., -1., 1., -1.);
    vec4 c = q1.y * q2.zwxy * vec4(1., 1., -1., -1.);
    vec4 d = q1.z * q2.yxwz * vec4(-1., 1., 1., -1.);

    return a + b + c + d;
}

vec3 rotateVertexByQuat(vec3 v, vec4 q) {
    vec3 i = q.xyz;
    return v + 2.0 * cross(i, cross(i, v) + q.w * v);
}

vec3 rotateAbout(vec3 v, vec3 axis, float angle) {
    return rotateVertexByQuat(v, quat(axis, angle));
}

float diffuse(vec3 normal) {
    vec3 n2 = normal * normal * vec3(.6, .25, .8);
    return min(n2.x + n2.y * (3. + normal.y) + n2.z, 1.);
}
struct Vertex {
    vec3 pos;
    vec2 texCoords;
    vec3 normal;
};

struct BlockFrag {
    vec2 texCoords;
    vec4 color;
    float diffuse;
    vec2 light;
};

#if defined(FRAGMENT_SHADER)
void fragment(BlockFrag r) {
    vec4 tex = FLWBlockTexture(r.texCoords);

    vec4 color = vec4(tex.rgb * FLWLight(r.light).rgb * r.diffuse, tex.a) * r.color;

    FLWFinalizeColor(color);
}
#endif
#define PI 3.1415926538





struct Flap {
    vec3 instancePos;
    vec2 light;
    vec3 segmentOffset;
    vec3 pivot;
    float horizontalAngle;
    float intensity;
    float flapScale;
    float flapness;
};




#if defined(VERTEX_SHADER)

float toRad(float degrees) {
    return fract(degrees / 360.) * PI * 2.;
}

float getFlapAngle(float flapness, float intensity, float scale) {
    float absFlap = abs(flapness);

    float angle = sin((1. - absFlap) * PI * intensity) * 30. * flapness * scale;

    float halfAngle = angle * 0.5;

    float which = step(0., flapness); // 0 if negative, 1 if positive
    float degrees = which * halfAngle + (1. - which) * angle; // branchless conditional multiply

    return degrees;
}

BlockFrag vertex(Vertex v, Flap flap) {
    float flapAngle = getFlapAngle(flap.flapness, flap.intensity, flap.flapScale);

    vec4 orientation = quat(vec3(0., 1., 0.), -flap.horizontalAngle);
    vec4 flapRotation = quat(vec3(1., 0., 0.), flapAngle);

    vec3 rotated = rotateVertexByQuat(v.pos - flap.pivot, flapRotation) + flap.pivot + flap.segmentOffset;
    rotated = rotateVertexByQuat(rotated - .5, orientation) + flap.instancePos + .5;

    vec4 worldPos = vec4(rotated, 1.);
    vec3 norm = rotateVertexByQuat(rotateVertexByQuat(v.normal, flapRotation), orientation);

    FLWFinalizeWorldPos(worldPos);
    FLWFinalizeNormal(norm);

    BlockFrag b;
    b.diffuse = diffuse(norm);
    b.texCoords = v.texCoords;
    b.light = flap.light;
    #if defined(DEBUG_NORMAL)
    b.color = vec4(norm, 1.);
    #else
    b.color = vec4(1.);
    #endif
    return b;
}
#endif

in vec3 a_v_pos;
in vec2 a_v_texCoords;
in vec3 a_v_normal;
in vec3 a_i_instancePos;
in vec2 a_i_light;
in vec3 a_i_segmentOffset;
in vec3 a_i_pivot;
in float a_i_horizontalAngle;
in float a_i_intensity;
in float a_i_flapScale;
in float a_i_flapness;
out vec2 v2f_texCoords;
out vec4 v2f_color;
out float v2f_diffuse;
out vec2 v2f_light;
void main() {
Vertex v;
v.pos = a_v_pos;
v.texCoords = a_v_texCoords;
v.normal = a_v_normal;
Flap i;
i.instancePos = a_i_instancePos;
i.light = a_i_light;
i.segmentOffset = a_i_segmentOffset;
i.pivot = a_i_pivot;
i.horizontalAngle = a_i_horizontalAngle;
i.intensity = a_i_intensity;
i.flapScale = a_i_flapScale;
i.flapness = a_i_flapness;
BlockFrag o = vertex(v, i);
v2f_texCoords = o.texCoords;
v2f_color = o.color;
v2f_diffuse = o.diffuse;
v2f_light = o.light;
}
[16:19:41] [Render thread/ERROR]: Shader compilation log for create:flap: WARNING: 0:2: extension 'GL_ARB_conservative_depth' is not supported

[16:19:41] [Render thread/ERROR]: #version 150
#extension GL_ARB_conservative_depth : enable
#define FRAGMENT_SHADER
#if defined(VERTEX_SHADER)
out float FragDistance;
#elif defined(FRAGMENT_SHADER)
in float FragDistance;
#endif
uniform vec4 uFogColor;
uniform vec2 uFogRange;

float cylindrical_distance(vec3 worldPos, vec3 cameraPos) {
    float distXZ = length(worldPos.xz - cameraPos.xz);
    float distY = abs(worldPos.y - cameraPos.y);
    return max(distXZ, distY);
}

float cylindrical_distance(vec3 worldPos) {
    float distXZ = length(worldPos.xz);
    float distY = abs(worldPos.y);
    return max(distXZ, distY);
}

float FLWFogFactor() {
    return (uFogRange.y - FragDistance) / (uFogRange.y - uFogRange.x);
}
// Adjust the [0,1] normalized lightmap value based on the texture matrix from LightTexture#enableLightmap
vec2 shiftLight(vec2 lm) {
    return lm * 0.99609375 + 0.03125;// * 255/256 + 1/32
}


uniform float uTime;
uniform mat4 uViewProjection;
uniform vec3 uCameraPos;

uniform vec2 uTextureScale;
uniform sampler2D uBlockAtlas;
uniform sampler2D uLightMap;

uniform vec2 uWindowSize;

void FLWFinalizeNormal(inout vec3 normal) {
    // noop
}

#if defined(VERTEX_SHADER)
void FLWFinalizeWorldPos(inout vec4 worldPos) {
    FragDistance = cylindrical_distance(worldPos.xyz, uCameraPos);

    gl_Position = uViewProjection * worldPos;
}

#elif defined(FRAGMENT_SHADER)


#define ALPHA_DISCARD 0.1
// optimize discard usage
#if defined(ALPHA_DISCARD)
#if defined(GL_ARB_conservative_depth)
layout (depth_greater) out float gl_FragDepth;
#endif
#endif
out vec4 fragColor;

vec4 FLWBlockTexture(vec2 texCoords) {
    return texture(uBlockAtlas, texCoords);
}

void FLWFinalizeColor(vec4 color) {
    float a = color.a;
    float fog = clamp(FLWFogFactor(), 0., 1.);

    color = mix(uFogColor, color, fog);
    color.a = a;

    #if defined(ALPHA_DISCARD)
    if (color.a < ALPHA_DISCARD) {
        discard;
    }
    #endif

    fragColor = color;
}

vec4 FLWLight(vec2 lightCoords) {
    return texture(uLightMap, shiftLight(lightCoords));
}
#endif


mat4 rotate(vec3 axis, float angle) {
    float s = sin(angle);
    float c = cos(angle);
    float oc = 1. - c;

    vec3 sa = axis * s;

    mat4 mr = mat4(1.);
    mr[0].xyz = oc * axis.xxz * axis.xyx + vec3(c, sa.z, -sa.y);
    mr[1].xyz = oc * axis.xyy * axis.yyz + vec3(-sa.z, c, sa.x);
    mr[2].xyz = oc * axis.zyz * axis.xzz + vec3(sa.y, -sa.x, c);

    return mr;
}

mat4 rotation(vec3 rot) {
    return rotate(vec3(0., 1., 0.), rot.y) * rotate(vec3(0., 0., 1.), rot.z) * rotate(vec3(1., 0., 0.), rot.x);
}

mat3 modelToNormal(mat4 mat) {
    // Discard the edges. This won't be accurate for scaled or skewed matrices,
    // but we don't have to work with those often.
    mat3 m;
    m[0] = mat[0].xyz;
    m[1] = mat[1].xyz;
    m[2] = mat[2].xyz;
    return m;
}

#define PIOVER2 1.5707963268

vec4 quat(vec3 axis, float angle) {
    float halfAngle = angle * PIOVER2 / 180.0;
    vec2 cs = sin(vec2(PIOVER2 - halfAngle, halfAngle)); // compute sin and cos in one instruction
    return vec4(axis.xyz * cs.y,  cs.x);
}

vec4 quatMult(vec4 q1, vec4 q2) {
    // disgustingly vectorized quaternion multiplication
    vec4 a = q1.w * q2.xyzw;
    vec4 b = q1.x * q2.wzxy * vec4(1., -1., 1., -1.);
    vec4 c = q1.y * q2.zwxy * vec4(1., 1., -1., -1.);
    vec4 d = q1.z * q2.yxwz * vec4(-1., 1., 1., -1.);

    return a + b + c + d;
}

vec3 rotateVertexByQuat(vec3 v, vec4 q) {
    vec3 i = q.xyz;
    return v + 2.0 * cross(i, cross(i, v) + q.w * v);
}

vec3 rotateAbout(vec3 v, vec3 axis, float angle) {
    return rotateVertexByQuat(v, quat(axis, angle));
}

float diffuse(vec3 normal) {
    vec3 n2 = normal * normal * vec3(.6, .25, .8);
    return min(n2.x + n2.y * (3. + normal.y) + n2.z, 1.);
}
struct Vertex {
    vec3 pos;
    vec2 texCoords;
    vec3 normal;
};

struct BlockFrag {
    vec2 texCoords;
    vec4 color;
    float diffuse;
    vec2 light;
};

#if defined(FRAGMENT_SHADER)
void fragment(BlockFrag r) {
    vec4 tex = FLWBlockTexture(r.texCoords);

    vec4 color = vec4(tex.rgb * FLWLight(r.light).rgb * r.diffuse, tex.a) * r.color;

    FLWFinalizeColor(color);
}
#endif
#define PI 3.1415926538





struct Flap {
    vec3 instancePos;
    vec2 light;
    vec3 segmentOffset;
    vec3 pivot;
    float horizontalAngle;
    float intensity;
    float flapScale;
    float flapness;
};




#if defined(VERTEX_SHADER)

float toRad(float degrees) {
    return fract(degrees / 360.) * PI * 2.;
}

float getFlapAngle(float flapness, float intensity, float scale) {
    float absFlap = abs(flapness);

    float angle = sin((1. - absFlap) * PI * intensity) * 30. * flapness * scale;

    float halfAngle = angle * 0.5;

    float which = step(0., flapness); // 0 if negative, 1 if positive
    float degrees = which * halfAngle + (1. - which) * angle; // branchless conditional multiply

    return degrees;
}

BlockFrag vertex(Vertex v, Flap flap) {
    float flapAngle = getFlapAngle(flap.flapness, flap.intensity, flap.flapScale);

    vec4 orientation = quat(vec3(0., 1., 0.), -flap.horizontalAngle);
    vec4 flapRotation = quat(vec3(1., 0., 0.), flapAngle);

    vec3 rotated = rotateVertexByQuat(v.pos - flap.pivot, flapRotation) + flap.pivot + flap.segmentOffset;
    rotated = rotateVertexByQuat(rotated - .5, orientation) + flap.instancePos + .5;

    vec4 worldPos = vec4(rotated, 1.);
    vec3 norm = rotateVertexByQuat(rotateVertexByQuat(v.normal, flapRotation), orientation);

    FLWFinalizeWorldPos(worldPos);
    FLWFinalizeNormal(norm);

    BlockFrag b;
    b.diffuse = diffuse(norm);
    b.texCoords = v.texCoords;
    b.light = flap.light;
    #if defined(DEBUG_NORMAL)
    b.color = vec4(norm, 1.);
    #else
    b.color = vec4(1.);
    #endif
    return b;
}
#endif

in vec2 v2f_texCoords;
in vec4 v2f_color;
in float v2f_diffuse;
in vec2 v2f_light;
void main() {
BlockFrag o;
o.texCoords = v2f_texCoords;
o.color = v2f_color;
o.diffuse = v2f_diffuse;
o.light = v2f_light;
fragment(o);
}
[16:19:41] [Render thread/ERROR]: Shader compilation log for create:flap: WARNING: 0:2: extension 'GL_ARB_conservative_depth' is not supported

[16:19:41] [Render thread/ERROR]: #version 150
#extension GL_ARB_conservative_depth : enable
#define VERTEX_SHADER
#define DEBUG_NORMAL
#if defined(VERTEX_SHADER)
out float FragDistance;
#elif defined(FRAGMENT_SHADER)
in float FragDistance;
#endif
uniform vec4 uFogColor;
uniform vec2 uFogRange;

float cylindrical_distance(vec3 worldPos, vec3 cameraPos) {
    float distXZ = length(worldPos.xz - cameraPos.xz);
    float distY = abs(worldPos.y - cameraPos.y);
    return max(distXZ, distY);
}

float cylindrical_distance(vec3 worldPos) {
    float distXZ = length(worldPos.xz);
    float distY = abs(worldPos.y);
    return max(distXZ, distY);
}

float FLWFogFactor() {
    return (uFogRange.y - FragDistance) / (uFogRange.y - uFogRange.x);
}
// Adjust the [0,1] normalized lightmap value based on the texture matrix from LightTexture#enableLightmap
vec2 shiftLight(vec2 lm) {
    return lm * 0.99609375 + 0.03125;// * 255/256 + 1/32
}


uniform float uTime;
uniform mat4 uViewProjection;
uniform vec3 uCameraPos;

uniform vec2 uTextureScale;
uniform sampler2D uBlockAtlas;
uniform sampler2D uLightMap;

uniform vec2 uWindowSize;

void FLWFinalizeNormal(inout vec3 normal) {
    // noop
}

#if defined(VERTEX_SHADER)
void FLWFinalizeWorldPos(inout vec4 worldPos) {
    FragDistance = cylindrical_distance(worldPos.xyz, uCameraPos);

    gl_Position = uViewProjection * worldPos;
}

#elif defined(FRAGMENT_SHADER)


#define ALPHA_DISCARD 0.1
// optimize discard usage
#if defined(ALPHA_DISCARD)
#if defined(GL_ARB_conservative_depth)
layout (depth_greater) out float gl_FragDepth;
#endif
#endif
out vec4 fragColor;

vec4 FLWBlockTexture(vec2 texCoords) {
    return texture(uBlockAtlas, texCoords);
}

void FLWFinalizeColor(vec4 color) {
    float a = color.a;
    float fog = clamp(FLWFogFactor(), 0., 1.);

    color = mix(uFogColor, color, fog);
    color.a = a;

    #if defined(ALPHA_DISCARD)
    if (color.a < ALPHA_DISCARD) {
        discard;
    }
    #endif

    fragColor = color;
}

vec4 FLWLight(vec2 lightCoords) {
    return texture(uLightMap, shiftLight(lightCoords));
}
#endif


mat4 rotate(vec3 axis, float angle) {
    float s = sin(angle);
    float c = cos(angle);
    float oc = 1. - c;

    vec3 sa = axis * s;

    mat4 mr = mat4(1.);
    mr[0].xyz = oc * axis.xxz * axis.xyx + vec3(c, sa.z, -sa.y);
    mr[1].xyz = oc * axis.xyy * axis.yyz + vec3(-sa.z, c, sa.x);
    mr[2].xyz = oc * axis.zyz * axis.xzz + vec3(sa.y, -sa.x, c);

    return mr;
}

mat4 rotation(vec3 rot) {
    return rotate(vec3(0., 1., 0.), rot.y) * rotate(vec3(0., 0., 1.), rot.z) * rotate(vec3(1., 0., 0.), rot.x);
}

mat3 modelToNormal(mat4 mat) {
    // Discard the edges. This won't be accurate for scaled or skewed matrices,
    // but we don't have to work with those often.
    mat3 m;
    m[0] = mat[0].xyz;
    m[1] = mat[1].xyz;
    m[2] = mat[2].xyz;
    return m;
}

#define PIOVER2 1.5707963268

vec4 quat(vec3 axis, float angle) {
    float halfAngle = angle * PIOVER2 / 180.0;
    vec2 cs = sin(vec2(PIOVER2 - halfAngle, halfAngle)); // compute sin and cos in one instruction
    return vec4(axis.xyz * cs.y,  cs.x);
}

vec4 quatMult(vec4 q1, vec4 q2) {
    // disgustingly vectorized quaternion multiplication
    vec4 a = q1.w * q2.xyzw;
    vec4 b = q1.x * q2.wzxy * vec4(1., -1., 1., -1.);
    vec4 c = q1.y * q2.zwxy * vec4(1., 1., -1., -1.);
    vec4 d = q1.z * q2.yxwz * vec4(-1., 1., 1., -1.);

    return a + b + c + d;
}

vec3 rotateVertexByQuat(vec3 v, vec4 q) {
    vec3 i = q.xyz;
    return v + 2.0 * cross(i, cross(i, v) + q.w * v);
}

vec3 rotateAbout(vec3 v, vec3 axis, float angle) {
    return rotateVertexByQuat(v, quat(axis, angle));
}

float diffuse(vec3 normal) {
    vec3 n2 = normal * normal * vec3(.6, .25, .8);
    return min(n2.x + n2.y * (3. + normal.y) + n2.z, 1.);
}
struct Vertex {
    vec3 pos;
    vec2 texCoords;
    vec3 normal;
};

struct BlockFrag {
    vec2 texCoords;
    vec4 color;
    float diffuse;
    vec2 light;
};

#if defined(FRAGMENT_SHADER)
void fragment(BlockFrag r) {
    vec4 tex = FLWBlockTexture(r.texCoords);

    vec4 color = vec4(tex.rgb * FLWLight(r.light).rgb * r.diffuse, tex.a) * r.color;

    FLWFinalizeColor(color);
}
#endif
#define PI 3.1415926538





struct Flap {
    vec3 instancePos;
    vec2 light;
    vec3 segmentOffset;
    vec3 pivot;
    float horizontalAngle;
    float intensity;
    float flapScale;
    float flapness;
};




#if defined(VERTEX_SHADER)

float toRad(float degrees) {
    return fract(degrees / 360.) * PI * 2.;
}

float getFlapAngle(float flapness, float intensity, float scale) {
    float absFlap = abs(flapness);

    float angle = sin((1. - absFlap) * PI * intensity) * 30. * flapness * scale;

    float halfAngle = angle * 0.5;

    float which = step(0., flapness); // 0 if negative, 1 if positive
    float degrees = which * halfAngle + (1. - which) * angle; // branchless conditional multiply

    return degrees;
}

BlockFrag vertex(Vertex v, Flap flap) {
    float flapAngle = getFlapAngle(flap.flapness, flap.intensity, flap.flapScale);

    vec4 orientation = quat(vec3(0., 1., 0.), -flap.horizontalAngle);
    vec4 flapRotation = quat(vec3(1., 0., 0.), flapAngle);

    vec3 rotated = rotateVertexByQuat(v.pos - flap.pivot, flapRotation) + flap.pivot + flap.segmentOffset;
    rotated = rotateVertexByQuat(rotated - .5, orientation) + flap.instancePos + .5;

    vec4 worldPos = vec4(rotated, 1.);
    vec3 norm = rotateVertexByQuat(rotateVertexByQuat(v.normal, flapRotation), orientation);

    FLWFinalizeWorldPos(worldPos);
    FLWFinalizeNormal(norm);

    BlockFrag b;
    b.diffuse = diffuse(norm);
    b.texCoords = v.texCoords;
    b.light = flap.light;
    #if defined(DEBUG_NORMAL)
    b.color = vec4(norm, 1.);
    #else
    b.color = vec4(1.);
    #endif
    return b;
}
#endif

in vec3 a_v_pos;
in vec2 a_v_texCoords;
in vec3 a_v_normal;
in vec3 a_i_instancePos;
in vec2 a_i_light;
in vec3 a_i_segmentOffset;
in vec3 a_i_pivot;
in float a_i_horizontalAngle;
in float a_i_intensity;
in float a_i_flapScale;
in float a_i_flapness;
out vec2 v2f_texCoords;
out vec4 v2f_color;
out float v2f_diffuse;
out vec2 v2f_light;
void main() {
Vertex v;
v.pos = a_v_pos;
v.texCoords = a_v_texCoords;
v.normal = a_v_normal;
Flap i;
i.instancePos = a_i_instancePos;
i.light = a_i_light;
i.segmentOffset = a_i_segmentOffset;
i.pivot = a_i_pivot;
i.horizontalAngle = a_i_horizontalAngle;
i.intensity = a_i_intensity;
i.flapScale = a_i_flapScale;
i.flapness = a_i_flapness;
BlockFrag o = vertex(v, i);
v2f_texCoords = o.texCoords;
v2f_color = o.color;
v2f_diffuse = o.diffuse;
v2f_light = o.light;
}
[16:19:41] [Render thread/ERROR]: Shader compilation log for create:flap: WARNING: 0:2: extension 'GL_ARB_conservative_depth' is not supported

[16:19:41] [Render thread/ERROR]: #version 150
#extension GL_ARB_conservative_depth : enable
#define FRAGMENT_SHADER
#define DEBUG_NORMAL
#if defined(VERTEX_SHADER)
out float FragDistance;
#elif defined(FRAGMENT_SHADER)
in float FragDistance;
#endif
uniform vec4 uFogColor;
uniform vec2 uFogRange;

float cylindrical_distance(vec3 worldPos, vec3 cameraPos) {
    float distXZ = length(worldPos.xz - cameraPos.xz);
    float distY = abs(worldPos.y - cameraPos.y);
    return max(distXZ, distY);
}

float cylindrical_distance(vec3 worldPos) {
    float distXZ = length(worldPos.xz);
    float distY = abs(worldPos.y);
    return max(distXZ, distY);
}

float FLWFogFactor() {
    return (uFogRange.y - FragDistance) / (uFogRange.y - uFogRange.x);
}
// Adjust the [0,1] normalized lightmap value based on the texture matrix from LightTexture#enableLightmap
vec2 shiftLight(vec2 lm) {
    return lm * 0.99609375 + 0.03125;// * 255/256 + 1/32
}


uniform float uTime;
uniform mat4 uViewProjection;
uniform vec3 uCameraPos;

uniform vec2 uTextureScale;
uniform sampler2D uBlockAtlas;
uniform sampler2D uLightMap;

uniform vec2 uWindowSize;

void FLWFinalizeNormal(inout vec3 normal) {
    // noop
}

#if defined(VERTEX_SHADER)
void FLWFinalizeWorldPos(inout vec4 worldPos) {
    FragDistance = cylindrical_distance(worldPos.xyz, uCameraPos);

    gl_Position = uViewProjection * worldPos;
}

#elif defined(FRAGMENT_SHADER)


#define ALPHA_DISCARD 0.1
// optimize discard usage
#if defined(ALPHA_DISCARD)
#if defined(GL_ARB_conservative_depth)
layout (depth_greater) out float gl_FragDepth;
#endif
#endif
out vec4 fragColor;

vec4 FLWBlockTexture(vec2 texCoords) {
    return texture(uBlockAtlas, texCoords);
}

void FLWFinalizeColor(vec4 color) {
    float a = color.a;
    float fog = clamp(FLWFogFactor(), 0., 1.);

    color = mix(uFogColor, color, fog);
    color.a = a;

    #if defined(ALPHA_DISCARD)
    if (color.a < ALPHA_DISCARD) {
        discard;
    }
    #endif

    fragColor = color;
}

vec4 FLWLight(vec2 lightCoords) {
    return texture(uLightMap, shiftLight(lightCoords));
}
#endif


mat4 rotate(vec3 axis, float angle) {
    float s = sin(angle);
    float c = cos(angle);
    float oc = 1. - c;

    vec3 sa = axis * s;

    mat4 mr = mat4(1.);
    mr[0].xyz = oc * axis.xxz * axis.xyx + vec3(c, sa.z, -sa.y);
    mr[1].xyz = oc * axis.xyy * axis.yyz + vec3(-sa.z, c, sa.x);
    mr[2].xyz = oc * axis.zyz * axis.xzz + vec3(sa.y, -sa.x, c);

    return mr;
}

mat4 rotation(vec3 rot) {
    return rotate(vec3(0., 1., 0.), rot.y) * rotate(vec3(0., 0., 1.), rot.z) * rotate(vec3(1., 0., 0.), rot.x);
}

mat3 modelToNormal(mat4 mat) {
    // Discard the edges. This won't be accurate for scaled or skewed matrices,
    // but we don't have to work with those often.
    mat3 m;
    m[0] = mat[0].xyz;
    m[1] = mat[1].xyz;
    m[2] = mat[2].xyz;
    return m;
}

#define PIOVER2 1.5707963268

vec4 quat(vec3 axis, float angle) {
    float halfAngle = angle * PIOVER2 / 180.0;
    vec2 cs = sin(vec2(PIOVER2 - halfAngle, halfAngle)); // compute sin and cos in one instruction
    return vec4(axis.xyz * cs.y,  cs.x);
}

vec4 quatMult(vec4 q1, vec4 q2) {
    // disgustingly vectorized quaternion multiplication
    vec4 a = q1.w * q2.xyzw;
    vec4 b = q1.x * q2.wzxy * vec4(1., -1., 1., -1.);
    vec4 c = q1.y * q2.zwxy * vec4(1., 1., -1., -1.);
    vec4 d = q1.z * q2.yxwz * vec4(-1., 1., 1., -1.);

    return a + b + c + d;
}

vec3 rotateVertexByQuat(vec3 v, vec4 q) {
    vec3 i = q.xyz;
    return v + 2.0 * cross(i, cross(i, v) + q.w * v);
}

vec3 rotateAbout(vec3 v, vec3 axis, float angle) {
    return rotateVertexByQuat(v, quat(axis, angle));
}

float diffuse(vec3 normal) {
    vec3 n2 = normal * normal * vec3(.6, .25, .8);
    return min(n2.x + n2.y * (3. + normal.y) + n2.z, 1.);
}
struct Vertex {
    vec3 pos;
    vec2 texCoords;
    vec3 normal;
};

struct BlockFrag {
    vec2 texCoords;
    vec4 color;
    float diffuse;
    vec2 light;
};

#if defined(FRAGMENT_SHADER)
void fragment(BlockFrag r) {
    vec4 tex = FLWBlockTexture(r.texCoords);

    vec4 color = vec4(tex.rgb * FLWLight(r.light).rgb * r.diffuse, tex.a) * r.color;

    FLWFinalizeColor(color);
}
#endif
#define PI 3.1415926538





struct Flap {
    vec3 instancePos;
    vec2 light;
    vec3 segmentOffset;
    vec3 pivot;
    float horizontalAngle;
    float intensity;
    float flapScale;
    float flapness;
};




#if defined(VERTEX_SHADER)

float toRad(float degrees) {
    return fract(degrees / 360.) * PI * 2.;
}

float getFlapAngle(float flapness, float intensity, float scale) {
    float absFlap = abs(flapness);

    float angle = sin((1. - absFlap) * PI * intensity) * 30. * flapness * scale;

    float halfAngle = angle * 0.5;

    float which = step(0., flapness); // 0 if negative, 1 if positive
    float degrees = which * halfAngle + (1. - which) * angle; // branchless conditional multiply

    return degrees;
}

BlockFrag vertex(Vertex v, Flap flap) {
    float flapAngle = getFlapAngle(flap.flapness, flap.intensity, flap.flapScale);

    vec4 orientation = quat(vec3(0., 1., 0.), -flap.horizontalAngle);
    vec4 flapRotation = quat(vec3(1., 0., 0.), flapAngle);

    vec3 rotated = rotateVertexByQuat(v.pos - flap.pivot, flapRotation) + flap.pivot + flap.segmentOffset;
    rotated = rotateVertexByQuat(rotated - .5, orientation) + flap.instancePos + .5;

    vec4 worldPos = vec4(rotated, 1.);
    vec3 norm = rotateVertexByQuat(rotateVertexByQuat(v.normal, flapRotation), orientation);

    FLWFinalizeWorldPos(worldPos);
    FLWFinalizeNormal(norm);

    BlockFrag b;
    b.diffuse = diffuse(norm);
    b.texCoords = v.texCoords;
    b.light = flap.light;
    #if defined(DEBUG_NORMAL)
    b.color = vec4(norm, 1.);
    #else
    b.color = vec4(1.);
    #endif
    return b;
}
#endif

in vec2 v2f_texCoords;
in vec4 v2f_color;
in float v2f_diffuse;
in vec2 v2f_light;
void main() {
BlockFrag o;
o.texCoords = v2f_texCoords;
o.color = v2f_color;
o.diffuse = v2f_diffuse;
o.light = v2f_light;
fragment(o);
}
[16:19:41] [Render thread/ERROR]: Shader compilation log for create:belt: WARNING: 0:2: extension 'GL_ARB_conservative_depth' is not supported

[16:19:41] [Render thread/ERROR]: #version 150
#extension GL_ARB_conservative_depth : enable
#define VERTEX_SHADER
#if defined(VERTEX_SHADER)
out float FragDistance;
#elif defined(FRAGMENT_SHADER)
in float FragDistance;
#endif
uniform vec4 uFogColor;
uniform vec2 uFogRange;

float cylindrical_distance(vec3 worldPos, vec3 cameraPos) {
    float distXZ = length(worldPos.xz - cameraPos.xz);
    float distY = abs(worldPos.y - cameraPos.y);
    return max(distXZ, distY);
}

float cylindrical_distance(vec3 worldPos) {
    float distXZ = length(worldPos.xz);
    float distY = abs(worldPos.y);
    return max(distXZ, distY);
}

float FLWFogFactor() {
    return (uFogRange.y - FragDistance) / (uFogRange.y - uFogRange.x);
}
// Adjust the [0,1] normalized lightmap value based on the texture matrix from LightTexture#enableLightmap
vec2 shiftLight(vec2 lm) {
    return lm * 0.99609375 + 0.03125;// * 255/256 + 1/32
}


uniform float uTime;
uniform mat4 uViewProjection;
uniform vec3 uCameraPos;

uniform vec2 uTextureScale;
uniform sampler2D uBlockAtlas;
uniform sampler2D uLightMap;

uniform vec2 uWindowSize;

void FLWFinalizeNormal(inout vec3 normal) {
    // noop
}

#if defined(VERTEX_SHADER)
void FLWFinalizeWorldPos(inout vec4 worldPos) {
    FragDistance = cylindrical_distance(worldPos.xyz, uCameraPos);

    gl_Position = uViewProjection * worldPos;
}

#elif defined(FRAGMENT_SHADER)


#define ALPHA_DISCARD 0.1
// optimize discard usage
#if defined(ALPHA_DISCARD)
#if defined(GL_ARB_conservative_depth)
layout (depth_greater) out float gl_FragDepth;
#endif
#endif
out vec4 fragColor;

vec4 FLWBlockTexture(vec2 texCoords) {
    return texture(uBlockAtlas, texCoords);
}

void FLWFinalizeColor(vec4 color) {
    float a = color.a;
    float fog = clamp(FLWFogFactor(), 0., 1.);

    color = mix(uFogColor, color, fog);
    color.a = a;

    #if defined(ALPHA_DISCARD)
    if (color.a < ALPHA_DISCARD) {
        discard;
    }
    #endif

    fragColor = color;
}

vec4 FLWLight(vec2 lightCoords) {
    return texture(uLightMap, shiftLight(lightCoords));
}
#endif


#define PIOVER2 1.5707963268

vec4 quat(vec3 axis, float angle) {
    float halfAngle = angle * PIOVER2 / 180.0;
    vec2 cs = sin(vec2(PIOVER2 - halfAngle, halfAngle)); // compute sin and cos in one instruction
    return vec4(axis.xyz * cs.y,  cs.x);
}

vec4 quatMult(vec4 q1, vec4 q2) {
    // disgustingly vectorized quaternion multiplication
    vec4 a = q1.w * q2.xyzw;
    vec4 b = q1.x * q2.wzxy * vec4(1., -1., 1., -1.);
    vec4 c = q1.y * q2.zwxy * vec4(1., 1., -1., -1.);
    vec4 d = q1.z * q2.yxwz * vec4(-1., 1., 1., -1.);

    return a + b + c + d;
}

vec3 rotateVertexByQuat(vec3 v, vec4 q) {
    vec3 i = q.xyz;
    return v + 2.0 * cross(i, cross(i, v) + q.w * v);
}

vec3 rotateAbout(vec3 v, vec3 axis, float angle) {
    return rotateVertexByQuat(v, quat(axis, angle));
}

mat4 rotate(vec3 axis, float angle) {
    float s = sin(angle);
    float c = cos(angle);
    float oc = 1. - c;

    vec3 sa = axis * s;

    mat4 mr = mat4(1.);
    mr[0].xyz = oc * axis.xxz * axis.xyx + vec3(c, sa.z, -sa.y);
    mr[1].xyz = oc * axis.xyy * axis.yyz + vec3(-sa.z, c, sa.x);
    mr[2].xyz = oc * axis.zyz * axis.xzz + vec3(sa.y, -sa.x, c);

    return mr;
}

mat4 rotation(vec3 rot) {
    return rotate(vec3(0., 1., 0.), rot.y) * rotate(vec3(0., 0., 1.), rot.z) * rotate(vec3(1., 0., 0.), rot.x);
}

mat3 modelToNormal(mat4 mat) {
    // Discard the edges. This won't be accurate for scaled or skewed matrices,
    // but we don't have to work with those often.
    mat3 m;
    m[0] = mat[0].xyz;
    m[1] = mat[1].xyz;
    m[2] = mat[2].xyz;
    return m;
}

float diffuse(vec3 normal) {
    vec3 n2 = normal * normal * vec3(.6, .25, .8);
    return min(n2.x + n2.y * (3. + normal.y) + n2.z, 1.);
}
struct Vertex {
    vec3 pos;
    vec2 texCoords;
    vec3 normal;
};

struct BlockFrag {
    vec2 texCoords;
    vec4 color;
    float diffuse;
    vec2 light;
};

#if defined(FRAGMENT_SHADER)
void fragment(BlockFrag r) {
    vec4 tex = FLWBlockTexture(r.texCoords);

    vec4 color = vec4(tex.rgb * FLWLight(r.light).rgb * r.diffuse, tex.a) * r.color;

    FLWFinalizeColor(color);
}
#endif
#define PI 3.1415926538





struct Belt {
    vec2 light;
    vec4 color;
    vec3 pos;
    float speed;
    float offset;
    vec4 rotation;
    vec2 sourceTexture;
    vec4 scrollTexture;
    float scrollMult;
};




#if defined(VERTEX_SHADER)
BlockFrag vertex(Vertex v, Belt instance) {
    vec3 rotated = rotateVertexByQuat(v.pos - .5, instance.rotation) + instance.pos + .5;

    vec4 worldPos = vec4(rotated, 1.);

    vec3 norm = rotateVertexByQuat(v.normal, instance.rotation);

    FLWFinalizeWorldPos(worldPos);
    FLWFinalizeNormal(norm);

    float scrollSize = instance.scrollTexture.w - instance.scrollTexture.y;
    float scroll = fract(instance.speed * uTime / (31.5 * 16.) + instance.offset) * scrollSize * instance.scrollMult;

    BlockFrag b;
    b.diffuse = diffuse(norm);
    b.texCoords = v.texCoords - instance.sourceTexture + instance.scrollTexture.xy + vec2(0, scroll);
    b.light = instance.light;

    #if defined(DEBUG_RAINBOW)
    b.color = instance.color;
    #elif defined(DEBUG_NORMAL)
    b.color = vec4(norm, 1.);
    #else
    b.color = vec4(1.);
    #endif

    return b;
}
#endif

in vec3 a_v_pos;
in vec2 a_v_texCoords;
in vec3 a_v_normal;
in vec2 a_i_light;
in vec4 a_i_color;
in vec3 a_i_pos;
in float a_i_speed;
in float a_i_offset;
in vec4 a_i_rotation;
in vec2 a_i_sourceTexture;
in vec4 a_i_scrollTexture;
in float a_i_scrollMult;
out vec2 v2f_texCoords;
out vec4 v2f_color;
out float v2f_diffuse;
out vec2 v2f_light;
void main() {
Vertex v;
v.pos = a_v_pos;
v.texCoords = a_v_texCoords;
v.normal = a_v_normal;
Belt i;
i.light = a_i_light;
i.color = a_i_color;
i.pos = a_i_pos;
i.speed = a_i_speed;
i.offset = a_i_offset;
i.rotation = a_i_rotation;
i.sourceTexture = a_i_sourceTexture;
i.scrollTexture = a_i_scrollTexture;
i.scrollMult = a_i_scrollMult;
BlockFrag o = vertex(v, i);
v2f_texCoords = o.texCoords;
v2f_color = o.color;
v2f_diffuse = o.diffuse;
v2f_light = o.light;
}
[16:19:41] [Render thread/ERROR]: Shader compilation log for create:belt: WARNING: 0:2: extension 'GL_ARB_conservative_depth' is not supported

[16:19:41] [Render thread/ERROR]: #version 150
#extension GL_ARB_conservative_depth : enable
#define FRAGMENT_SHADER
#if defined(VERTEX_SHADER)
out float FragDistance;
#elif defined(FRAGMENT_SHADER)
in float FragDistance;
#endif
uniform vec4 uFogColor;
uniform vec2 uFogRange;

float cylindrical_distance(vec3 worldPos, vec3 cameraPos) {
    float distXZ = length(worldPos.xz - cameraPos.xz);
    float distY = abs(worldPos.y - cameraPos.y);
    return max(distXZ, distY);
}

float cylindrical_distance(vec3 worldPos) {
    float distXZ = length(worldPos.xz);
    float distY = abs(worldPos.y);
    return max(distXZ, distY);
}

float FLWFogFactor() {
    return (uFogRange.y - FragDistance) / (uFogRange.y - uFogRange.x);
}
// Adjust the [0,1] normalized lightmap value based on the texture matrix from LightTexture#enableLightmap
vec2 shiftLight(vec2 lm) {
    return lm * 0.99609375 + 0.03125;// * 255/256 + 1/32
}


uniform float uTime;
uniform mat4 uViewProjection;
uniform vec3 uCameraPos;

uniform vec2 uTextureScale;
uniform sampler2D uBlockAtlas;
uniform sampler2D uLightMap;

uniform vec2 uWindowSize;

void FLWFinalizeNormal(inout vec3 normal) {
    // noop
}

#if defined(VERTEX_SHADER)
void FLWFinalizeWorldPos(inout vec4 worldPos) {
    FragDistance = cylindrical_distance(worldPos.xyz, uCameraPos);

    gl_Position = uViewProjection * worldPos;
}

#elif defined(FRAGMENT_SHADER)


#define ALPHA_DISCARD 0.1
// optimize discard usage
#if defined(ALPHA_DISCARD)
#if defined(GL_ARB_conservative_depth)
layout (depth_greater) out float gl_FragDepth;
#endif
#endif
out vec4 fragColor;

vec4 FLWBlockTexture(vec2 texCoords) {
    return texture(uBlockAtlas, texCoords);
}

void FLWFinalizeColor(vec4 color) {
    float a = color.a;
    float fog = clamp(FLWFogFactor(), 0., 1.);

    color = mix(uFogColor, color, fog);
    color.a = a;

    #if defined(ALPHA_DISCARD)
    if (color.a < ALPHA_DISCARD) {
        discard;
    }
    #endif

    fragColor = color;
}

vec4 FLWLight(vec2 lightCoords) {
    return texture(uLightMap, shiftLight(lightCoords));
}
#endif


#define PIOVER2 1.5707963268

vec4 quat(vec3 axis, float angle) {
    float halfAngle = angle * PIOVER2 / 180.0;
    vec2 cs = sin(vec2(PIOVER2 - halfAngle, halfAngle)); // compute sin and cos in one instruction
    return vec4(axis.xyz * cs.y,  cs.x);
}

vec4 quatMult(vec4 q1, vec4 q2) {
    // disgustingly vectorized quaternion multiplication
    vec4 a = q1.w * q2.xyzw;
    vec4 b = q1.x * q2.wzxy * vec4(1., -1., 1., -1.);
    vec4 c = q1.y * q2.zwxy * vec4(1., 1., -1., -1.);
    vec4 d = q1.z * q2.yxwz * vec4(-1., 1., 1., -1.);

    return a + b + c + d;
}

vec3 rotateVertexByQuat(vec3 v, vec4 q) {
    vec3 i = q.xyz;
    return v + 2.0 * cross(i, cross(i, v) + q.w * v);
}

vec3 rotateAbout(vec3 v, vec3 axis, float angle) {
    return rotateVertexByQuat(v, quat(axis, angle));
}

mat4 rotate(vec3 axis, float angle) {
    float s = sin(angle);
    float c = cos(angle);
    float oc = 1. - c;

    vec3 sa = axis * s;

    mat4 mr = mat4(1.);
    mr[0].xyz = oc * axis.xxz * axis.xyx + vec3(c, sa.z, -sa.y);
    mr[1].xyz = oc * axis.xyy * axis.yyz + vec3(-sa.z, c, sa.x);
    mr[2].xyz = oc * axis.zyz * axis.xzz + vec3(sa.y, -sa.x, c);

    return mr;
}

mat4 rotation(vec3 rot) {
    return rotate(vec3(0., 1., 0.), rot.y) * rotate(vec3(0., 0., 1.), rot.z) * rotate(vec3(1., 0., 0.), rot.x);
}

mat3 modelToNormal(mat4 mat) {
    // Discard the edges. This won't be accurate for scaled or skewed matrices,
    // but we don't have to work with those often.
    mat3 m;
    m[0] = mat[0].xyz;
    m[1] = mat[1].xyz;
    m[2] = mat[2].xyz;
    return m;
}

float diffuse(vec3 normal) {
    vec3 n2 = normal * normal * vec3(.6, .25, .8);
    return min(n2.x + n2.y * (3. + normal.y) + n2.z, 1.);
}
struct Vertex {
    vec3 pos;
    vec2 texCoords;
    vec3 normal;
};

struct BlockFrag {
    vec2 texCoords;
    vec4 color;
    float diffuse;
    vec2 light;
};

#if defined(FRAGMENT_SHADER)
void fragment(BlockFrag r) {
    vec4 tex = FLWBlockTexture(r.texCoords);

    vec4 color = vec4(tex.rgb * FLWLight(r.light).rgb * r.diffuse, tex.a) * r.color;

    FLWFinalizeColor(color);
}
#endif
#define PI 3.1415926538





struct Belt {
    vec2 light;
    vec4 color;
    vec3 pos;
    float speed;
    float offset;
    vec4 rotation;
    vec2 sourceTexture;
    vec4 scrollTexture;
    float scrollMult;
};




#if defined(VERTEX_SHADER)
BlockFrag vertex(Vertex v, Belt instance) {
    vec3 rotated = rotateVertexByQuat(v.pos - .5, instance.rotation) + instance.pos + .5;

    vec4 worldPos = vec4(rotated, 1.);

    vec3 norm = rotateVertexByQuat(v.normal, instance.rotation);

    FLWFinalizeWorldPos(worldPos);
    FLWFinalizeNormal(norm);

    float scrollSize = instance.scrollTexture.w - instance.scrollTexture.y;
    float scroll = fract(instance.speed * uTime / (31.5 * 16.) + instance.offset) * scrollSize * instance.scrollMult;

    BlockFrag b;
    b.diffuse = diffuse(norm);
    b.texCoords = v.texCoords - instance.sourceTexture + instance.scrollTexture.xy + vec2(0, scroll);
    b.light = instance.light;

    #if defined(DEBUG_RAINBOW)
    b.color = instance.color;
    #elif defined(DEBUG_NORMAL)
    b.color = vec4(norm, 1.);
    #else
    b.color = vec4(1.);
    #endif

    return b;
}
#endif

in vec2 v2f_texCoords;
in vec4 v2f_color;
in float v2f_diffuse;
in vec2 v2f_light;
void main() {
BlockFrag o;
o.texCoords = v2f_texCoords;
o.color = v2f_color;
o.diffuse = v2f_diffuse;
o.light = v2f_light;
fragment(o);
}
[16:19:41] [Render thread/ERROR]: Shader compilation log for create:belt: WARNING: 0:2: extension 'GL_ARB_conservative_depth' is not supported

[16:19:41] [Render thread/ERROR]: #version 150
#extension GL_ARB_conservative_depth : enable
#define VERTEX_SHADER
#define DEBUG_RAINBOW
#if defined(VERTEX_SHADER)
out float FragDistance;
#elif defined(FRAGMENT_SHADER)
in float FragDistance;
#endif
uniform vec4 uFogColor;
uniform vec2 uFogRange;

float cylindrical_distance(vec3 worldPos, vec3 cameraPos) {
    float distXZ = length(worldPos.xz - cameraPos.xz);
    float distY = abs(worldPos.y - cameraPos.y);
    return max(distXZ, distY);
}

float cylindrical_distance(vec3 worldPos) {
    float distXZ = length(worldPos.xz);
    float distY = abs(worldPos.y);
    return max(distXZ, distY);
}

float FLWFogFactor() {
    return (uFogRange.y - FragDistance) / (uFogRange.y - uFogRange.x);
}
// Adjust the [0,1] normalized lightmap value based on the texture matrix from LightTexture#enableLightmap
vec2 shiftLight(vec2 lm) {
    return lm * 0.99609375 + 0.03125;// * 255/256 + 1/32
}


uniform float uTime;
uniform mat4 uViewProjection;
uniform vec3 uCameraPos;

uniform vec2 uTextureScale;
uniform sampler2D uBlockAtlas;
uniform sampler2D uLightMap;

uniform vec2 uWindowSize;

void FLWFinalizeNormal(inout vec3 normal) {
    // noop
}

#if defined(VERTEX_SHADER)
void FLWFinalizeWorldPos(inout vec4 worldPos) {
    FragDistance = cylindrical_distance(worldPos.xyz, uCameraPos);

    gl_Position = uViewProjection * worldPos;
}

#elif defined(FRAGMENT_SHADER)


#define ALPHA_DISCARD 0.1
// optimize discard usage
#if defined(ALPHA_DISCARD)
#if defined(GL_ARB_conservative_depth)
layout (depth_greater) out float gl_FragDepth;
#endif
#endif
out vec4 fragColor;

vec4 FLWBlockTexture(vec2 texCoords) {
    return texture(uBlockAtlas, texCoords);
}

void FLWFinalizeColor(vec4 color) {
    float a = color.a;
    float fog = clamp(FLWFogFactor(), 0., 1.);

    color = mix(uFogColor, color, fog);
    color.a = a;

    #if defined(ALPHA_DISCARD)
    if (color.a < ALPHA_DISCARD) {
        discard;
    }
    #endif

    fragColor = color;
}

vec4 FLWLight(vec2 lightCoords) {
    return texture(uLightMap, shiftLight(lightCoords));
}
#endif


#define PIOVER2 1.5707963268

vec4 quat(vec3 axis, float angle) {
    float halfAngle = angle * PIOVER2 / 180.0;
    vec2 cs = sin(vec2(PIOVER2 - halfAngle, halfAngle)); // compute sin and cos in one instruction
    return vec4(axis.xyz * cs.y,  cs.x);
}

vec4 quatMult(vec4 q1, vec4 q2) {
    // disgustingly vectorized quaternion multiplication
    vec4 a = q1.w * q2.xyzw;
    vec4 b = q1.x * q2.wzxy * vec4(1., -1., 1., -1.);
    vec4 c = q1.y * q2.zwxy * vec4(1., 1., -1., -1.);
    vec4 d = q1.z * q2.yxwz * vec4(-1., 1., 1., -1.);

    return a + b + c + d;
}

vec3 rotateVertexByQuat(vec3 v, vec4 q) {
    vec3 i = q.xyz;
    return v + 2.0 * cross(i, cross(i, v) + q.w * v);
}

vec3 rotateAbout(vec3 v, vec3 axis, float angle) {
    return rotateVertexByQuat(v, quat(axis, angle));
}

mat4 rotate(vec3 axis, float angle) {
    float s = sin(angle);
    float c = cos(angle);
    float oc = 1. - c;

    vec3 sa = axis * s;

    mat4 mr = mat4(1.);
    mr[0].xyz = oc * axis.xxz * axis.xyx + vec3(c, sa.z, -sa.y);
    mr[1].xyz = oc * axis.xyy * axis.yyz + vec3(-sa.z, c, sa.x);
    mr[2].xyz = oc * axis.zyz * axis.xzz + vec3(sa.y, -sa.x, c);

    return mr;
}

mat4 rotation(vec3 rot) {
    return rotate(vec3(0., 1., 0.), rot.y) * rotate(vec3(0., 0., 1.), rot.z) * rotate(vec3(1., 0., 0.), rot.x);
}

mat3 modelToNormal(mat4 mat) {
    // Discard the edges. This won't be accurate for scaled or skewed matrices,
    // but we don't have to work with those often.
    mat3 m;
    m[0] = mat[0].xyz;
    m[1] = mat[1].xyz;
    m[2] = mat[2].xyz;
    return m;
}

float diffuse(vec3 normal) {
    vec3 n2 = normal * normal * vec3(.6, .25, .8);
    return min(n2.x + n2.y * (3. + normal.y) + n2.z, 1.);
}
struct Vertex {
    vec3 pos;
    vec2 texCoords;
    vec3 normal;
};

struct BlockFrag {
    vec2 texCoords;
    vec4 color;
    float diffuse;
    vec2 light;
};

#if defined(FRAGMENT_SHADER)
void fragment(BlockFrag r) {
    vec4 tex = FLWBlockTexture(r.texCoords);

    vec4 color = vec4(tex.rgb * FLWLight(r.light).rgb * r.diffuse, tex.a) * r.color;

    FLWFinalizeColor(color);
}
#endif
#define PI 3.1415926538





struct Belt {
    vec2 light;
    vec4 color;
    vec3 pos;
    float speed;
    float offset;
    vec4 rotation;
    vec2 sourceTexture;
    vec4 scrollTexture;
    float scrollMult;
};




#if defined(VERTEX_SHADER)
BlockFrag vertex(Vertex v, Belt instance) {
    vec3 rotated = rotateVertexByQuat(v.pos - .5, instance.rotation) + instance.pos + .5;

    vec4 worldPos = vec4(rotated, 1.);

    vec3 norm = rotateVertexByQuat(v.normal, instance.rotation);

    FLWFinalizeWorldPos(worldPos);
    FLWFinalizeNormal(norm);

    float scrollSize = instance.scrollTexture.w - instance.scrollTexture.y;
    float scroll = fract(instance.speed * uTime / (31.5 * 16.) + instance.offset) * scrollSize * instance.scrollMult;

    BlockFrag b;
    b.diffuse = diffuse(norm);
    b.texCoords = v.texCoords - instance.sourceTexture + instance.scrollTexture.xy + vec2(0, scroll);
    b.light = instance.light;

    #if defined(DEBUG_RAINBOW)
    b.color = instance.color;
    #elif defined(DEBUG_NORMAL)
    b.color = vec4(norm, 1.);
    #else
    b.color = vec4(1.);
    #endif

    return b;
}
#endif

in vec3 a_v_pos;
in vec2 a_v_texCoords;
in vec3 a_v_normal;
in vec2 a_i_light;
in vec4 a_i_color;
in vec3 a_i_pos;
in float a_i_speed;
in float a_i_offset;
in vec4 a_i_rotation;
in vec2 a_i_sourceTexture;
in vec4 a_i_scrollTexture;
in float a_i_scrollMult;
out vec2 v2f_texCoords;
out vec4 v2f_color;
out float v2f_diffuse;
out vec2 v2f_light;
void main() {
Vertex v;
v.pos = a_v_pos;
v.texCoords = a_v_texCoords;
v.normal = a_v_normal;
Belt i;
i.light = a_i_light;
i.color = a_i_color;
i.pos = a_i_pos;
i.speed = a_i_speed;
i.offset = a_i_offset;
i.rotation = a_i_rotation;
i.sourceTexture = a_i_sourceTexture;
i.scrollTexture = a_i_scrollTexture;
i.scrollMult = a_i_scrollMult;
BlockFrag o = vertex(v, i);
v2f_texCoords = o.texCoords;
v2f_color = o.color;
v2f_diffuse = o.diffuse;
v2f_light = o.light;
}
[16:19:41] [Render thread/ERROR]: Shader compilation log for create:belt: WARNING: 0:2: extension 'GL_ARB_conservative_depth' is not supported

[16:19:41] [Render thread/ERROR]: #version 150
#extension GL_ARB_conservative_depth : enable
#define FRAGMENT_SHADER
#define DEBUG_RAINBOW
#if defined(VERTEX_SHADER)
out float FragDistance;
#elif defined(FRAGMENT_SHADER)
in float FragDistance;
#endif
uniform vec4 uFogColor;
uniform vec2 uFogRange;

float cylindrical_distance(vec3 worldPos, vec3 cameraPos) {
    float distXZ = length(worldPos.xz - cameraPos.xz);
    float distY = abs(worldPos.y - cameraPos.y);
    return max(distXZ, distY);
}

float cylindrical_distance(vec3 worldPos) {
    float distXZ = length(worldPos.xz);
    float distY = abs(worldPos.y);
    return max(distXZ, distY);
}

float FLWFogFactor() {
    return (uFogRange.y - FragDistance) / (uFogRange.y - uFogRange.x);
}
// Adjust the [0,1] normalized lightmap value based on the texture matrix from LightTexture#enableLightmap
vec2 shiftLight(vec2 lm) {
    return lm * 0.99609375 + 0.03125;// * 255/256 + 1/32
}


uniform float uTime;
uniform mat4 uViewProjection;
uniform vec3 uCameraPos;

uniform vec2 uTextureScale;
uniform sampler2D uBlockAtlas;
uniform sampler2D uLightMap;

uniform vec2 uWindowSize;

void FLWFinalizeNormal(inout vec3 normal) {
    // noop
}

#if defined(VERTEX_SHADER)
void FLWFinalizeWorldPos(inout vec4 worldPos) {
    FragDistance = cylindrical_distance(worldPos.xyz, uCameraPos);

    gl_Position = uViewProjection * worldPos;
}

#elif defined(FRAGMENT_SHADER)


#define ALPHA_DISCARD 0.1
// optimize discard usage
#if defined(ALPHA_DISCARD)
#if defined(GL_ARB_conservative_depth)
layout (depth_greater) out float gl_FragDepth;
#endif
#endif
out vec4 fragColor;

vec4 FLWBlockTexture(vec2 texCoords) {
    return texture(uBlockAtlas, texCoords);
}

void FLWFinalizeColor(vec4 color) {
    float a = color.a;
    float fog = clamp(FLWFogFactor(), 0., 1.);

    color = mix(uFogColor, color, fog);
    color.a = a;

    #if defined(ALPHA_DISCARD)
    if (color.a < ALPHA_DISCARD) {
        discard;
    }
    #endif

    fragColor = color;
}

vec4 FLWLight(vec2 lightCoords) {
    return texture(uLightMap, shiftLight(lightCoords));
}
#endif


#define PIOVER2 1.5707963268

vec4 quat(vec3 axis, float angle) {
    float halfAngle = angle * PIOVER2 / 180.0;
    vec2 cs = sin(vec2(PIOVER2 - halfAngle, halfAngle)); // compute sin and cos in one instruction
    return vec4(axis.xyz * cs.y,  cs.x);
}

vec4 quatMult(vec4 q1, vec4 q2) {
    // disgustingly vectorized quaternion multiplication
    vec4 a = q1.w * q2.xyzw;
    vec4 b = q1.x * q2.wzxy * vec4(1., -1., 1., -1.);
    vec4 c = q1.y * q2.zwxy * vec4(1., 1., -1., -1.);
    vec4 d = q1.z * q2.yxwz * vec4(-1., 1., 1., -1.);

    return a + b + c + d;
}

vec3 rotateVertexByQuat(vec3 v, vec4 q) {
    vec3 i = q.xyz;
    return v + 2.0 * cross(i, cross(i, v) + q.w * v);
}

vec3 rotateAbout(vec3 v, vec3 axis, float angle) {
    return rotateVertexByQuat(v, quat(axis, angle));
}

mat4 rotate(vec3 axis, float angle) {
    float s = sin(angle);
    float c = cos(angle);
    float oc = 1. - c;

    vec3 sa = axis * s;

    mat4 mr = mat4(1.);
    mr[0].xyz = oc * axis.xxz * axis.xyx + vec3(c, sa.z, -sa.y);
    mr[1].xyz = oc * axis.xyy * axis.yyz + vec3(-sa.z, c, sa.x);
    mr[2].xyz = oc * axis.zyz * axis.xzz + vec3(sa.y, -sa.x, c);

    return mr;
}

mat4 rotation(vec3 rot) {
    return rotate(vec3(0., 1., 0.), rot.y) * rotate(vec3(0., 0., 1.), rot.z) * rotate(vec3(1., 0., 0.), rot.x);
}

mat3 modelToNormal(mat4 mat) {
    // Discard the edges. This won't be accurate for scaled or skewed matrices,
    // but we don't have to work with those often.
    mat3 m;
    m[0] = mat[0].xyz;
    m[1] = mat[1].xyz;
    m[2] = mat[2].xyz;
    return m;
}

float diffuse(vec3 normal) {
    vec3 n2 = normal * normal * vec3(.6, .25, .8);
    return min(n2.x + n2.y * (3. + normal.y) + n2.z, 1.);
}
struct Vertex {
    vec3 pos;
    vec2 texCoords;
    vec3 normal;
};

struct BlockFrag {
    vec2 texCoords;
    vec4 color;
    float diffuse;
    vec2 light;
};

#if defined(FRAGMENT_SHADER)
void fragment(BlockFrag r) {
    vec4 tex = FLWBlockTexture(r.texCoords);

    vec4 color = vec4(tex.rgb * FLWLight(r.light).rgb * r.diffuse, tex.a) * r.color;

    FLWFinalizeColor(color);
}
#endif
#define PI 3.1415926538





struct Belt {
    vec2 light;
    vec4 color;
    vec3 pos;
    float speed;
    float offset;
    vec4 rotation;
    vec2 sourceTexture;
    vec4 scrollTexture;
    float scrollMult;
};




#if defined(VERTEX_SHADER)
BlockFrag vertex(Vertex v, Belt instance) {
    vec3 rotated = rotateVertexByQuat(v.pos - .5, instance.rotation) + instance.pos + .5;

    vec4 worldPos = vec4(rotated, 1.);

    vec3 norm = rotateVertexByQuat(v.normal, instance.rotation);

    FLWFinalizeWorldPos(worldPos);
    FLWFinalizeNormal(norm);

    float scrollSize = instance.scrollTexture.w - instance.scrollTexture.y;
    float scroll = fract(instance.speed * uTime / (31.5 * 16.) + instance.offset) * scrollSize * instance.scrollMult;

    BlockFrag b;
    b.diffuse = diffuse(norm);
    b.texCoords = v.texCoords - instance.sourceTexture + instance.scrollTexture.xy + vec2(0, scroll);
    b.light = instance.light;

    #if defined(DEBUG_RAINBOW)
    b.color = instance.color;
    #elif defined(DEBUG_NORMAL)
    b.color = vec4(norm, 1.);
    #else
    b.color = vec4(1.);
    #endif

    return b;
}
#endif

in vec2 v2f_texCoords;
in vec4 v2f_color;
in float v2f_diffuse;
in vec2 v2f_light;
void main() {
BlockFrag o;
o.texCoords = v2f_texCoords;
o.color = v2f_color;
o.diffuse = v2f_diffuse;
o.light = v2f_light;
fragment(o);
}
[16:19:41] [Render thread/ERROR]: Shader compilation log for create:belt: WARNING: 0:2: extension 'GL_ARB_conservative_depth' is not supported

[16:19:41] [Render thread/ERROR]: #version 150
#extension GL_ARB_conservative_depth : enable
#define VERTEX_SHADER
#define DEBUG_NORMAL
#if defined(VERTEX_SHADER)
out float FragDistance;
#elif defined(FRAGMENT_SHADER)
in float FragDistance;
#endif
uniform vec4 uFogColor;
uniform vec2 uFogRange;

float cylindrical_distance(vec3 worldPos, vec3 cameraPos) {
    float distXZ = length(worldPos.xz - cameraPos.xz);
    float distY = abs(worldPos.y - cameraPos.y);
    return max(distXZ, distY);
}

float cylindrical_distance(vec3 worldPos) {
    float distXZ = length(worldPos.xz);
    float distY = abs(worldPos.y);
    return max(distXZ, distY);
}

float FLWFogFactor() {
    return (uFogRange.y - FragDistance) / (uFogRange.y - uFogRange.x);
}
// Adjust the [0,1] normalized lightmap value based on the texture matrix from LightTexture#enableLightmap
vec2 shiftLight(vec2 lm) {
    return lm * 0.99609375 + 0.03125;// * 255/256 + 1/32
}


uniform float uTime;
uniform mat4 uViewProjection;
uniform vec3 uCameraPos;

uniform vec2 uTextureScale;
uniform sampler2D uBlockAtlas;
uniform sampler2D uLightMap;

uniform vec2 uWindowSize;

void FLWFinalizeNormal(inout vec3 normal) {
    // noop
}

#if defined(VERTEX_SHADER)
void FLWFinalizeWorldPos(inout vec4 worldPos) {
    FragDistance = cylindrical_distance(worldPos.xyz, uCameraPos);

    gl_Position = uViewProjection * worldPos;
}

#elif defined(FRAGMENT_SHADER)


#define ALPHA_DISCARD 0.1
// optimize discard usage
#if defined(ALPHA_DISCARD)
#if defined(GL_ARB_conservative_depth)
layout (depth_greater) out float gl_FragDepth;
#endif
#endif
out vec4 fragColor;

vec4 FLWBlockTexture(vec2 texCoords) {
    return texture(uBlockAtlas, texCoords);
}

void FLWFinalizeColor(vec4 color) {
    float a = color.a;
    float fog = clamp(FLWFogFactor(), 0., 1.);

    color = mix(uFogColor, color, fog);
    color.a = a;

    #if defined(ALPHA_DISCARD)
    if (color.a < ALPHA_DISCARD) {
        discard;
    }
    #endif

    fragColor = color;
}

vec4 FLWLight(vec2 lightCoords) {
    return texture(uLightMap, shiftLight(lightCoords));
}
#endif


#define PIOVER2 1.5707963268

vec4 quat(vec3 axis, float angle) {
    float halfAngle = angle * PIOVER2 / 180.0;
    vec2 cs = sin(vec2(PIOVER2 - halfAngle, halfAngle)); // compute sin and cos in one instruction
    return vec4(axis.xyz * cs.y,  cs.x);
}

vec4 quatMult(vec4 q1, vec4 q2) {
    // disgustingly vectorized quaternion multiplication
    vec4 a = q1.w * q2.xyzw;
    vec4 b = q1.x * q2.wzxy * vec4(1., -1., 1., -1.);
    vec4 c = q1.y * q2.zwxy * vec4(1., 1., -1., -1.);
    vec4 d = q1.z * q2.yxwz * vec4(-1., 1., 1., -1.);

    return a + b + c + d;
}

vec3 rotateVertexByQuat(vec3 v, vec4 q) {
    vec3 i = q.xyz;
    return v + 2.0 * cross(i, cross(i, v) + q.w * v);
}

vec3 rotateAbout(vec3 v, vec3 axis, float angle) {
    return rotateVertexByQuat(v, quat(axis, angle));
}

mat4 rotate(vec3 axis, float angle) {
    float s = sin(angle);
    float c = cos(angle);
    float oc = 1. - c;

    vec3 sa = axis * s;

    mat4 mr = mat4(1.);
    mr[0].xyz = oc * axis.xxz * axis.xyx + vec3(c, sa.z, -sa.y);
    mr[1].xyz = oc * axis.xyy * axis.yyz + vec3(-sa.z, c, sa.x);
    mr[2].xyz = oc * axis.zyz * axis.xzz + vec3(sa.y, -sa.x, c);

    return mr;
}

mat4 rotation(vec3 rot) {
    return rotate(vec3(0., 1., 0.), rot.y) * rotate(vec3(0., 0., 1.), rot.z) * rotate(vec3(1., 0., 0.), rot.x);
}

mat3 modelToNormal(mat4 mat) {
    // Discard the edges. This won't be accurate for scaled or skewed matrices,
    // but we don't have to work with those often.
    mat3 m;
    m[0] = mat[0].xyz;
    m[1] = mat[1].xyz;
    m[2] = mat[2].xyz;
    return m;
}

float diffuse(vec3 normal) {
    vec3 n2 = normal * normal * vec3(.6, .25, .8);
    return min(n2.x + n2.y * (3. + normal.y) + n2.z, 1.);
}
struct Vertex {
    vec3 pos;
    vec2 texCoords;
    vec3 normal;
};

struct BlockFrag {
    vec2 texCoords;
    vec4 color;
    float diffuse;
    vec2 light;
};

#if defined(FRAGMENT_SHADER)
void fragment(BlockFrag r) {
    vec4 tex = FLWBlockTexture(r.texCoords);

    vec4 color = vec4(tex.rgb * FLWLight(r.light).rgb * r.diffuse, tex.a) * r.color;

    FLWFinalizeColor(color);
}
#endif
#define PI 3.1415926538





struct Belt {
    vec2 light;
    vec4 color;
    vec3 pos;
    float speed;
    float offset;
    vec4 rotation;
    vec2 sourceTexture;
    vec4 scrollTexture;
    float scrollMult;
};




#if defined(VERTEX_SHADER)
BlockFrag vertex(Vertex v, Belt instance) {
    vec3 rotated = rotateVertexByQuat(v.pos - .5, instance.rotation) + instance.pos + .5;

    vec4 worldPos = vec4(rotated, 1.);

    vec3 norm = rotateVertexByQuat(v.normal, instance.rotation);

    FLWFinalizeWorldPos(worldPos);
    FLWFinalizeNormal(norm);

    float scrollSize = instance.scrollTexture.w - instance.scrollTexture.y;
    float scroll = fract(instance.speed * uTime / (31.5 * 16.) + instance.offset) * scrollSize * instance.scrollMult;

    BlockFrag b;
    b.diffuse = diffuse(norm);
    b.texCoords = v.texCoords - instance.sourceTexture + instance.scrollTexture.xy + vec2(0, scroll);
    b.light = instance.light;

    #if defined(DEBUG_RAINBOW)
    b.color = instance.color;
    #elif defined(DEBUG_NORMAL)
    b.color = vec4(norm, 1.);
    #else
    b.color = vec4(1.);
    #endif

    return b;
}
#endif

in vec3 a_v_pos;
in vec2 a_v_texCoords;
in vec3 a_v_normal;
in vec2 a_i_light;
in vec4 a_i_color;
in vec3 a_i_pos;
in float a_i_speed;
in float a_i_offset;
in vec4 a_i_rotation;
in vec2 a_i_sourceTexture;
in vec4 a_i_scrollTexture;
in float a_i_scrollMult;
out vec2 v2f_texCoords;
out vec4 v2f_color;
out float v2f_diffuse;
out vec2 v2f_light;
void main() {
Vertex v;
v.pos = a_v_pos;
v.texCoords = a_v_texCoords;
v.normal = a_v_normal;
Belt i;
i.light = a_i_light;
i.color = a_i_color;
i.pos = a_i_pos;
i.speed = a_i_speed;
i.offset = a_i_offset;
i.rotation = a_i_rotation;
i.sourceTexture = a_i_sourceTexture;
i.scrollTexture = a_i_scrollTexture;
i.scrollMult = a_i_scrollMult;
BlockFrag o = vertex(v, i);
v2f_texCoords = o.texCoords;
v2f_color = o.color;
v2f_diffuse = o.diffuse;
v2f_light = o.light;
}
[16:19:41] [Render thread/ERROR]: Shader compilation log for create:belt: WARNING: 0:2: extension 'GL_ARB_conservative_depth' is not supported

[16:19:41] [Render thread/ERROR]: #version 150
#extension GL_ARB_conservative_depth : enable
#define FRAGMENT_SHADER
#define DEBUG_NORMAL
#if defined(VERTEX_SHADER)
out float FragDistance;
#elif defined(FRAGMENT_SHADER)
in float FragDistance;
#endif
uniform vec4 uFogColor;
uniform vec2 uFogRange;

float cylindrical_distance(vec3 worldPos, vec3 cameraPos) {
    float distXZ = length(worldPos.xz - cameraPos.xz);
    float distY = abs(worldPos.y - cameraPos.y);
    return max(distXZ, distY);
}

float cylindrical_distance(vec3 worldPos) {
    float distXZ = length(worldPos.xz);
    float distY = abs(worldPos.y);
    return max(distXZ, distY);
}

float FLWFogFactor() {
    return (uFogRange.y - FragDistance) / (uFogRange.y - uFogRange.x);
}
// Adjust the [0,1] normalized lightmap value based on the texture matrix from LightTexture#enableLightmap
vec2 shiftLight(vec2 lm) {
    return lm * 0.99609375 + 0.03125;// * 255/256 + 1/32
}


uniform float uTime;
uniform mat4 uViewProjection;
uniform vec3 uCameraPos;

uniform vec2 uTextureScale;
uniform sampler2D uBlockAtlas;
uniform sampler2D uLightMap;

uniform vec2 uWindowSize;

void FLWFinalizeNormal(inout vec3 normal) {
    // noop
}

#if defined(VERTEX_SHADER)
void FLWFinalizeWorldPos(inout vec4 worldPos) {
    FragDistance = cylindrical_distance(worldPos.xyz, uCameraPos);

    gl_Position = uViewProjection * worldPos;
}

#elif defined(FRAGMENT_SHADER)


#define ALPHA_DISCARD 0.1
// optimize discard usage
#if defined(ALPHA_DISCARD)
#if defined(GL_ARB_conservative_depth)
layout (depth_greater) out float gl_FragDepth;
#endif
#endif
out vec4 fragColor;

vec4 FLWBlockTexture(vec2 texCoords) {
    return texture(uBlockAtlas, texCoords);
}

void FLWFinalizeColor(vec4 color) {
    float a = color.a;
    float fog = clamp(FLWFogFactor(), 0., 1.);

    color = mix(uFogColor, color, fog);
    color.a = a;

    #if defined(ALPHA_DISCARD)
    if (color.a < ALPHA_DISCARD) {
        discard;
    }
    #endif

    fragColor = color;
}

vec4 FLWLight(vec2 lightCoords) {
    return texture(uLightMap, shiftLight(lightCoords));
}
#endif


#define PIOVER2 1.5707963268

vec4 quat(vec3 axis, float angle) {
    float halfAngle = angle * PIOVER2 / 180.0;
    vec2 cs = sin(vec2(PIOVER2 - halfAngle, halfAngle)); // compute sin and cos in one instruction
    return vec4(axis.xyz * cs.y,  cs.x);
}

vec4 quatMult(vec4 q1, vec4 q2) {
    // disgustingly vectorized quaternion multiplication
    vec4 a = q1.w * q2.xyzw;
    vec4 b = q1.x * q2.wzxy * vec4(1., -1., 1., -1.);
    vec4 c = q1.y * q2.zwxy * vec4(1., 1., -1., -1.);
    vec4 d = q1.z * q2.yxwz * vec4(-1., 1., 1., -1.);

    return a + b + c + d;
}

vec3 rotateVertexByQuat(vec3 v, vec4 q) {
    vec3 i = q.xyz;
    return v + 2.0 * cross(i, cross(i, v) + q.w * v);
}

vec3 rotateAbout(vec3 v, vec3 axis, float angle) {
    return rotateVertexByQuat(v, quat(axis, angle));
}

mat4 rotate(vec3 axis, float angle) {
    float s = sin(angle);
    float c = cos(angle);
    float oc = 1. - c;

    vec3 sa = axis * s;

    mat4 mr = mat4(1.);
    mr[0].xyz = oc * axis.xxz * axis.xyx + vec3(c, sa.z, -sa.y);
    mr[1].xyz = oc * axis.xyy * axis.yyz + vec3(-sa.z, c, sa.x);
    mr[2].xyz = oc * axis.zyz * axis.xzz + vec3(sa.y, -sa.x, c);

    return mr;
}

mat4 rotation(vec3 rot) {
    return rotate(vec3(0., 1., 0.), rot.y) * rotate(vec3(0., 0., 1.), rot.z) * rotate(vec3(1., 0., 0.), rot.x);
}

mat3 modelToNormal(mat4 mat) {
    // Discard the edges. This won't be accurate for scaled or skewed matrices,
    // but we don't have to work with those often.
    mat3 m;
    m[0] = mat[0].xyz;
    m[1] = mat[1].xyz;
    m[2] = mat[2].xyz;
    return m;
}

float diffuse(vec3 normal) {
    vec3 n2 = normal * normal * vec3(.6, .25, .8);
    return min(n2.x + n2.y * (3. + normal.y) + n2.z, 1.);
}
struct Vertex {
    vec3 pos;
    vec2 texCoords;
    vec3 normal;
};

struct BlockFrag {
    vec2 texCoords;
    vec4 color;
    float diffuse;
    vec2 light;
};

#if defined(FRAGMENT_SHADER)
void fragment(BlockFrag r) {
    vec4 tex = FLWBlockTexture(r.texCoords);

    vec4 color = vec4(tex.rgb * FLWLight(r.light).rgb * r.diffuse, tex.a) * r.color;

    FLWFinalizeColor(color);
}
#endif
#define PI 3.1415926538





struct Belt {
    vec2 light;
    vec4 color;
    vec3 pos;
    float speed;
    float offset;
    vec4 rotation;
    vec2 sourceTexture;
    vec4 scrollTexture;
    float scrollMult;
};




#if defined(VERTEX_SHADER)
BlockFrag vertex(Vertex v, Belt instance) {
    vec3 rotated = rotateVertexByQuat(v.pos - .5, instance.rotation) + instance.pos + .5;

    vec4 worldPos = vec4(rotated, 1.);

    vec3 norm = rotateVertexByQuat(v.normal, instance.rotation);

    FLWFinalizeWorldPos(worldPos);
    FLWFinalizeNormal(norm);

    float scrollSize = instance.scrollTexture.w - instance.scrollTexture.y;
    float scroll = fract(instance.speed * uTime / (31.5 * 16.) + instance.offset) * scrollSize * instance.scrollMult;

    BlockFrag b;
    b.diffuse = diffuse(norm);
    b.texCoords = v.texCoords - instance.sourceTexture + instance.scrollTexture.xy + vec2(0, scroll);
    b.light = instance.light;

    #if defined(DEBUG_RAINBOW)
    b.color = instance.color;
    #elif defined(DEBUG_NORMAL)
    b.color = vec4(norm, 1.);
    #else
    b.color = vec4(1.);
    #endif

    return b;
}
#endif

in vec2 v2f_texCoords;
in vec4 v2f_color;
in float v2f_diffuse;
in vec2 v2f_light;
void main() {
BlockFrag o;
o.texCoords = v2f_texCoords;
o.color = v2f_color;
o.diffuse = v2f_diffuse;
o.light = v2f_light;
fragment(o);
}
[16:19:41] [Render thread/INFO]: Loaded all shader programs.
[16:19:41] [Worker-Main-13/INFO]: Enabled support for The One Probe
[16:19:41] [Worker-Main-13/INFO]: Integration TOP
[16:19:41] [Worker-Main-12/INFO]: Applying mega torch entity block list overrides...
[16:19:41] [Worker-Main-12/INFO]: Applying dread lamp entity block list overrides...
[16:19:41] [Worker-Main-18/INFO]: Loaded values for 22 compatible attributes.
[16:19:41] [Worker-Main-18/INFO]: Loaded 22 values from config.
[16:19:41] [Worker-Main-18/INFO]: Saving config file. 22 entries.
[16:19:41] [Worker-Main-18/INFO]: Applying changes for 22 attributes.
[16:19:41] [Worker-Main-15/WARN]: Register mappings
[16:19:41] [Render thread/INFO]: ClientSetup
[16:19:41] [Render thread/INFO]: JourneyMap log initialized.
[16:19:41] [Render thread/INFO]: initialize ENTER
[16:19:41] [Render thread/INFO]: [ClientAPI] built with JourneyMap API 1.8-SNAPSHOT
[16:19:41] [Render thread/INFO]: Initializing plugins with Client API: journeymap.client.api.impl.ClientAPI
[16:19:41] [Render thread/INFO]: Initialized IClientPlugin: journeymap.client.ui.fullscreen.event.FullscreenEventReceiver
[16:19:41] [Render thread/INFO]: Initialized frankv.jmi.JourneyMapPlugin
[16:19:41] [Render thread/INFO]: Initialized IClientPlugin: frankv.jmi.JourneyMapPlugin
[16:19:41] [Render thread/INFO]: initialize EXIT, elapsed count 0 avg NaNms
[16:19:41] [Render thread/ERROR]: Couldn't locate icons for flat: /Users/matt/Documents/curseforge/minecraft/Instances/Test%20Pack/mods/journeymap-1.18.1-5.8.0beta6.jar/assets/journeymap/theme/flat
[16:19:41] [Render thread/INFO]: Preloaded theme textures: 0
[16:19:46] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:19:56] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:19:59] [Render thread/ERROR]: java.io.FileNotFoundException: File system element for parameter 'source' does not exist: '/Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/defaultoptions/servers.dat'
[16:19:59] [Render thread/INFO]: OpenAL initialized on device CoreAudio Default
[16:19:59] [Render thread/INFO]: Sound engine started
[16:20:00] [Render thread/INFO]: Created: 4096x2048x0 minecraft:textures/atlas/blocks.png-atlas
[16:20:00] [Render thread/INFO]: Created: 1024x512x0 minecraft:textures/atlas/signs.png-atlas
[16:20:00] [Render thread/INFO]: Created: 512x512x0 minecraft:textures/atlas/banner_patterns.png-atlas
[16:20:00] [Render thread/INFO]: Created: 512x512x0 minecraft:textures/atlas/shield_patterns.png-atlas
[16:20:00] [Render thread/INFO]: Created: 1024x512x0 minecraft:textures/atlas/chest.png-atlas
[16:20:00] [Render thread/INFO]: Created: 512x256x0 minecraft:textures/atlas/beds.png-atlas
[16:20:00] [Render thread/INFO]: Created: 512x256x0 minecraft:textures/atlas/shulker_boxes.png-atlas
[16:20:05] [Render thread/INFO]: Model replacement took 20 ms
[16:20:06] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:20:08] [Render thread/INFO]: Created: 512x256x0 minecraft:textures/atlas/particles.png-atlas
[16:20:08] [Render thread/INFO]: Created: 512x256x0 minecraft:textures/atlas/paintings.png-atlas
[16:20:08] [Render thread/INFO]: Created: 256x256x0 minecraft:textures/atlas/mob_effects.png-atlas
[16:20:08] [Render thread/INFO]: BookContentResourceListenerLoader preloaded 39 jsons
[16:20:08] [Render thread/INFO]: Not reloading resource pack-based books as client world is missing
[16:20:08] [Render thread/INFO]: Created: 256x128x0 jei:textures/atlas/gui.png-atlas
[16:20:16] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:20:26] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:20:33] [Render thread/INFO]: Injecting safe world-gen network codec
[16:20:34] [Render thread/INFO]: Injecting world-gen registry defaults
[16:20:34] [Render thread/INFO]: # Ore Configs
[16:20:34] [Render thread/INFO]: ## Overworld
[16:20:34] [Render thread/INFO]: Total veins per chunk: 9.0  
[16:20:34] [Render thread/INFO]: Average vein size: 7.0  
[16:20:34] [Render thread/INFO]: - Ruby
[16:20:34] [Render thread/INFO]:   - 4 veins of size 8 in 1/2 of chunks (avg 2.000 per chunk)
[16:20:34] [Render thread/INFO]:   - at heights 0 to 32
[16:20:34] [Render thread/INFO]: - Topaz
[16:20:34] [Render thread/INFO]:   - 4 veins of size 8 in 1/2 of chunks (avg 2.000 per chunk)
[16:20:34] [Render thread/INFO]:   - at heights 0 to 40
[16:20:34] [Render thread/INFO]: - Heliodor
[16:20:34] [Render thread/INFO]:   - 1 veins of size 6 in 1/4 of chunks (avg 0.250 per chunk)
[16:20:34] [Render thread/INFO]:   - at heights 0 to 0
[16:20:34] [Render thread/INFO]: - Peridot
[16:20:34] [Render thread/INFO]:   - 4 veins of size 8 in 1/2 of chunks (avg 2.000 per chunk)
[16:20:34] [Render thread/INFO]:   - at heights 0 to 40
[16:20:34] [Render thread/INFO]: - Turquoise
[16:20:34] [Render thread/INFO]:   - 1 veins of size 6 in 1/4 of chunks (avg 0.250 per chunk)
[16:20:34] [Render thread/INFO]:   - at heights 0 to 0
[16:20:34] [Render thread/INFO]: - Sapphire
[16:20:34] [Render thread/INFO]:   - 4 veins of size 8 in 1/2 of chunks (avg 2.000 per chunk)
[16:20:34] [Render thread/INFO]:   - at heights 0 to 32
[16:20:34] [Render thread/INFO]: - Iolite
[16:20:34] [Render thread/INFO]:   - 1 veins of size 6 in 1/4 of chunks (avg 0.250 per chunk)
[16:20:34] [Render thread/INFO]:   - at heights 0 to 0
[16:20:34] [Render thread/INFO]: - Alexandrite
[16:20:34] [Render thread/INFO]:   - 1 veins of size 6 in 1/4 of chunks (avg 0.250 per chunk)
[16:20:34] [Render thread/INFO]:   - at heights 0 to 0
[16:20:34] [Render thread/INFO]: ## The Nether
[16:20:34] [Render thread/INFO]: Total veins per chunk: 11.0  
[16:20:34] [Render thread/INFO]: Average vein size: 8.0  
[16:20:34] [Render thread/INFO]: - Carnelian
[16:20:34] [Render thread/INFO]:   - 2 veins of size 8
[16:20:34] [Render thread/INFO]:   - at heights 25 to 110
[16:20:34] [Render thread/INFO]: - Citrine
[16:20:34] [Render thread/INFO]:   - 2 veins of size 8
[16:20:34] [Render thread/INFO]:   - at heights 25 to 110
[16:20:34] [Render thread/INFO]: - Moldavite
[16:20:34] [Render thread/INFO]:   - 2 veins of size 8
[16:20:34] [Render thread/INFO]:   - at heights 25 to 110
[16:20:34] [Render thread/INFO]: - Iolite
[16:20:34] [Render thread/INFO]:   - 2 veins of size 8
[16:20:34] [Render thread/INFO]:   - at heights 20 to 80
[16:20:34] [Render thread/INFO]: - Alexandrite
[16:20:34] [Render thread/INFO]:   - 2 veins of size 8
[16:20:34] [Render thread/INFO]:   - at heights 20 to 80
[16:20:34] [Render thread/INFO]: - Black Diamond
[16:20:34] [Render thread/INFO]:   - 3 veins of size 8 in 1/3 of chunks (avg 1.000 per chunk)
[16:20:34] [Render thread/INFO]:   - at heights 0 to 60
[16:20:34] [Render thread/INFO]: ## The End
[16:20:34] [Render thread/INFO]: Total veins per chunk: 11.0  
[16:20:34] [Render thread/INFO]: Average vein size: 8.833333333333334  
[16:20:34] [Render thread/INFO]: - Heliodor
[16:20:34] [Render thread/INFO]:   - 2 veins of size 9
[16:20:34] [Render thread/INFO]:   - at heights 16 to 72
[16:20:34] [Render thread/INFO]: - Turquoise
[16:20:34] [Render thread/INFO]:   - 2 veins of size 9
[16:20:34] [Render thread/INFO]:   - at heights 16 to 72
[16:20:34] [Render thread/INFO]: - Kyanite
[16:20:34] [Render thread/INFO]:   - 2 veins of size 9
[16:20:34] [Render thread/INFO]:   - at heights 16 to 72
[16:20:34] [Render thread/INFO]: - Ammolite
[16:20:34] [Render thread/INFO]:   - 2 veins of size 9
[16:20:34] [Render thread/INFO]:   - at heights 16 to 72
[16:20:34] [Render thread/INFO]: - Rose Quartz
[16:20:34] [Render thread/INFO]:   - 2 veins of size 9
[16:20:34] [Render thread/INFO]:   - at heights 16 to 72
[16:20:34] [Render thread/INFO]: - White Diamond
[16:20:34] [Render thread/INFO]:   - 3 veins of size 8 in 1/3 of chunks (avg 1.000 per chunk)
[16:20:34] [Render thread/INFO]:   - at heights 0 to 60
[16:20:35] [Render thread/INFO]: Loading world-gen registry content from data
[16:20:36] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:20:36] [Render thread/WARN]: Ambiguity between arguments [teleport, location] and [teleport, destination] with inputs: [0.1 -0.5 .9, 0 0 0]
[16:20:36] [Render thread/WARN]: Ambiguity between arguments [teleport, location] and [teleport, targets] with inputs: [0.1 -0.5 .9, 0 0 0]
[16:20:36] [Render thread/WARN]: Ambiguity between arguments [teleport, destination] and [teleport, targets] with inputs: [Player, 0123, @e, dd12be42-52a9-4a91-a8a1-11c01849e498]
[16:20:36] [Render thread/WARN]: Ambiguity between arguments [teleport, targets] and [teleport, destination] with inputs: [Player, 0123, dd12be42-52a9-4a91-a8a1-11c01849e498]
[16:20:36] [Render thread/WARN]: Ambiguity between arguments [teleport, targets, location] and [teleport, targets, destination] with inputs: [0.1 -0.5 .9, 0 0 0]
[16:20:36] [Render thread/WARN]: Ambiguity between arguments [ftbteams, info, server_id] and [ftbteams, info, team] with inputs: [server_id]
[16:20:36] [Render thread/WARN]: Ambiguity between arguments [ftbchunks, admin, view_loaded_chunks, reset] and [ftbchunks, admin, view_loaded_chunks, dimension] with inputs: [reset]
[16:20:36] [Render thread/WARN]: Ambiguity between arguments [structurize, scan, pos1, pos2, anchor_pos] and [structurize, scan, pos1, pos2, player] with inputs: [^1 ^ ^-5, 0 0 0, ~ ~ ~, ^ ^ ^, ~0.5 ~1 ~-5]
[16:20:36] [Render thread/WARN]: Ambiguity between arguments [create, coupling, add, cart1] and [create, coupling, add, carts] with inputs: [Player, 0123, @e, dd12be42-52a9-4a91-a8a1-11c01849e498]
[16:20:36] [Render thread/WARN]: Ambiguity between arguments [create, coupling, add, carts] and [create, coupling, add, cart1] with inputs: [Player, 0123, dd12be42-52a9-4a91-a8a1-11c01849e498]
[16:20:36] [Render thread/WARN]: Ambiguity between arguments [create, coupling, add, cart1] and [create, coupling, add, carts] with inputs: [Player, 0123, @e, dd12be42-52a9-4a91-a8a1-11c01849e498]
[16:20:36] [Render thread/WARN]: Ambiguity between arguments [create, coupling, add, carts] and [create, coupling, add, cart1] with inputs: [Player, 0123, dd12be42-52a9-4a91-a8a1-11c01849e498]
[16:20:36] [Render thread/WARN]: Ambiguity between arguments [waypoint, create, name, dimension, location, color, announce] and [waypoint, create, name, dimension, location, color, player] with inputs: [true, false]
[16:20:36] [Render thread/WARN]: Ambiguity between arguments [waypoint, delete, name, announce] and [waypoint, delete, name, player] with inputs: [true, false]
[16:20:36] [Render thread/INFO]: Hello, World! (You will see this line every time server resources reload)
[16:20:36] [Render thread/INFO]: Loaded script server_scripts:script.js in 0.022 s
[16:20:36] [Render thread/INFO]: Loaded 1/1 KubeJS server scripts in 0.055 s
[16:20:36] [Render thread/INFO]: Scripts loaded
[16:20:36] [Render thread/INFO]: Registered custom recipe handler for type kubejs:shaped
[16:20:36] [Render thread/INFO]: Registered custom recipe handler for type kubejs:shapeless
[16:20:36] [Render thread/INFO]: Registered custom recipe handler for type minecraft:crafting_shaped
[16:20:36] [Render thread/INFO]: Registered custom recipe handler for type minecraft:crafting_shapeless
[16:20:36] [Render thread/INFO]: Registered custom recipe handler for type minecraft:stonecutting
[16:20:36] [Render thread/INFO]: Registered custom recipe handler for type minecraft:smelting
[16:20:36] [Render thread/INFO]: Registered custom recipe handler for type minecraft:blasting
[16:20:36] [Render thread/INFO]: Registered custom recipe handler for type minecraft:smoking
[16:20:36] [Render thread/INFO]: Registered custom recipe handler for type minecraft:campfire_cooking
[16:20:36] [Render thread/INFO]: Registered custom recipe handler for type minecraft:smithing
[16:20:36] [Render thread/INFO]: Registered custom recipe handler for type cucumber:shaped_no_mirror
[16:20:36] [Render thread/INFO]: Registered custom recipe handler for type mysticalagriculture:tag
[16:20:36] [Render thread/INFO]: Registered custom recipe handler for type ars_nouveau:enchanting_apparatus
[16:20:36] [Render thread/INFO]: Registered custom recipe handler for type ars_nouveau:enchantment
[16:20:36] [Render thread/INFO]: Registered custom recipe handler for type ars_nouveau:glyph_recipe
[16:20:36] [Render thread/INFO]: Registered custom recipe handler for type create:sequenced_assembly
[16:20:36] [Render thread/INFO]: Registered custom recipe handler for type create:mechanical_crafting
[16:20:36] [Render thread/INFO]: Registered custom recipe handler for type create:conversion
[16:20:36] [Render thread/INFO]: Registered custom recipe handler for type create:crushing
[16:20:36] [Render thread/INFO]: Registered custom recipe handler for type create:cutting
[16:20:36] [Render thread/INFO]: Registered custom recipe handler for type create:milling
[16:20:36] [Render thread/INFO]: Registered custom recipe handler for type create:basin
[16:20:36] [Render thread/INFO]: Registered custom recipe handler for type create:mixing
[16:20:36] [Render thread/INFO]: Registered custom recipe handler for type create:compacting
[16:20:36] [Render thread/INFO]: Registered custom recipe handler for type create:pressing
[16:20:36] [Render thread/INFO]: Registered custom recipe handler for type create:sandpaper_polishing
[16:20:36] [Render thread/INFO]: Registered custom recipe handler for type create:splashing
[16:20:36] [Render thread/INFO]: Registered custom recipe handler for type create:deploying
[16:20:36] [Render thread/INFO]: Registered custom recipe handler for type create:filling
[16:20:36] [Render thread/INFO]: Registered custom recipe handler for type create:emptying
[16:20:36] [Render thread/INFO]: Registered custom recipe handler for type immersiveengineering:turn_and_copy
[16:20:36] [Render thread/INFO]: Registered custom recipe handler for type immersiveengineering:alloy
[16:20:36] [Render thread/INFO]: Registered custom recipe handler for type immersiveengineering:blast_furnace
[16:20:36] [Render thread/INFO]: Registered custom recipe handler for type immersiveengineering:blast_furnace_fuel
[16:20:36] [Render thread/INFO]: Registered custom recipe handler for type immersiveengineering:coke_oven
[16:20:36] [Render thread/INFO]: Registered custom recipe handler for type immersiveengineering:cloche
[16:20:36] [Render thread/INFO]: Registered custom recipe handler for type immersiveengineering:fertilizer
[16:20:36] [Render thread/INFO]: Registered custom recipe handler for type immersiveengineering:metal_press
[16:20:36] [Render thread/INFO]: Registered custom recipe handler for type immersiveengineering:arc_furnace
[16:20:36] [Render thread/INFO]: Registered custom recipe handler for type immersiveengineering:crusher
[16:20:36] [Render thread/INFO]: Registered custom recipe handler for type immersiveengineering:sawmill
[16:20:36] [Render thread/INFO]: Registered custom recipe handler for type immersiveengineering:squeezer
[16:20:36] [Render thread/INFO]: Registered custom recipe handler for type immersiveengineering:mixer
[16:20:36] [Render thread/INFO]: Scanning recipes...
[16:20:36] [Render thread/INFO]: Reloading ResourceManager: KubeJS Virtual Data Pack [low priority], Default, netherportalfix-forge-1.18-9.0.0.jar, refinedpipes-0.6.0.jar, DoggyTalents-1.18.1-2.4.0.jar, mcw-windows-2.0.2-mc1.18.1.jar, Industrial Agriculture[Core]-1.18.1-1.8.14.3.jar, modnametooltip-1.18.1-1.18.0.jar, kleeslabs-forge-1.18-11.0.0.jar, rsgauges-1.18.1-1.2.13-b1.jar, TerraForged-1.18.1-0.3.0-alpha-2.jar, cookingforblockheads-forge-1.18-11.0.0.jar, Controlling-forge-1.18.1-9.0.10.jar, Placebo-1.18.1-6.0.3.jar, citadel-1.10.8-1.18.jar, alexsmobs-1.15.1.jar, WitherSkeletonTweaks-1.18.1-7.0.1.jar, sophisticatedbackpacks-1.18.1-3.15.1.505.jar, guardvillagers-1.18.1.4.0.jar, buildinggadgets-3.10.1-build.3+mc1.18.jar, Customized-Dungeon-Loot-1.17.x-(v.2.1.0).jar, Apotheosis-1.18.1-5.0.0.jar, mcw-doors-1.0.5-mc1.18.1.jar, balm-2.4.0+0.jar, JustEnoughResources-1.18.1-0.13.1.141.jar, cloth-config-6.1.48-forge.jar, shetiphiancore-1.18-3.10.0.jar, supplementaries-1.18.1-1.1.5.jar, refinedstorage-1.10.0-beta.4.jar, EquipmentCompare-1.18.1-1.2.10.jar, out_of_sight-1.18.1-1.0.1.jar, mcw-bridges-2.0.1-mc1.18.1.jar, FarmersDelight-1.18.1-1.0.1.jar, torchmaster-18.0.2-beta.jar, repurposed_structures_forge-4.1.0+1.18.1.jar, morevillagers-FORGE-1.18.1-3.1.1.jar, endertanks-1.18-1.11.0.jar, BiomesOPlenty-1.18.1-15.0.0.90-universal.jar, mcw-trapdoors-1.0.4-mc1.18.1.jar, mcw-fences-1.0.2-mc1.18.1.jar, silent-gear-1.18.1-2.8.3.jar, supermartijn642corelib-1.0.16-mc1.18.jar, villagespawnpoint_1.18.1-1.9.jar, curios-forge-1.18.1-5.0.4.2.jar, Patchouli-1.18.1-64.jar, Industrial Agriculture[Silent's Gems]-1.18.1-1.8.14.jar, blockui-1.18-0.0.34-ALPHA.jar, collective-1.18.1-3.8.jar, OreExcavation-1.10.159.jar, tombstone-7.3.3-1.18.jar, ExtraStorage-1.18.1-2.0.1.jar, furniture-7.0.0-pre27-1.18.1.jar, architectury-3.4.9.jar, curiouselytra-forge-1.18.1-5.0.0.1.jar, AI-Improvements-1.18-0.4.0.jar, light-overlay-6.0.4-forge.jar, trashcans-1.0.12-mc1.18.jar, FastLeafDecay-27.2.jar, geckolib-1.18-forge-3.0.3.jar, Cyclic-1.18.1-1.6.9.jar, BetterAdvancements-1.18.1-0.1.2.122.jar, clienttweaks-forge-1.18-7.0.0.jar, rhino-forge-1800.1.7-build.92.jar, Cucumber-1.18.1-5.0.2.jar, jmi-1.18.1-0.5-27.jar, ftb-library-forge-1801.3.5-build.106.jar, ftb-teams-forge-1801.2.4-build.46.jar, item-filters-forge-1801.2.6-build.16.jar, EasyMagic-v3.2.1-1.18.1-Forge.jar, jei-1.18.1-9.1.2.61.jar, AttributeFix-Forge-1.18.1-13.0.3.jar, caelus-forge-1.18-3.0.0.1.jar, createchunkloading-0.3.1.jar, waystones-forge-1.18.1-9.0.1.jar, Clumps-forge-1.18.1-8.0.4.jar, journeymap-1.18.1-5.8.0beta6.jar, comforts-forge-1.18-5.0.0.1.jar, NaturesCompass-1.18.1-1.9.4-forge.jar, artifacts-1.18.1-4.0.2.jar, DungeonCrawl-1.18.1-2.3.6.jar, farmingforblockheads-forge-1.18.1-9.0.2.jar, mcjtylib-1.18-6.0.5.jar, rftoolsbase-1.18-3.0.1.jar, xnet-1.18-4.0.2.jar, mahoutsukai-1.18.1-v1.33.7.jar, catalogue-1.6.0-1.18.1.jar, ToastControl-1.18.1-6.0.0.jar, ars_nouveau-1.18.1-2.0.5.jar, rftoolspower-1.18-4.0.1.jar, ExtraDisks-1.18.1-2.0.2.jar, ftb-chunks-forge-1801.3.3-build.108.jar, kubejs-forge-1801.4.1-build.271.jar, forge-1.18.1-39.0.10-universal.jar, selene-1.18-1.11.jar, MysticalAgriculture-1.18.1-5.0.1.jar, MysticalAgradditions-1.18.1-5.0.2.jar, EnchantmentDescriptions-Forge-1.18.1-9.0.8.jar, theoneprobe-1.18-5.0.2.jar, TerraBlender-1.18.1-1.0.0.24-universal.jar, swingthroughgrass-1.18.1-1.8.0.jar, MouseTweaks-forge-mc1.18-2.21.jar, ftb-quests-forge-1801.3.7-build.87.jar, ImmersiveEngineering-1.18.1-7.1.0-145.jar, silent-lib-1.18-6.0.0.jar, domum_ornamentum-1.18-1.0.31-ALPHA-universal.jar, Iceberg-1.18.1-1.0.33.jar, flywheel-forge-1.18-0.5.0a.jar, create-mc1.18.1_v0.4b.jar, createdeco-1.2.2-1.18.jar, Croptopia-1.18-FORGE-1.8.0.jar, baubley-heart-canisters-1.18-1.0.0.jar, FastWorkbench-1.18.1-6.0.0.jar, polymorph-forge-1.18.1-0.35.jar, AutoRegLib-1.7-52.jar, Quark-3.0-334.jar, StorageDrawers-1.18.1-10.1.0.jar, sit-1.18-1.3.1.jar, enderchests-1.18-1.9.0.jar, InventoryHud_[1.18].forge-3.4.4.jar, structurize-1.18.1-1.0.319-BETA.jar, multi-piston-1.18-1.2.2-ALPHA.jar, AmbientEnvironment-forge-1.18.1-7.0.3.jar, kubejs-create-1801.2.0-build.14.jar, minecolonies-1.18.1-1.0.278-RELEASE.jar, FastFurnace-1.18.1-6.0.1.jar, appleskin-forge-mc1.18-2.2.0.jar, MagicalTorches-1.18.1-2.0.0.jar, lootr-1.18-0.1.13.40.jar, ferritecore-4.0.0-forge.jar, SoL-Carrot-1.18.1-1.12.0.jar, PuzzlesLib-v3.1.3-1.18.1-Forge.jar, Aquaculture-1.18.1-2.3.2.jar, silents-gems-1.18-4.2.0.jar, kubejs-immersive-engineering-1801.2.0-build.16.jar, refinedstorageaddons-0.8.1.jar, expandability-5.0.0-forge.jar, CosmeticArmorReworked-1.18.1-v1a.jar, defaultoptions-forge-1.18-14.0.0.jar, treasure-bags-1.18-1.6.0.jar, dimdungeons-1.13.1-forge-1.18.1.jar, KubeJS Resource Pack [data], KubeJS Virtual Data Pack [high priority]
[16:20:37] [Worker-Main-18/INFO]: [potions] Found 0 tags, added 0 objects, removed 0 objects
[16:20:37] [Worker-Main-19/INFO]: [enchantments] Found 0 tags, added 0 objects, removed 0 objects
[16:20:37] [Worker-Main-11/INFO]: [mob_effects] Found 1 tags, added 0 objects, removed 0 objects
[16:20:37] [Worker-Main-16/INFO]: [game_events] Found 2 tags, added 0 objects, removed 0 objects
[16:20:37] [Worker-Main-12/INFO]: [block_entity_types] Found 3 tags, added 0 objects, removed 0 objects
[16:20:37] [Worker-Main-12/INFO]: [functions] Found 0 tags, added 0 objects, removed 0 objects
[16:20:37] [Worker-Main-14/INFO]: [fluids] Found 20 tags, added 0 objects, removed 0 objects
[16:20:38] [Worker-Main-13/INFO]: [entity_types] Found 47 tags, added 0 objects, removed 0 objects
[16:20:45] [Worker-Main-17/INFO]: [blocks] Found 583 tags, added 0 objects, removed 0 objects
[16:20:45] [Worker-Main-17/ERROR]: Couldn't load tag rsgauges:soils as it is missing following references: minecraft:grass_path (from rsgauges-1.18.1-1.2.13-b1.jar)
[16:20:46] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:20:49] [Worker-Main-15/INFO]: [items] Found 1312 tags, added 0 objects, removed 0 objects
[16:20:56] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:21:06] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:21:13] [Render thread/WARN]: Failed to parse recipe 'create:compat/silentsgems/crushing/onyx_ore[create:crushing]'! Falling back to vanilla: com.google.gson.JsonSyntaxException: Unknown item 'silentgems:onyx_ore'
[16:21:13] [Render thread/WARN]: Failed to parse recipe create:compat/silentsgems/crushing/onyx_ore[create:crushing]: com.google.gson.JsonSyntaxException: Unknown item 'silentgems:onyx_ore'
[16:21:13] [Render thread/WARN]: Failed to parse recipe 'create:compat/silentsgems/crushing/amethyst_ore[create:crushing]'! Falling back to vanilla: com.google.gson.JsonSyntaxException: Unknown item 'silentgems:amethyst_ore'
[16:21:13] [Render thread/WARN]: Failed to parse recipe create:compat/silentsgems/crushing/amethyst_ore[create:crushing]: com.google.gson.JsonSyntaxException: Unknown item 'silentgems:amethyst_ore'
[16:21:13] [Render thread/WARN]: Failed to parse recipe 'create:compat/silentsgems/crushing/morganite_ore[create:crushing]'! Falling back to vanilla: com.google.gson.JsonSyntaxException: Unknown item 'silentgems:morganite_ore'
[16:21:13] [Render thread/WARN]: Failed to parse recipe create:compat/silentsgems/crushing/morganite_ore[create:crushing]: com.google.gson.JsonSyntaxException: Unknown item 'silentgems:morganite_ore'
[16:21:13] [Render thread/WARN]: Failed to parse recipe 'create:compat/silentsgems/crushing/sunstone_ore[create:crushing]'! Falling back to vanilla: com.google.gson.JsonSyntaxException: Unknown item 'silentgems:sunstone_ore'
[16:21:13] [Render thread/WARN]: Failed to parse recipe create:compat/silentsgems/crushing/sunstone_ore[create:crushing]: com.google.gson.JsonSyntaxException: Unknown item 'silentgems:sunstone_ore'
[16:21:13] [Render thread/WARN]: Failed to parse recipe 'create:compat/silentsgems/crushing/phosphophyllite_ore[create:crushing]'! Falling back to vanilla: com.google.gson.JsonSyntaxException: Unknown item 'silentgems:phosphophyllite_ore'
[16:21:13] [Render thread/WARN]: Failed to parse recipe create:compat/silentsgems/crushing/phosphophyllite_ore[create:crushing]: com.google.gson.JsonSyntaxException: Unknown item 'silentgems:phosphophyllite_ore'
[16:21:13] [Render thread/WARN]: Failed to parse recipe 'create:compat/silentsgems/crushing/cats_eye_ore[create:crushing]'! Falling back to vanilla: com.google.gson.JsonSyntaxException: Unknown item 'silentgems:cats_eye_ore'
[16:21:13] [Render thread/WARN]: Failed to parse recipe create:compat/silentsgems/crushing/cats_eye_ore[create:crushing]: com.google.gson.JsonSyntaxException: Unknown item 'silentgems:cats_eye_ore'
[16:21:13] [Render thread/WARN]: Failed to parse recipe 'create:compat/silentsgems/crushing/spinel_ore[create:crushing]'! Falling back to vanilla: com.google.gson.JsonSyntaxException: Unknown item 'silentgems:spinel_ore'
[16:21:13] [Render thread/WARN]: Failed to parse recipe create:compat/silentsgems/crushing/spinel_ore[create:crushing]: com.google.gson.JsonSyntaxException: Unknown item 'silentgems:spinel_ore'
[16:21:13] [Render thread/WARN]: Failed to parse recipe 'create:compat/silentsgems/crushing/pearl_ore[create:crushing]'! Falling back to vanilla: com.google.gson.JsonSyntaxException: Unknown item 'silentgems:pearl_ore'
[16:21:13] [Render thread/WARN]: Failed to parse recipe create:compat/silentsgems/crushing/pearl_ore[create:crushing]: com.google.gson.JsonSyntaxException: Unknown item 'silentgems:pearl_ore'
[16:21:13] [Render thread/WARN]: Failed to parse recipe 'create:compat/silentsgems/crushing/garnet_ore[create:crushing]'! Falling back to vanilla: com.google.gson.JsonSyntaxException: Unknown item 'silentgems:garnet_ore'
[16:21:13] [Render thread/WARN]: Failed to parse recipe create:compat/silentsgems/crushing/garnet_ore[create:crushing]: com.google.gson.JsonSyntaxException: Unknown item 'silentgems:garnet_ore'
[16:21:14] [Render thread/WARN]: Failed to parse recipe 'create:compat/silentsgems/crushing/lepidolite_ore[create:crushing]'! Falling back to vanilla: com.google.gson.JsonSyntaxException: Unknown item 'silentgems:lepidolite_ore'
[16:21:14] [Render thread/WARN]: Failed to parse recipe create:compat/silentsgems/crushing/lepidolite_ore[create:crushing]: com.google.gson.JsonSyntaxException: Unknown item 'silentgems:lepidolite_ore'
[16:21:14] [Render thread/WARN]: Failed to parse recipe 'create:compat/silentsgems/crushing/green_sapphire_ore[create:crushing]'! Falling back to vanilla: com.google.gson.JsonSyntaxException: Unknown item 'silentgems:green_sapphire_ore'
[16:21:14] [Render thread/WARN]: Failed to parse recipe create:compat/silentsgems/crushing/green_sapphire_ore[create:crushing]: com.google.gson.JsonSyntaxException: Unknown item 'silentgems:green_sapphire_ore'
[16:21:14] [Render thread/WARN]: Failed to parse recipe 'create:compat/silentsgems/crushing/yellow_diamond_ore[create:crushing]'! Falling back to vanilla: com.google.gson.JsonSyntaxException: Unknown item 'silentgems:yellow_diamond_ore'
[16:21:14] [Render thread/WARN]: Failed to parse recipe create:compat/silentsgems/crushing/yellow_diamond_ore[create:crushing]: com.google.gson.JsonSyntaxException: Unknown item 'silentgems:yellow_diamond_ore'
[16:21:14] [Render thread/WARN]: Failed to parse recipe 'create:compat/silentsgems/crushing/moonstone_ore[create:crushing]'! Falling back to vanilla: com.google.gson.JsonSyntaxException: Unknown item 'silentgems:moonstone_ore'
[16:21:14] [Render thread/WARN]: Failed to parse recipe create:compat/silentsgems/crushing/moonstone_ore[create:crushing]: com.google.gson.JsonSyntaxException: Unknown item 'silentgems:moonstone_ore'
[16:21:14] [Render thread/WARN]: Failed to parse recipe 'create:compat/silentsgems/crushing/jasper_ore[create:crushing]'! Falling back to vanilla: com.google.gson.JsonSyntaxException: Unknown item 'silentgems:jasper_ore'
[16:21:14] [Render thread/WARN]: Failed to parse recipe create:compat/silentsgems/crushing/jasper_ore[create:crushing]: com.google.gson.JsonSyntaxException: Unknown item 'silentgems:jasper_ore'
[16:21:14] [Render thread/WARN]: Failed to parse recipe 'create:compat/silentsgems/crushing/malachite_ore[create:crushing]'! Falling back to vanilla: com.google.gson.JsonSyntaxException: Unknown item 'silentgems:malachite_ore'
[16:21:14] [Render thread/WARN]: Failed to parse recipe create:compat/silentsgems/crushing/malachite_ore[create:crushing]: com.google.gson.JsonSyntaxException: Unknown item 'silentgems:malachite_ore'
[16:21:14] [Render thread/WARN]: Failed to parse recipe 'create:compat/silentsgems/crushing/tanzanite_ore[create:crushing]'! Falling back to vanilla: com.google.gson.JsonSyntaxException: Unknown item 'silentgems:tanzanite_ore'
[16:21:14] [Render thread/WARN]: Failed to parse recipe create:compat/silentsgems/crushing/tanzanite_ore[create:crushing]: com.google.gson.JsonSyntaxException: Unknown item 'silentgems:tanzanite_ore'
[16:21:14] [Render thread/WARN]: Failed to parse recipe 'createdeco:copper_sheet_metal_from_air_stonecutting[minecraft:stonecutting]'! Falling back to vanilla: com.google.gson.JsonSyntaxException: Item array cannot be empty, at least one item must be defined
[16:21:14] [Render thread/WARN]: Failed to parse recipe createdeco:copper_sheet_metal_from_air_stonecutting[minecraft:stonecutting]: com.google.gson.JsonSyntaxException: Item array cannot be empty, at least one item must be defined
[16:21:14] [Render thread/WARN]: Failed to parse recipe 'create:compat/silentsgems/crushing/amber_ore[create:crushing]'! Falling back to vanilla: com.google.gson.JsonSyntaxException: Unknown item 'silentgems:amber_ore'
[16:21:14] [Render thread/WARN]: Failed to parse recipe create:compat/silentsgems/crushing/amber_ore[create:crushing]: com.google.gson.JsonSyntaxException: Unknown item 'silentgems:amber_ore'
[16:21:14] [Render thread/WARN]: Failed to parse recipe 'create:compat/silentsgems/crushing/apatite_ore[create:crushing]'! Falling back to vanilla: com.google.gson.JsonSyntaxException: Unknown item 'silentgems:apatite_ore'
[16:21:14] [Render thread/WARN]: Failed to parse recipe create:compat/silentsgems/crushing/apatite_ore[create:crushing]: com.google.gson.JsonSyntaxException: Unknown item 'silentgems:apatite_ore'
[16:21:14] [Render thread/WARN]: Failed to parse recipe 'farmersdelight:integration/immersiveengineering/metalpress/pumpkin[immersiveengineering:metal_press]'! Falling back to vanilla: com.google.gson.JsonSyntaxException: Expected mold to be a string, was an object ({"it...g"})
[16:21:14] [Render thread/WARN]: Failed to parse recipe farmersdelight:integration/immersiveengineering/metalpress/pumpkin[immersiveengineering:metal_press]: com.google.gson.JsonSyntaxException: Expected mold to be a string, was an object ({"it...g"})
[16:21:14] [Render thread/WARN]: Failed to parse recipe 'create:compat/silentsgems/crushing/chrysoprase_ore[create:crushing]'! Falling back to vanilla: com.google.gson.JsonSyntaxException: Unknown item 'silentgems:chrysoprase_ore'
[16:21:14] [Render thread/WARN]: Failed to parse recipe create:compat/silentsgems/crushing/chrysoprase_ore[create:crushing]: com.google.gson.JsonSyntaxException: Unknown item 'silentgems:chrysoprase_ore'
[16:21:14] [Render thread/WARN]: Failed to parse recipe 'supplementaries:sign_posts/sign_post_cactus[minecraft:crafting_shaped]'! Falling back to vanilla: com.google.gson.JsonSyntaxException: Unknown item 'structurize:blockcactusplank'
[16:21:14] [Render thread/WARN]: Failed to parse recipe supplementaries:sign_posts/sign_post_cactus[minecraft:crafting_shaped]: com.google.gson.JsonSyntaxException: Unknown item 'structurize:blockcactusplank'
[16:21:14] [Render thread/WARN]: Failed to parse recipe 'create:compat/silentsgems/crushing/sodalite_ore[create:crushing]'! Falling back to vanilla: com.google.gson.JsonSyntaxException: Unknown item 'silentgems:sodalite_ore'
[16:21:14] [Render thread/WARN]: Failed to parse recipe create:compat/silentsgems/crushing/sodalite_ore[create:crushing]: com.google.gson.JsonSyntaxException: Unknown item 'silentgems:sodalite_ore'
[16:21:14] [Render thread/WARN]: Failed to parse recipe 'create:compat/silentsgems/crushing/fluorite_ore[create:crushing]'! Falling back to vanilla: com.google.gson.JsonSyntaxException: Unknown item 'silentgems:fluorite_ore'
[16:21:14] [Render thread/WARN]: Failed to parse recipe create:compat/silentsgems/crushing/fluorite_ore[create:crushing]: com.google.gson.JsonSyntaxException: Unknown item 'silentgems:fluorite_ore'
[16:21:14] [Render thread/WARN]: Failed to parse recipe 'create:compat/silentsgems/crushing/ametrine_ore[create:crushing]'! Falling back to vanilla: com.google.gson.JsonSyntaxException: Unknown item 'silentgems:ametrine_ore'
[16:21:14] [Render thread/WARN]: Failed to parse recipe create:compat/silentsgems/crushing/ametrine_ore[create:crushing]: com.google.gson.JsonSyntaxException: Unknown item 'silentgems:ametrine_ore'
[16:21:14] [Render thread/WARN]: Failed to parse recipe 'create:compat/silentsgems/crushing/kunzite_ore[create:crushing]'! Falling back to vanilla: com.google.gson.JsonSyntaxException: Unknown item 'silentgems:kunzite_ore'
[16:21:14] [Render thread/WARN]: Failed to parse recipe create:compat/silentsgems/crushing/kunzite_ore[create:crushing]: com.google.gson.JsonSyntaxException: Unknown item 'silentgems:kunzite_ore'
[16:21:14] [Render thread/WARN]: Failed to parse recipe 'create:compat/silentsgems/crushing/tektite_ore[create:crushing]'! Falling back to vanilla: com.google.gson.JsonSyntaxException: Unknown item 'silentgems:tektite_ore'
[16:21:14] [Render thread/WARN]: Failed to parse recipe create:compat/silentsgems/crushing/tektite_ore[create:crushing]: com.google.gson.JsonSyntaxException: Unknown item 'silentgems:tektite_ore'
[16:21:14] [Render thread/WARN]: Failed to parse recipe 'supplementaries:hanging_signs/hanging_sign_cactus[minecraft:crafting_shaped]'! Falling back to vanilla: com.google.gson.JsonSyntaxException: Unknown item 'structurize:blockcactusplank'
[16:21:14] [Render thread/WARN]: Failed to parse recipe supplementaries:hanging_signs/hanging_sign_cactus[minecraft:crafting_shaped]: com.google.gson.JsonSyntaxException: Unknown item 'structurize:blockcactusplank'
[16:21:14] [Render thread/WARN]: Failed to parse recipe 'create:compat/silentsgems/crushing/benitoite_ore[create:crushing]'! Falling back to vanilla: com.google.gson.JsonSyntaxException: Unknown item 'silentgems:benitoite_ore'
[16:21:14] [Render thread/WARN]: Failed to parse recipe create:compat/silentsgems/crushing/benitoite_ore[create:crushing]: com.google.gson.JsonSyntaxException: Unknown item 'silentgems:benitoite_ore'
[16:21:14] [Render thread/WARN]: Failed to parse recipe 'create:compat/silentsgems/crushing/euclase_ore[create:crushing]'! Falling back to vanilla: com.google.gson.JsonSyntaxException: Unknown item 'silentgems:euclase_ore'
[16:21:14] [Render thread/WARN]: Failed to parse recipe create:compat/silentsgems/crushing/euclase_ore[create:crushing]: com.google.gson.JsonSyntaxException: Unknown item 'silentgems:euclase_ore'
[16:21:14] [Render thread/WARN]: Failed to parse recipe 'create:compat/silentsgems/crushing/aquamarine_ore[create:crushing]'! Falling back to vanilla: com.google.gson.JsonSyntaxException: Unknown item 'silentgems:aquamarine_ore'
[16:21:14] [Render thread/WARN]: Failed to parse recipe create:compat/silentsgems/crushing/aquamarine_ore[create:crushing]: com.google.gson.JsonSyntaxException: Unknown item 'silentgems:aquamarine_ore'
[16:21:14] [Render thread/WARN]: Failed to parse recipe 'create:compat/silentsgems/crushing/opal_ore[create:crushing]'! Falling back to vanilla: com.google.gson.JsonSyntaxException: Unknown item 'silentgems:opal_ore'
[16:21:14] [Render thread/WARN]: Failed to parse recipe create:compat/silentsgems/crushing/opal_ore[create:crushing]: com.google.gson.JsonSyntaxException: Unknown item 'silentgems:opal_ore'
[16:21:14] [Render thread/WARN]: Failed to parse recipe 'create:compat/silentsgems/crushing/zircon_ore[create:crushing]'! Falling back to vanilla: com.google.gson.JsonSyntaxException: Unknown item 'silentgems:zircon_ore'
[16:21:14] [Render thread/WARN]: Failed to parse recipe create:compat/silentsgems/crushing/zircon_ore[create:crushing]: com.google.gson.JsonSyntaxException: Unknown item 'silentgems:zircon_ore'
[16:21:14] [Render thread/WARN]: Failed to parse recipe 'create:compat/silentsgems/crushing/pyrope_ore[create:crushing]'! Falling back to vanilla: com.google.gson.JsonSyntaxException: Unknown item 'silentgems:pyrope_ore'
[16:21:14] [Render thread/WARN]: Failed to parse recipe create:compat/silentsgems/crushing/pyrope_ore[create:crushing]: com.google.gson.JsonSyntaxException: Unknown item 'silentgems:pyrope_ore'
[16:21:14] [Render thread/WARN]: Failed to parse recipe 'create:compat/silentsgems/crushing/agate_ore[create:crushing]'! Falling back to vanilla: com.google.gson.JsonSyntaxException: Unknown item 'silentgems:agate_ore'
[16:21:14] [Render thread/WARN]: Failed to parse recipe create:compat/silentsgems/crushing/agate_ore[create:crushing]: com.google.gson.JsonSyntaxException: Unknown item 'silentgems:agate_ore'
[16:21:14] [Render thread/WARN]: Failed to parse recipe 'create:compat/silentsgems/crushing/coral_ore[create:crushing]'! Falling back to vanilla: com.google.gson.JsonSyntaxException: Unknown item 'silentgems:coral_ore'
[16:21:14] [Render thread/WARN]: Failed to parse recipe create:compat/silentsgems/crushing/coral_ore[create:crushing]: com.google.gson.JsonSyntaxException: Unknown item 'silentgems:coral_ore'
[16:21:14] [Render thread/WARN]: Failed to parse recipe 'create:compat/silentsgems/crushing/jade_ore[create:crushing]'! Falling back to vanilla: com.google.gson.JsonSyntaxException: Unknown item 'silentgems:jade_ore'
[16:21:14] [Render thread/WARN]: Failed to parse recipe create:compat/silentsgems/crushing/jade_ore[create:crushing]: com.google.gson.JsonSyntaxException: Unknown item 'silentgems:jade_ore'
[16:21:14] [Render thread/INFO]: Found 11590 recipes and 0 failed recipes in 846.9 ms
[16:21:14] [Render thread/INFO]: Posted recipe events in 5.712 ms
[16:21:14] [Render thread/INFO]: Modified & removed recipes in 334.6 ms
[16:21:14] [Render thread/INFO]: Added recipes in 1.022 ms
[16:21:14] [Render thread/INFO]: Added 0 recipes, removed 0 recipes, modified 0 recipes, with 0 failed recipes and 0 fall-backed recipes
[16:21:15] [Render thread/INFO]: Injecting loot table 'silentgear:inject/chests/bastion_bridge' into 'minecraft:chests/bastion_bridge'
[16:21:16] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:21:16] [Render thread/INFO]: Injecting loot table 'silentgear:inject/chests/bastion_other' into 'minecraft:chests/bastion_other'
[16:21:17] [Render thread/INFO]: Injecting loot table 'silentgear:inject/chests/ruined_portal' into 'minecraft:chests/ruined_portal'
[16:21:17] [Render thread/INFO]: Injecting loot table 'silentgear:inject/chests/bastion_treasure' into 'minecraft:chests/bastion_treasure'
[16:21:17] [Render thread/INFO]: Injecting loot table 'silentgear:inject/chests/nether_bridge' into 'minecraft:chests/nether_bridge'
[16:21:18] [Render thread/INFO]: Injecting loot table 'silentgear:inject/entities/spider' into 'minecraft:entities/spider'
[16:21:18] [Render thread/INFO]: Injecting loot table 'silentgear:inject/entities/cave_spider' into 'minecraft:entities/cave_spider'
[16:21:18] [Render thread/INFO]: Registered 0 additional loot tables.
[16:21:18] [Render thread/ERROR]: Couldn't load advancement supplementaries:nether/goblet: Task Advancement{parentId=minecraft:nether/local_brewery, display=net.minecraft.advancements.DisplayInfo@6c5545b5, rewards=AdvancementRewards{experience=0, loot=[], recipes=[], function=net.minecraft.commands.CommandFunction$CacheableFunction@d920d93}, criteria={unlock=net.minecraft.advancements.Criterion@4b66ed84}, requirements=[[unlock]]}
[16:21:19] [Render thread/INFO]: Loaded 6961 advancements
[16:21:19] [Render thread/INFO]: Registered 17 additional recipes.
[16:21:19] [Render thread/ERROR]: Slab wood_slab_0 could not be found.
[16:21:19] [Render thread/ERROR]: Slab wood_slab_1 could not be found.
[16:21:19] [Render thread/ERROR]: Slab other_slab could not be found.
[16:21:19] [Render thread/ERROR]: Slab biotite_slab could not be found.
[16:21:19] [Render thread/ERROR]: Slab snow_bricks_slab could not be found.
[16:21:19] [Render thread/ERROR]: Slab sandy_bricks_slab could not be found.
[16:21:19] [Render thread/ERROR]: Slab charred_nether_brick_slab could not be found.
[16:21:19] [Render thread/ERROR]: Slab sandstone_bricks_slab_double could not be found.
[16:21:19] [Render thread/ERROR]: Slab sandstone_smooth_slab could not be found.
[16:21:19] [Render thread/ERROR]: Slab red_sandstone_bricks_slab_double could not be found.
[16:21:19] [Render thread/ERROR]: Slab red_sandstone_smooth_slab could not be found.
[16:21:19] [Render thread/ERROR]: Slab end_bricks_slab could not be found.
[16:21:19] [Render thread/ERROR]: Slab prismarine_slab could not be found.
[16:21:19] [Render thread/ERROR]: Slab prismarine_dark_slab could not be found.
[16:21:19] [Render thread/ERROR]: Slab prismarine_bricks_slab could not be found.
[16:21:19] [Render thread/ERROR]: Slab stone_diorite_slab could not be found.
[16:21:19] [Render thread/ERROR]: Slab stone_diorite_bricks_slab could not be found.
[16:21:19] [Render thread/ERROR]: Slab stone_granite_slab could not be found.
[16:21:19] [Render thread/ERROR]: Slab stone_granite_bricks_slab could not be found.
[16:21:19] [Render thread/ERROR]: Slab stone_andesite_slab could not be found.
[16:21:19] [Render thread/ERROR]: Slab stone_andesite_bricks_slab could not be found.
[16:21:19] [Render thread/ERROR]: Slab stone_basalt_slab could not be found.
[16:21:19] [Render thread/ERROR]: Slab stone_basalt_bricks_slab could not be found.
[16:21:19] [Render thread/ERROR]: Slab stained_clay_tiles_gray_slab could not be found.
[16:21:19] [Render thread/ERROR]: Slab stained_clay_tiles_magenta_slab could not be found.
[16:21:19] [Render thread/ERROR]: Slab stained_clay_tiles_cyan_slab could not be found.
[16:21:19] [Render thread/ERROR]: Slab stained_clay_tiles_blue_slab could not be found.
[16:21:19] [Render thread/ERROR]: Slab stained_clay_tiles_orange_slab could not be found.
[16:21:19] [Render thread/ERROR]: Slab stained_clay_tiles_red_slab could not be found.
[16:21:19] [Render thread/ERROR]: Slab stained_clay_tiles_yellow_slab could not be found.
[16:21:19] [Render thread/ERROR]: Slab stained_clay_tiles_light_blue_slab could not be found.
[16:21:19] [Render thread/ERROR]: Slab stained_clay_tiles_purple_slab could not be found.
[16:21:19] [Render thread/ERROR]: Slab stained_clay_tiles_silver_slab could not be found.
[16:21:19] [Render thread/ERROR]: Slab stained_clay_tiles_lime_slab could not be found.
[16:21:19] [Render thread/ERROR]: Slab stained_clay_tiles_green_slab could not be found.
[16:21:19] [Render thread/ERROR]: Slab stained_clay_tiles_black_slab could not be found.
[16:21:19] [Render thread/ERROR]: Slab stained_clay_tiles_brown_slab could not be found.
[16:21:19] [Render thread/ERROR]: Slab stained_clay_tiles_white_slab could not be found.
[16:21:19] [Render thread/ERROR]: Slab stained_clay_tiles_pink_slab could not be found.
[16:21:19] [Render thread/ERROR]: Slab stained_planks_gray_slab could not be found.
[16:21:19] [Render thread/ERROR]: Slab stained_planks_magenta_slab could not be found.
[16:21:19] [Render thread/ERROR]: Slab stained_planks_cyan_slab could not be found.
[16:21:19] [Render thread/ERROR]: Slab stained_planks_blue_slab could not be found.
[16:21:19] [Render thread/ERROR]: Slab stained_planks_orange_slab could not be found.
[16:21:19] [Render thread/ERROR]: Slab stained_planks_red_slab could not be found.
[16:21:19] [Render thread/ERROR]: Slab stained_planks_yellow_slab could not be found.
[16:21:19] [Render thread/ERROR]: Slab stained_planks_light_blue_slab could not be found.
[16:21:19] [Render thread/ERROR]: Slab stained_planks_purple_slab could not be found.
[16:21:19] [Render thread/ERROR]: Slab stained_planks_silver_slab could not be found.
[16:21:19] [Render thread/ERROR]: Slab stained_planks_lime_slab could not be found.
[16:21:19] [Render thread/ERROR]: Slab stained_planks_green_slab could not be found.
[16:21:19] [Render thread/ERROR]: Slab stained_planks_black_slab could not be found.
[16:21:19] [Render thread/ERROR]: Slab stained_planks_brown_slab could not be found.
[16:21:19] [Render thread/ERROR]: Slab stained_planks_white_slab could not be found.
[16:21:19] [Render thread/ERROR]: Slab stained_planks_pink_slab could not be found.
[16:21:19] [Render thread/ERROR]: Slab reed_block_slab could not be found.
[16:21:19] [Render thread/ERROR]: Slab thatch_slab_double could not be found.
[16:21:19] [Render thread/ERROR]: Slab icy_stone_slab could not be found.
[16:21:19] [Render thread/ERROR]: Slab fire_stone_slab could not be found.
[16:21:19] [Render thread/ERROR]: Slab stone_limestone_slab could not be found.
[16:21:19] [Render thread/ERROR]: Slab stone_marble_slab could not be found.
[16:21:19] [Render thread/ERROR]: Slab duskbound_block_slab_double could not be found.
[16:21:19] [Render thread/ERROR]: Slab magma_bricks_slab could not be found.
[16:21:19] [Render thread/ERROR]: Slab midori_block_slab_double could not be found.
[16:21:19] [Render thread/ERROR]: Slab iron_plate_slab_double could not be found.
[16:21:19] [Render thread/ERROR]: Slab polished_netherrack_bricks_slab could not be found.
[16:21:19] [Render thread/ERROR]: Slab soul_sandstone_slab_double could not be found.
[16:21:19] [Render thread/ERROR]: Slab soul_sandstone_bricks_slab_double could not be found.
[16:21:19] [Render thread/ERROR]: Slab soul_sandstone_smooth_slab could not be found.
[16:21:19] [Render thread/ERROR]: Slab bark_oak_slab could not be found.
[16:21:19] [Render thread/ERROR]: Slab bark_spruce_slab could not be found.
[16:21:19] [Render thread/ERROR]: Slab bark_birch_slab could not be found.
[16:21:19] [Render thread/ERROR]: Slab bark_jungle_slab could not be found.
[16:21:19] [Render thread/ERROR]: Slab bark_acacia_slab could not be found.
[16:21:19] [Render thread/ERROR]: Slab bark_dark_oak_slab could not be found.
[16:21:19] [Render thread/INFO]: Reloading trait files
[16:21:19] [Render thread/INFO]: Registered 74 traits
[16:21:19] [Render thread/INFO]: Reloading part files
[16:21:19] [Render thread/INFO]: Registered part serializer 'silentgear:compound_part'
[16:21:19] [Render thread/INFO]: Registered part serializer 'silentgear:misc_upgrade'
[16:21:19] [Render thread/INFO]: Registered 44 parts
[16:21:19] [Render thread/INFO]: Reloading material files
[16:21:19] [Render thread/INFO]: Registered material serializer 'silentgear:standard'
[16:21:19] [Render thread/INFO]: Registered material serializer 'silentgear:compound'
[16:21:19] [Render thread/INFO]: Registered material serializer 'silentgear:custom_compound'
[16:21:19] [Render thread/INFO]: Registered material serializer 'silentgear:crafted'
[16:21:19] [Render thread/WARN]: Material 'silentgear:high_carbon_steel' has no model in the data file. This may be an outdated data pack or mod.
[16:21:19] [Render thread/INFO]: Skipped loading 18 material(s), as their conditions were not met. This is usually NOT an error!
[16:21:19] [Render thread/INFO]: Skipped materials: silentgear:aluminum_steel, silentgear:bismuth, silentgear:bismuth_brass, silentgear:bismuth_steel, silentgear:bronze, silentgear:compressed_iron, silentgear:enderium, silentgear:invar, silentgear:lumium, silentgear:osmium, silentgear:platinum, silentgear:redstone_alloy, silentgear:refined_glowstone, silentgear:refined_iron, silentgear:refined_obsidian, silentgear:signalum, silentgear:tin, silentgear:titanium
[16:21:19] [Render thread/INFO]: Loading data...
[16:21:21] [Render thread/INFO]: Done.
[16:21:21] [Render thread/INFO]: Finished recipe profiler for Arc Recycling, took 457 milliseconds
[16:21:21] [Render thread/INFO]: Beginning load of custom recipes for colony workers
[16:21:21] [Render thread/INFO]: Loaded 122 recipes for 13 crafters
[16:21:21] [Render thread/INFO]: Beginning load of research for University.
[16:21:21] [Render thread/INFO]: Loaded 184 recipes for 4 research branches
[16:21:21] [Render thread/INFO]: Loaded 13 normal and 13 rare Wandering Trader trade options.
[16:21:21] [Render thread/INFO]: Loaded cucumber-tags.json in 1 ms
[16:21:21] [Render thread/INFO]: Recipes for potions: ars_nouveau:mana_regen_potion, ars_nouveau:spell_damage_strong, ars_nouveau:mana_regen_potion_long, apotheosis:absorption, ars_nouveau:spell_damage, alexsmobs:soulsteal, minecraft:strong_swiftness, apotheosis:strong_absorption, alexsmobs:strong_knockback_resistance, minecraft:long_leaping, minecraft:regeneration, minecraft:strength, minecraft:strong_turtle_master, minecraft:strong_harming, minecraft:strong_slowness, minecraft:long_strength, alexsmobs:lava_vision, alexsmobs:long_lava_vision, alexsmobs:bug_pheromones, minecraft:harming, cyclic:strong_haste, minecraft:poison, alexsmobs:long_bug_pheromones, ars_nouveau:spell_damage_long, apotheosis:knowledge, minecraft:slowness, cyclic:haste, minecraft:healing, apotheosis:haste, cyclic:blind, minecraft:long_invisibility, alexsmobs:strong_soulsteal, cyclic:wither, minecraft:long_slow_falling, cyclic:swimspeed, apotheosis:long_haste, minecraft:turtle_master, apotheosis:strong_sundering, minecraft:mundane, alexsmobs:long_knockback_resistance, apotheosis:strong_haste, apotheosis:strong_fatigue, minecraft:strong_strength, cyclic:strong_hunger, minecraft:long_regeneration, minecraft:night_vision, alexsmobs:long_poison_resistance, apotheosis:long_fatigue, minecraft:strong_poison, minecraft:long_swiftness, minecraft:long_water_breathing, cyclic:levitation, minecraft:swiftness, apotheosis:long_wither, apotheosis:long_knowledge, apotheosis:wither, apotheosis:long_resistance, alexsmobs:long_soulsteal, minecraft:long_weakness, minecraft:long_slowness, minecraft:strong_regeneration, alexsmobs:knockback_resistance, alexsmobs:poison_resistance, apotheosis:fatigue, minecraft:long_fire_resistance, minecraft:long_turtle_master, minecraft:luck, apotheosis:long_absorption, cyclic:hunger, minecraft:strong_leaping, apotheosis:strong_wither, minecraft:weakness, apotheosis:strong_resistance, quark:strong_resilience, cyclic:stun, minecraft:strong_healing, cyclic:resistance, minecraft:long_night_vision, minecraft:leaping, alexsmobs:long_clinging, minecraft:slow_falling, minecraft:water, minecraft:fire_resistance, apotheosis:long_sundering, ars_nouveau:mana_regen_potion_strong, apotheosis:strong_knowledge, apotheosis:sundering, alexsmobs:clinging, quark:long_resilience, quark:resilience, minecraft:long_poison, minecraft:invisibility, alexsmobs:speed_iii, minecraft:awkward, minecraft:water_breathing, apotheosis:resistance
[16:21:23] [Render thread/INFO]: Loading world-gen registry content from data
[16:21:26] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:21:28] [Render thread/INFO]: Injecting existing registry data into this CLIENT instance
[16:21:36] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:21:36] [Render thread/ERROR]: Error adding element: Value must be positive: 0
[16:21:36] [Render thread/ERROR]: Error adding element: Value must be positive: 0
[16:21:36] [Render thread/ERROR]: Error adding element: Value must be positive: 0
[16:21:36] [Render thread/ERROR]: Error adding element: Value must be positive: 0
[16:21:36] [Render thread/ERROR]: Error adding element: Value must be positive: 0
[16:21:36] [Render thread/ERROR]: Error adding element: Value must be positive: 0
[16:21:36] [Render thread/ERROR]: Error adding element: Value must be positive: 0
[16:21:36] [Render thread/ERROR]: Error adding element: Value must be positive: 0
[16:21:36] [Render thread/ERROR]: Error adding element: Value must be positive: 0
[16:21:36] [Render thread/ERROR]: Error adding element: Value must be positive: 0
[16:21:36] [Render thread/ERROR]: Error adding element: Value must be positive: 0
[16:21:36] [Render thread/ERROR]: Error adding element: Value must be positive: 0
[16:21:36] [Render thread/ERROR]: Error adding element: Value must be positive: 0
[16:21:36] [Render thread/ERROR]: Error adding element: Value must be positive: 0
[16:21:36] [Render thread/ERROR]: Error adding element: Value must be positive: 0
[16:21:36] [Render thread/ERROR]: Error adding element: Value must be positive: 0
[16:21:36] [Render thread/ERROR]: Error adding element: Value must be positive: 0
[16:21:36] [Render thread/ERROR]: Error adding element: Value must be positive: 0
[16:21:36] [Render thread/ERROR]: Error adding element: Value must be positive: 0
[16:21:36] [Render thread/ERROR]: Error adding element: Value must be positive: 0
[16:21:36] [Render thread/ERROR]: Error adding element: Value must be positive: 0
[16:21:36] [Render thread/ERROR]: Error adding element: Value must be positive: 0
[16:21:36] [Render thread/ERROR]: Error adding element: Value must be positive: 0
[16:21:36] [Render thread/ERROR]: Error adding element: Value must be positive: 0
[16:21:36] [Render thread/ERROR]: Error adding element: Value must be positive: 0
[16:21:36] [Render thread/ERROR]: Error adding element: Value must be positive: 0
[16:21:36] [Render thread/ERROR]: Error adding element: Value must be positive: 0
[16:21:36] [Render thread/ERROR]: Error adding element: Value must be positive: 0
[16:21:36] [Render thread/INFO]: Injecting world-gen registry defaults
[16:21:37] [Render thread/INFO]: Loading world-gen registry content from data
[16:21:37] [Render thread/WARN]: Ambiguity between arguments [teleport, location] and [teleport, destination] with inputs: [0.1 -0.5 .9, 0 0 0]
[16:21:37] [Render thread/WARN]: Ambiguity between arguments [teleport, location] and [teleport, targets] with inputs: [0.1 -0.5 .9, 0 0 0]
[16:21:37] [Render thread/WARN]: Ambiguity between arguments [teleport, destination] and [teleport, targets] with inputs: [Player, 0123, @e, dd12be42-52a9-4a91-a8a1-11c01849e498]
[16:21:37] [Render thread/WARN]: Ambiguity between arguments [teleport, targets] and [teleport, destination] with inputs: [Player, 0123, dd12be42-52a9-4a91-a8a1-11c01849e498]
[16:21:37] [Render thread/WARN]: Ambiguity between arguments [teleport, targets, location] and [teleport, targets, destination] with inputs: [0.1 -0.5 .9, 0 0 0]
[16:21:37] [Render thread/WARN]: Ambiguity between arguments [ftbteams, info, server_id] and [ftbteams, info, team] with inputs: [server_id]
[16:21:37] [Render thread/WARN]: Ambiguity between arguments [ftbchunks, admin, view_loaded_chunks, reset] and [ftbchunks, admin, view_loaded_chunks, dimension] with inputs: [reset]
[16:21:37] [Render thread/WARN]: Ambiguity between arguments [structurize, scan, pos1, pos2, anchor_pos] and [structurize, scan, pos1, pos2, player] with inputs: [^1 ^ ^-5, 0 0 0, ~ ~ ~, ^ ^ ^, ~0.5 ~1 ~-5]
[16:21:37] [Render thread/WARN]: Ambiguity between arguments [create, coupling, add, cart1] and [create, coupling, add, carts] with inputs: [Player, 0123, @e, dd12be42-52a9-4a91-a8a1-11c01849e498]
[16:21:37] [Render thread/WARN]: Ambiguity between arguments [create, coupling, add, carts] and [create, coupling, add, cart1] with inputs: [Player, 0123, dd12be42-52a9-4a91-a8a1-11c01849e498]
[16:21:37] [Render thread/WARN]: Ambiguity between arguments [create, coupling, add, cart1] and [create, coupling, add, carts] with inputs: [Player, 0123, @e, dd12be42-52a9-4a91-a8a1-11c01849e498]
[16:21:37] [Render thread/WARN]: Ambiguity between arguments [create, coupling, add, carts] and [create, coupling, add, cart1] with inputs: [Player, 0123, dd12be42-52a9-4a91-a8a1-11c01849e498]
[16:21:37] [Render thread/WARN]: Ambiguity between arguments [waypoint, create, name, dimension, location, color, announce] and [waypoint, create, name, dimension, location, color, player] with inputs: [true, false]
[16:21:37] [Render thread/WARN]: Ambiguity between arguments [waypoint, delete, name, announce] and [waypoint, delete, name, player] with inputs: [true, false]
[16:21:37] [Render thread/INFO]: server_scripts:script.js:8: Hello, World! (You will see this line every time server resources reload)
[16:21:37] [Render thread/INFO]: Loaded script server_scripts:script.js in 0.004 s
[16:21:37] [Render thread/INFO]: Loaded 1/1 KubeJS server scripts in 0.017 s
[16:21:37] [Render thread/INFO]: Scripts loaded
[16:21:37] [Render thread/INFO]: Registered custom recipe handler for type kubejs:shaped
[16:21:37] [Render thread/INFO]: Registered custom recipe handler for type kubejs:shapeless
[16:21:37] [Render thread/INFO]: Registered custom recipe handler for type minecraft:crafting_shaped
[16:21:37] [Render thread/INFO]: Registered custom recipe handler for type minecraft:crafting_shapeless
[16:21:37] [Render thread/INFO]: Registered custom recipe handler for type minecraft:stonecutting
[16:21:37] [Render thread/INFO]: Registered custom recipe handler for type minecraft:smelting
[16:21:37] [Render thread/INFO]: Registered custom recipe handler for type minecraft:blasting
[16:21:37] [Render thread/INFO]: Registered custom recipe handler for type minecraft:smoking
[16:21:37] [Render thread/INFO]: Registered custom recipe handler for type minecraft:campfire_cooking
[16:21:37] [Render thread/INFO]: Registered custom recipe handler for type minecraft:smithing
[16:21:37] [Render thread/INFO]: Registered custom recipe handler for type cucumber:shaped_no_mirror
[16:21:37] [Render thread/INFO]: Registered custom recipe handler for type mysticalagriculture:tag
[16:21:37] [Render thread/INFO]: Registered custom recipe handler for type ars_nouveau:enchanting_apparatus
[16:21:37] [Render thread/INFO]: Registered custom recipe handler for type ars_nouveau:enchantment
[16:21:37] [Render thread/INFO]: Registered custom recipe handler for type ars_nouveau:glyph_recipe
[16:21:37] [Render thread/INFO]: Registered custom recipe handler for type create:sequenced_assembly
[16:21:37] [Render thread/INFO]: Registered custom recipe handler for type create:mechanical_crafting
[16:21:37] [Render thread/INFO]: Registered custom recipe handler for type create:conversion
[16:21:37] [Render thread/INFO]: Registered custom recipe handler for type create:crushing
[16:21:37] [Render thread/INFO]: Registered custom recipe handler for type create:cutting
[16:21:37] [Render thread/INFO]: Registered custom recipe handler for type create:milling
[16:21:37] [Render thread/INFO]: Registered custom recipe handler for type create:basin
[16:21:37] [Render thread/INFO]: Registered custom recipe handler for type create:mixing
[16:21:37] [Render thread/INFO]: Registered custom recipe handler for type create:compacting
[16:21:37] [Render thread/INFO]: Registered custom recipe handler for type create:pressing
[16:21:37] [Render thread/INFO]: Registered custom recipe handler for type create:sandpaper_polishing
[16:21:37] [Render thread/INFO]: Registered custom recipe handler for type create:splashing
[16:21:37] [Render thread/INFO]: Registered custom recipe handler for type create:deploying
[16:21:37] [Render thread/INFO]: Registered custom recipe handler for type create:filling
[16:21:37] [Render thread/INFO]: Registered custom recipe handler for type create:emptying
[16:21:37] [Render thread/INFO]: Registered custom recipe handler for type immersiveengineering:turn_and_copy
[16:21:37] [Render thread/INFO]: Registered custom recipe handler for type immersiveengineering:alloy
[16:21:37] [Render thread/INFO]: Registered custom recipe handler for type immersiveengineering:blast_furnace
[16:21:37] [Render thread/INFO]: Registered custom recipe handler for type immersiveengineering:blast_furnace_fuel
[16:21:37] [Render thread/INFO]: Registered custom recipe handler for type immersiveengineering:coke_oven
[16:21:37] [Render thread/INFO]: Registered custom recipe handler for type immersiveengineering:cloche
[16:21:37] [Render thread/INFO]: Registered custom recipe handler for type immersiveengineering:fertilizer
[16:21:37] [Render thread/INFO]: Registered custom recipe handler for type immersiveengineering:metal_press
[16:21:37] [Render thread/INFO]: Registered custom recipe handler for type immersiveengineering:arc_furnace
[16:21:37] [Render thread/INFO]: Registered custom recipe handler for type immersiveengineering:crusher
[16:21:37] [Render thread/INFO]: Registered custom recipe handler for type immersiveengineering:sawmill
[16:21:37] [Render thread/INFO]: Registered custom recipe handler for type immersiveengineering:squeezer
[16:21:37] [Render thread/INFO]: Registered custom recipe handler for type immersiveengineering:mixer
[16:21:37] [Render thread/INFO]: Scanning recipes...
[16:21:37] [Render thread/INFO]: Reloading ResourceManager: KubeJS Virtual Data Pack [low priority], Default, netherportalfix-forge-1.18-9.0.0.jar, refinedpipes-0.6.0.jar, DoggyTalents-1.18.1-2.4.0.jar, mcw-windows-2.0.2-mc1.18.1.jar, Industrial Agriculture[Core]-1.18.1-1.8.14.3.jar, modnametooltip-1.18.1-1.18.0.jar, kleeslabs-forge-1.18-11.0.0.jar, rsgauges-1.18.1-1.2.13-b1.jar, TerraForged-1.18.1-0.3.0-alpha-2.jar, cookingforblockheads-forge-1.18-11.0.0.jar, Controlling-forge-1.18.1-9.0.10.jar, Placebo-1.18.1-6.0.3.jar, citadel-1.10.8-1.18.jar, alexsmobs-1.15.1.jar, WitherSkeletonTweaks-1.18.1-7.0.1.jar, sophisticatedbackpacks-1.18.1-3.15.1.505.jar, guardvillagers-1.18.1.4.0.jar, buildinggadgets-3.10.1-build.3+mc1.18.jar, Customized-Dungeon-Loot-1.17.x-(v.2.1.0).jar, Apotheosis-1.18.1-5.0.0.jar, mcw-doors-1.0.5-mc1.18.1.jar, balm-2.4.0+0.jar, JustEnoughResources-1.18.1-0.13.1.141.jar, cloth-config-6.1.48-forge.jar, shetiphiancore-1.18-3.10.0.jar, supplementaries-1.18.1-1.1.5.jar, refinedstorage-1.10.0-beta.4.jar, EquipmentCompare-1.18.1-1.2.10.jar, out_of_sight-1.18.1-1.0.1.jar, mcw-bridges-2.0.1-mc1.18.1.jar, FarmersDelight-1.18.1-1.0.1.jar, torchmaster-18.0.2-beta.jar, repurposed_structures_forge-4.1.0+1.18.1.jar, morevillagers-FORGE-1.18.1-3.1.1.jar, endertanks-1.18-1.11.0.jar, BiomesOPlenty-1.18.1-15.0.0.90-universal.jar, mcw-trapdoors-1.0.4-mc1.18.1.jar, mcw-fences-1.0.2-mc1.18.1.jar, silent-gear-1.18.1-2.8.3.jar, supermartijn642corelib-1.0.16-mc1.18.jar, villagespawnpoint_1.18.1-1.9.jar, curios-forge-1.18.1-5.0.4.2.jar, Patchouli-1.18.1-64.jar, Industrial Agriculture[Silent's Gems]-1.18.1-1.8.14.jar, blockui-1.18-0.0.34-ALPHA.jar, collective-1.18.1-3.8.jar, OreExcavation-1.10.159.jar, tombstone-7.3.3-1.18.jar, ExtraStorage-1.18.1-2.0.1.jar, furniture-7.0.0-pre27-1.18.1.jar, architectury-3.4.9.jar, curiouselytra-forge-1.18.1-5.0.0.1.jar, AI-Improvements-1.18-0.4.0.jar, light-overlay-6.0.4-forge.jar, trashcans-1.0.12-mc1.18.jar, FastLeafDecay-27.2.jar, geckolib-1.18-forge-3.0.3.jar, Cyclic-1.18.1-1.6.9.jar, BetterAdvancements-1.18.1-0.1.2.122.jar, clienttweaks-forge-1.18-7.0.0.jar, rhino-forge-1800.1.7-build.92.jar, Cucumber-1.18.1-5.0.2.jar, jmi-1.18.1-0.5-27.jar, ftb-library-forge-1801.3.5-build.106.jar, ftb-teams-forge-1801.2.4-build.46.jar, item-filters-forge-1801.2.6-build.16.jar, EasyMagic-v3.2.1-1.18.1-Forge.jar, jei-1.18.1-9.1.2.61.jar, AttributeFix-Forge-1.18.1-13.0.3.jar, caelus-forge-1.18-3.0.0.1.jar, createchunkloading-0.3.1.jar, waystones-forge-1.18.1-9.0.1.jar, Clumps-forge-1.18.1-8.0.4.jar, journeymap-1.18.1-5.8.0beta6.jar, comforts-forge-1.18-5.0.0.1.jar, NaturesCompass-1.18.1-1.9.4-forge.jar, artifacts-1.18.1-4.0.2.jar, DungeonCrawl-1.18.1-2.3.6.jar, farmingforblockheads-forge-1.18.1-9.0.2.jar, mcjtylib-1.18-6.0.5.jar, rftoolsbase-1.18-3.0.1.jar, xnet-1.18-4.0.2.jar, mahoutsukai-1.18.1-v1.33.7.jar, catalogue-1.6.0-1.18.1.jar, ToastControl-1.18.1-6.0.0.jar, ars_nouveau-1.18.1-2.0.5.jar, rftoolspower-1.18-4.0.1.jar, ExtraDisks-1.18.1-2.0.2.jar, ftb-chunks-forge-1801.3.3-build.108.jar, kubejs-forge-1801.4.1-build.271.jar, forge-1.18.1-39.0.10-universal.jar, selene-1.18-1.11.jar, MysticalAgriculture-1.18.1-5.0.1.jar, MysticalAgradditions-1.18.1-5.0.2.jar, EnchantmentDescriptions-Forge-1.18.1-9.0.8.jar, theoneprobe-1.18-5.0.2.jar, TerraBlender-1.18.1-1.0.0.24-universal.jar, swingthroughgrass-1.18.1-1.8.0.jar, MouseTweaks-forge-mc1.18-2.21.jar, ftb-quests-forge-1801.3.7-build.87.jar, ImmersiveEngineering-1.18.1-7.1.0-145.jar, silent-lib-1.18-6.0.0.jar, domum_ornamentum-1.18-1.0.31-ALPHA-universal.jar, Iceberg-1.18.1-1.0.33.jar, flywheel-forge-1.18-0.5.0a.jar, create-mc1.18.1_v0.4b.jar, createdeco-1.2.2-1.18.jar, Croptopia-1.18-FORGE-1.8.0.jar, baubley-heart-canisters-1.18-1.0.0.jar, FastWorkbench-1.18.1-6.0.0.jar, polymorph-forge-1.18.1-0.35.jar, AutoRegLib-1.7-52.jar, Quark-3.0-334.jar, StorageDrawers-1.18.1-10.1.0.jar, sit-1.18-1.3.1.jar, enderchests-1.18-1.9.0.jar, InventoryHud_[1.18].forge-3.4.4.jar, structurize-1.18.1-1.0.319-BETA.jar, multi-piston-1.18-1.2.2-ALPHA.jar, AmbientEnvironment-forge-1.18.1-7.0.3.jar, kubejs-create-1801.2.0-build.14.jar, minecolonies-1.18.1-1.0.278-RELEASE.jar, FastFurnace-1.18.1-6.0.1.jar, appleskin-forge-mc1.18-2.2.0.jar, MagicalTorches-1.18.1-2.0.0.jar, lootr-1.18-0.1.13.40.jar, ferritecore-4.0.0-forge.jar, SoL-Carrot-1.18.1-1.12.0.jar, PuzzlesLib-v3.1.3-1.18.1-Forge.jar, Aquaculture-1.18.1-2.3.2.jar, silents-gems-1.18-4.2.0.jar, kubejs-immersive-engineering-1801.2.0-build.16.jar, refinedstorageaddons-0.8.1.jar, expandability-5.0.0-forge.jar, CosmeticArmorReworked-1.18.1-v1a.jar, defaultoptions-forge-1.18-14.0.0.jar, treasure-bags-1.18-1.6.0.jar, dimdungeons-1.13.1-forge-1.18.1.jar, KubeJS Resource Pack [data], KubeJS Virtual Data Pack [high priority]
[16:21:37] [Worker-Main-17/INFO]: [enchantments] Found 0 tags, added 0 objects, removed 0 objects
[16:21:38] [Worker-Main-15/INFO]: [potions] Found 0 tags, added 0 objects, removed 0 objects
[16:21:38] [Worker-Main-16/INFO]: [mob_effects] Found 1 tags, added 0 objects, removed 0 objects
[16:21:38] [Worker-Main-14/INFO]: [block_entity_types] Found 3 tags, added 0 objects, removed 0 objects
[16:21:38] [Worker-Main-12/INFO]: [game_events] Found 2 tags, added 0 objects, removed 0 objects
[16:21:38] [Worker-Main-14/INFO]: [functions] Found 0 tags, added 0 objects, removed 0 objects
[16:21:38] [Worker-Main-18/INFO]: [entity_types] Found 47 tags, added 0 objects, removed 0 objects
[16:21:39] [Worker-Main-11/INFO]: [fluids] Found 20 tags, added 0 objects, removed 0 objects
[16:21:46] [Worker-Main-13/INFO]: [blocks] Found 583 tags, added 0 objects, removed 0 objects
[16:21:46] [Worker-Main-13/ERROR]: Couldn't load tag rsgauges:soils as it is missing following references: minecraft:grass_path (from rsgauges-1.18.1-1.2.13-b1.jar)
[16:21:46] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:21:50] [Worker-Main-19/INFO]: [items] Found 1312 tags, added 0 objects, removed 0 objects
[16:21:56] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:22:06] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:22:15] [Render thread/WARN]: Failed to parse recipe 'create:compat/silentsgems/crushing/onyx_ore[create:crushing]'! Falling back to vanilla: com.google.gson.JsonSyntaxException: Unknown item 'silentgems:onyx_ore'
[16:22:15] [Render thread/WARN]: Failed to parse recipe create:compat/silentsgems/crushing/onyx_ore[create:crushing]: com.google.gson.JsonSyntaxException: Unknown item 'silentgems:onyx_ore'
[16:22:15] [Render thread/WARN]: Failed to parse recipe 'create:compat/silentsgems/crushing/amethyst_ore[create:crushing]'! Falling back to vanilla: com.google.gson.JsonSyntaxException: Unknown item 'silentgems:amethyst_ore'
[16:22:15] [Render thread/WARN]: Failed to parse recipe create:compat/silentsgems/crushing/amethyst_ore[create:crushing]: com.google.gson.JsonSyntaxException: Unknown item 'silentgems:amethyst_ore'
[16:22:15] [Render thread/WARN]: Failed to parse recipe 'create:compat/silentsgems/crushing/morganite_ore[create:crushing]'! Falling back to vanilla: com.google.gson.JsonSyntaxException: Unknown item 'silentgems:morganite_ore'
[16:22:15] [Render thread/WARN]: Failed to parse recipe create:compat/silentsgems/crushing/morganite_ore[create:crushing]: com.google.gson.JsonSyntaxException: Unknown item 'silentgems:morganite_ore'
[16:22:15] [Render thread/WARN]: Failed to parse recipe 'create:compat/silentsgems/crushing/sunstone_ore[create:crushing]'! Falling back to vanilla: com.google.gson.JsonSyntaxException: Unknown item 'silentgems:sunstone_ore'
[16:22:15] [Render thread/WARN]: Failed to parse recipe create:compat/silentsgems/crushing/sunstone_ore[create:crushing]: com.google.gson.JsonSyntaxException: Unknown item 'silentgems:sunstone_ore'
[16:22:15] [Render thread/WARN]: Failed to parse recipe 'create:compat/silentsgems/crushing/phosphophyllite_ore[create:crushing]'! Falling back to vanilla: com.google.gson.JsonSyntaxException: Unknown item 'silentgems:phosphophyllite_ore'
[16:22:15] [Render thread/WARN]: Failed to parse recipe create:compat/silentsgems/crushing/phosphophyllite_ore[create:crushing]: com.google.gson.JsonSyntaxException: Unknown item 'silentgems:phosphophyllite_ore'
[16:22:15] [Render thread/WARN]: Failed to parse recipe 'create:compat/silentsgems/crushing/cats_eye_ore[create:crushing]'! Falling back to vanilla: com.google.gson.JsonSyntaxException: Unknown item 'silentgems:cats_eye_ore'
[16:22:15] [Render thread/WARN]: Failed to parse recipe create:compat/silentsgems/crushing/cats_eye_ore[create:crushing]: com.google.gson.JsonSyntaxException: Unknown item 'silentgems:cats_eye_ore'
[16:22:15] [Render thread/WARN]: Failed to parse recipe 'create:compat/silentsgems/crushing/spinel_ore[create:crushing]'! Falling back to vanilla: com.google.gson.JsonSyntaxException: Unknown item 'silentgems:spinel_ore'
[16:22:15] [Render thread/WARN]: Failed to parse recipe create:compat/silentsgems/crushing/spinel_ore[create:crushing]: com.google.gson.JsonSyntaxException: Unknown item 'silentgems:spinel_ore'
[16:22:15] [Render thread/WARN]: Failed to parse recipe 'create:compat/silentsgems/crushing/pearl_ore[create:crushing]'! Falling back to vanilla: com.google.gson.JsonSyntaxException: Unknown item 'silentgems:pearl_ore'
[16:22:15] [Render thread/WARN]: Failed to parse recipe create:compat/silentsgems/crushing/pearl_ore[create:crushing]: com.google.gson.JsonSyntaxException: Unknown item 'silentgems:pearl_ore'
[16:22:15] [Render thread/WARN]: Failed to parse recipe 'create:compat/silentsgems/crushing/garnet_ore[create:crushing]'! Falling back to vanilla: com.google.gson.JsonSyntaxException: Unknown item 'silentgems:garnet_ore'
[16:22:15] [Render thread/WARN]: Failed to parse recipe create:compat/silentsgems/crushing/garnet_ore[create:crushing]: com.google.gson.JsonSyntaxException: Unknown item 'silentgems:garnet_ore'
[16:22:15] [Render thread/WARN]: Failed to parse recipe 'create:compat/silentsgems/crushing/lepidolite_ore[create:crushing]'! Falling back to vanilla: com.google.gson.JsonSyntaxException: Unknown item 'silentgems:lepidolite_ore'
[16:22:15] [Render thread/WARN]: Failed to parse recipe create:compat/silentsgems/crushing/lepidolite_ore[create:crushing]: com.google.gson.JsonSyntaxException: Unknown item 'silentgems:lepidolite_ore'
[16:22:15] [Render thread/WARN]: Failed to parse recipe 'create:compat/silentsgems/crushing/green_sapphire_ore[create:crushing]'! Falling back to vanilla: com.google.gson.JsonSyntaxException: Unknown item 'silentgems:green_sapphire_ore'
[16:22:15] [Render thread/WARN]: Failed to parse recipe create:compat/silentsgems/crushing/green_sapphire_ore[create:crushing]: com.google.gson.JsonSyntaxException: Unknown item 'silentgems:green_sapphire_ore'
[16:22:15] [Render thread/WARN]: Failed to parse recipe 'create:compat/silentsgems/crushing/yellow_diamond_ore[create:crushing]'! Falling back to vanilla: com.google.gson.JsonSyntaxException: Unknown item 'silentgems:yellow_diamond_ore'
[16:22:15] [Render thread/WARN]: Failed to parse recipe create:compat/silentsgems/crushing/yellow_diamond_ore[create:crushing]: com.google.gson.JsonSyntaxException: Unknown item 'silentgems:yellow_diamond_ore'
[16:22:15] [Render thread/WARN]: Failed to parse recipe 'create:compat/silentsgems/crushing/moonstone_ore[create:crushing]'! Falling back to vanilla: com.google.gson.JsonSyntaxException: Unknown item 'silentgems:moonstone_ore'
[16:22:15] [Render thread/WARN]: Failed to parse recipe create:compat/silentsgems/crushing/moonstone_ore[create:crushing]: com.google.gson.JsonSyntaxException: Unknown item 'silentgems:moonstone_ore'
[16:22:15] [Render thread/WARN]: Failed to parse recipe 'create:compat/silentsgems/crushing/jasper_ore[create:crushing]'! Falling back to vanilla: com.google.gson.JsonSyntaxException: Unknown item 'silentgems:jasper_ore'
[16:22:15] [Render thread/WARN]: Failed to parse recipe create:compat/silentsgems/crushing/jasper_ore[create:crushing]: com.google.gson.JsonSyntaxException: Unknown item 'silentgems:jasper_ore'
[16:22:15] [Render thread/WARN]: Failed to parse recipe 'create:compat/silentsgems/crushing/malachite_ore[create:crushing]'! Falling back to vanilla: com.google.gson.JsonSyntaxException: Unknown item 'silentgems:malachite_ore'
[16:22:15] [Render thread/WARN]: Failed to parse recipe create:compat/silentsgems/crushing/malachite_ore[create:crushing]: com.google.gson.JsonSyntaxException: Unknown item 'silentgems:malachite_ore'
[16:22:15] [Render thread/WARN]: Failed to parse recipe 'create:compat/silentsgems/crushing/tanzanite_ore[create:crushing]'! Falling back to vanilla: com.google.gson.JsonSyntaxException: Unknown item 'silentgems:tanzanite_ore'
[16:22:15] [Render thread/WARN]: Failed to parse recipe create:compat/silentsgems/crushing/tanzanite_ore[create:crushing]: com.google.gson.JsonSyntaxException: Unknown item 'silentgems:tanzanite_ore'
[16:22:15] [Render thread/WARN]: Failed to parse recipe 'createdeco:copper_sheet_metal_from_air_stonecutting[minecraft:stonecutting]'! Falling back to vanilla: com.google.gson.JsonSyntaxException: Item array cannot be empty, at least one item must be defined
[16:22:15] [Render thread/WARN]: Failed to parse recipe createdeco:copper_sheet_metal_from_air_stonecutting[minecraft:stonecutting]: com.google.gson.JsonSyntaxException: Item array cannot be empty, at least one item must be defined
[16:22:15] [Render thread/WARN]: Failed to parse recipe 'create:compat/silentsgems/crushing/amber_ore[create:crushing]'! Falling back to vanilla: com.google.gson.JsonSyntaxException: Unknown item 'silentgems:amber_ore'
[16:22:15] [Render thread/WARN]: Failed to parse recipe create:compat/silentsgems/crushing/amber_ore[create:crushing]: com.google.gson.JsonSyntaxException: Unknown item 'silentgems:amber_ore'
[16:22:15] [Render thread/WARN]: Failed to parse recipe 'create:compat/silentsgems/crushing/apatite_ore[create:crushing]'! Falling back to vanilla: com.google.gson.JsonSyntaxException: Unknown item 'silentgems:apatite_ore'
[16:22:15] [Render thread/WARN]: Failed to parse recipe create:compat/silentsgems/crushing/apatite_ore[create:crushing]: com.google.gson.JsonSyntaxException: Unknown item 'silentgems:apatite_ore'
[16:22:15] [Render thread/WARN]: Failed to parse recipe 'farmersdelight:integration/immersiveengineering/metalpress/pumpkin[immersiveengineering:metal_press]'! Falling back to vanilla: com.google.gson.JsonSyntaxException: Expected mold to be a string, was an object ({"it...g"})
[16:22:15] [Render thread/WARN]: Failed to parse recipe farmersdelight:integration/immersiveengineering/metalpress/pumpkin[immersiveengineering:metal_press]: com.google.gson.JsonSyntaxException: Expected mold to be a string, was an object ({"it...g"})
[16:22:15] [Render thread/WARN]: Failed to parse recipe 'create:compat/silentsgems/crushing/chrysoprase_ore[create:crushing]'! Falling back to vanilla: com.google.gson.JsonSyntaxException: Unknown item 'silentgems:chrysoprase_ore'
[16:22:15] [Render thread/WARN]: Failed to parse recipe create:compat/silentsgems/crushing/chrysoprase_ore[create:crushing]: com.google.gson.JsonSyntaxException: Unknown item 'silentgems:chrysoprase_ore'
[16:22:15] [Render thread/WARN]: Failed to parse recipe 'supplementaries:sign_posts/sign_post_cactus[minecraft:crafting_shaped]'! Falling back to vanilla: com.google.gson.JsonSyntaxException: Unknown item 'structurize:blockcactusplank'
[16:22:15] [Render thread/WARN]: Failed to parse recipe supplementaries:sign_posts/sign_post_cactus[minecraft:crafting_shaped]: com.google.gson.JsonSyntaxException: Unknown item 'structurize:blockcactusplank'
[16:22:15] [Render thread/WARN]: Failed to parse recipe 'create:compat/silentsgems/crushing/sodalite_ore[create:crushing]'! Falling back to vanilla: com.google.gson.JsonSyntaxException: Unknown item 'silentgems:sodalite_ore'
[16:22:15] [Render thread/WARN]: Failed to parse recipe create:compat/silentsgems/crushing/sodalite_ore[create:crushing]: com.google.gson.JsonSyntaxException: Unknown item 'silentgems:sodalite_ore'
[16:22:15] [Render thread/WARN]: Failed to parse recipe 'create:compat/silentsgems/crushing/fluorite_ore[create:crushing]'! Falling back to vanilla: com.google.gson.JsonSyntaxException: Unknown item 'silentgems:fluorite_ore'
[16:22:15] [Render thread/WARN]: Failed to parse recipe create:compat/silentsgems/crushing/fluorite_ore[create:crushing]: com.google.gson.JsonSyntaxException: Unknown item 'silentgems:fluorite_ore'
[16:22:15] [Render thread/WARN]: Failed to parse recipe 'create:compat/silentsgems/crushing/ametrine_ore[create:crushing]'! Falling back to vanilla: com.google.gson.JsonSyntaxException: Unknown item 'silentgems:ametrine_ore'
[16:22:15] [Render thread/WARN]: Failed to parse recipe create:compat/silentsgems/crushing/ametrine_ore[create:crushing]: com.google.gson.JsonSyntaxException: Unknown item 'silentgems:ametrine_ore'
[16:22:15] [Render thread/WARN]: Failed to parse recipe 'create:compat/silentsgems/crushing/kunzite_ore[create:crushing]'! Falling back to vanilla: com.google.gson.JsonSyntaxException: Unknown item 'silentgems:kunzite_ore'
[16:22:15] [Render thread/WARN]: Failed to parse recipe create:compat/silentsgems/crushing/kunzite_ore[create:crushing]: com.google.gson.JsonSyntaxException: Unknown item 'silentgems:kunzite_ore'
[16:22:15] [Render thread/WARN]: Failed to parse recipe 'create:compat/silentsgems/crushing/tektite_ore[create:crushing]'! Falling back to vanilla: com.google.gson.JsonSyntaxException: Unknown item 'silentgems:tektite_ore'
[16:22:15] [Render thread/WARN]: Failed to parse recipe create:compat/silentsgems/crushing/tektite_ore[create:crushing]: com.google.gson.JsonSyntaxException: Unknown item 'silentgems:tektite_ore'
[16:22:15] [Render thread/WARN]: Failed to parse recipe 'supplementaries:hanging_signs/hanging_sign_cactus[minecraft:crafting_shaped]'! Falling back to vanilla: com.google.gson.JsonSyntaxException: Unknown item 'structurize:blockcactusplank'
[16:22:15] [Render thread/WARN]: Failed to parse recipe supplementaries:hanging_signs/hanging_sign_cactus[minecraft:crafting_shaped]: com.google.gson.JsonSyntaxException: Unknown item 'structurize:blockcactusplank'
[16:22:15] [Render thread/WARN]: Failed to parse recipe 'create:compat/silentsgems/crushing/benitoite_ore[create:crushing]'! Falling back to vanilla: com.google.gson.JsonSyntaxException: Unknown item 'silentgems:benitoite_ore'
[16:22:15] [Render thread/WARN]: Failed to parse recipe create:compat/silentsgems/crushing/benitoite_ore[create:crushing]: com.google.gson.JsonSyntaxException: Unknown item 'silentgems:benitoite_ore'
[16:22:15] [Render thread/WARN]: Failed to parse recipe 'create:compat/silentsgems/crushing/euclase_ore[create:crushing]'! Falling back to vanilla: com.google.gson.JsonSyntaxException: Unknown item 'silentgems:euclase_ore'
[16:22:15] [Render thread/WARN]: Failed to parse recipe create:compat/silentsgems/crushing/euclase_ore[create:crushing]: com.google.gson.JsonSyntaxException: Unknown item 'silentgems:euclase_ore'
[16:22:15] [Render thread/WARN]: Failed to parse recipe 'create:compat/silentsgems/crushing/aquamarine_ore[create:crushing]'! Falling back to vanilla: com.google.gson.JsonSyntaxException: Unknown item 'silentgems:aquamarine_ore'
[16:22:15] [Render thread/WARN]: Failed to parse recipe create:compat/silentsgems/crushing/aquamarine_ore[create:crushing]: com.google.gson.JsonSyntaxException: Unknown item 'silentgems:aquamarine_ore'
[16:22:15] [Render thread/WARN]: Failed to parse recipe 'create:compat/silentsgems/crushing/opal_ore[create:crushing]'! Falling back to vanilla: com.google.gson.JsonSyntaxException: Unknown item 'silentgems:opal_ore'
[16:22:15] [Render thread/WARN]: Failed to parse recipe create:compat/silentsgems/crushing/opal_ore[create:crushing]: com.google.gson.JsonSyntaxException: Unknown item 'silentgems:opal_ore'
[16:22:15] [Render thread/WARN]: Failed to parse recipe 'create:compat/silentsgems/crushing/zircon_ore[create:crushing]'! Falling back to vanilla: com.google.gson.JsonSyntaxException: Unknown item 'silentgems:zircon_ore'
[16:22:15] [Render thread/WARN]: Failed to parse recipe create:compat/silentsgems/crushing/zircon_ore[create:crushing]: com.google.gson.JsonSyntaxException: Unknown item 'silentgems:zircon_ore'
[16:22:15] [Render thread/WARN]: Failed to parse recipe 'create:compat/silentsgems/crushing/pyrope_ore[create:crushing]'! Falling back to vanilla: com.google.gson.JsonSyntaxException: Unknown item 'silentgems:pyrope_ore'
[16:22:15] [Render thread/WARN]: Failed to parse recipe create:compat/silentsgems/crushing/pyrope_ore[create:crushing]: com.google.gson.JsonSyntaxException: Unknown item 'silentgems:pyrope_ore'
[16:22:15] [Render thread/WARN]: Failed to parse recipe 'create:compat/silentsgems/crushing/agate_ore[create:crushing]'! Falling back to vanilla: com.google.gson.JsonSyntaxException: Unknown item 'silentgems:agate_ore'
[16:22:15] [Render thread/WARN]: Failed to parse recipe create:compat/silentsgems/crushing/agate_ore[create:crushing]: com.google.gson.JsonSyntaxException: Unknown item 'silentgems:agate_ore'
[16:22:15] [Render thread/WARN]: Failed to parse recipe 'create:compat/silentsgems/crushing/coral_ore[create:crushing]'! Falling back to vanilla: com.google.gson.JsonSyntaxException: Unknown item 'silentgems:coral_ore'
[16:22:15] [Render thread/WARN]: Failed to parse recipe create:compat/silentsgems/crushing/coral_ore[create:crushing]: com.google.gson.JsonSyntaxException: Unknown item 'silentgems:coral_ore'
[16:22:15] [Render thread/WARN]: Failed to parse recipe 'create:compat/silentsgems/crushing/jade_ore[create:crushing]'! Falling back to vanilla: com.google.gson.JsonSyntaxException: Unknown item 'silentgems:jade_ore'
[16:22:15] [Render thread/WARN]: Failed to parse recipe create:compat/silentsgems/crushing/jade_ore[create:crushing]: com.google.gson.JsonSyntaxException: Unknown item 'silentgems:jade_ore'
[16:22:15] [Render thread/INFO]: Found 11590 recipes and 0 failed recipes in 624.6 ms
[16:22:15] [Render thread/INFO]: Posted recipe events in 29.21 ms
[16:22:16] [Render thread/INFO]: Modified & removed recipes in 262.1 ms
[16:22:16] [Render thread/INFO]: Added recipes in 62.33 μs
[16:22:16] [Render thread/INFO]: Added 0 recipes, removed 0 recipes, modified 0 recipes, with 0 failed recipes and 0 fall-backed recipes
[16:22:16] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:22:16] [Render thread/INFO]: Injecting loot table 'silentgear:inject/chests/bastion_bridge' into 'minecraft:chests/bastion_bridge'
[16:22:17] [Render thread/INFO]: Injecting loot table 'silentgear:inject/chests/bastion_other' into 'minecraft:chests/bastion_other'
[16:22:18] [Render thread/INFO]: Injecting loot table 'silentgear:inject/chests/ruined_portal' into 'minecraft:chests/ruined_portal'
[16:22:18] [Render thread/INFO]: Injecting loot table 'silentgear:inject/chests/bastion_treasure' into 'minecraft:chests/bastion_treasure'
[16:22:18] [Render thread/INFO]: Injecting loot table 'silentgear:inject/chests/nether_bridge' into 'minecraft:chests/nether_bridge'
[16:22:18] [Render thread/INFO]: Injecting loot table 'silentgear:inject/entities/spider' into 'minecraft:entities/spider'
[16:22:19] [Render thread/INFO]: Injecting loot table 'silentgear:inject/entities/cave_spider' into 'minecraft:entities/cave_spider'
[16:22:19] [Render thread/INFO]: Registered 0 additional loot tables.
[16:22:19] [Render thread/ERROR]: Couldn't load advancement supplementaries:nether/goblet: Task Advancement{parentId=minecraft:nether/local_brewery, display=net.minecraft.advancements.DisplayInfo@23e1a079, rewards=AdvancementRewards{experience=0, loot=[], recipes=[], function=net.minecraft.commands.CommandFunction$CacheableFunction@d920d93}, criteria={unlock=net.minecraft.advancements.Criterion@1f155884}, requirements=[[unlock]]}
[16:22:19] [Render thread/INFO]: Loaded 6961 advancements
[16:22:19] [Render thread/INFO]: Registered 17 additional recipes.
[16:22:19] [Render thread/ERROR]: Slab wood_slab_0 could not be found.
[16:22:19] [Render thread/ERROR]: Slab wood_slab_1 could not be found.
[16:22:19] [Render thread/ERROR]: Slab other_slab could not be found.
[16:22:19] [Render thread/ERROR]: Slab biotite_slab could not be found.
[16:22:19] [Render thread/ERROR]: Slab snow_bricks_slab could not be found.
[16:22:19] [Render thread/ERROR]: Slab sandy_bricks_slab could not be found.
[16:22:19] [Render thread/ERROR]: Slab charred_nether_brick_slab could not be found.
[16:22:19] [Render thread/ERROR]: Slab sandstone_bricks_slab_double could not be found.
[16:22:19] [Render thread/ERROR]: Slab sandstone_smooth_slab could not be found.
[16:22:19] [Render thread/ERROR]: Slab red_sandstone_bricks_slab_double could not be found.
[16:22:19] [Render thread/ERROR]: Slab red_sandstone_smooth_slab could not be found.
[16:22:19] [Render thread/ERROR]: Slab end_bricks_slab could not be found.
[16:22:19] [Render thread/ERROR]: Slab prismarine_slab could not be found.
[16:22:19] [Render thread/ERROR]: Slab prismarine_dark_slab could not be found.
[16:22:19] [Render thread/ERROR]: Slab prismarine_bricks_slab could not be found.
[16:22:19] [Render thread/ERROR]: Slab stone_diorite_slab could not be found.
[16:22:19] [Render thread/ERROR]: Slab stone_diorite_bricks_slab could not be found.
[16:22:19] [Render thread/ERROR]: Slab stone_granite_slab could not be found.
[16:22:19] [Render thread/ERROR]: Slab stone_granite_bricks_slab could not be found.
[16:22:19] [Render thread/ERROR]: Slab stone_andesite_slab could not be found.
[16:22:19] [Render thread/ERROR]: Slab stone_andesite_bricks_slab could not be found.
[16:22:19] [Render thread/ERROR]: Slab stone_basalt_slab could not be found.
[16:22:19] [Render thread/ERROR]: Slab stone_basalt_bricks_slab could not be found.
[16:22:19] [Render thread/ERROR]: Slab stained_clay_tiles_gray_slab could not be found.
[16:22:19] [Render thread/ERROR]: Slab stained_clay_tiles_magenta_slab could not be found.
[16:22:19] [Render thread/ERROR]: Slab stained_clay_tiles_cyan_slab could not be found.
[16:22:19] [Render thread/ERROR]: Slab stained_clay_tiles_blue_slab could not be found.
[16:22:19] [Render thread/ERROR]: Slab stained_clay_tiles_orange_slab could not be found.
[16:22:19] [Render thread/ERROR]: Slab stained_clay_tiles_red_slab could not be found.
[16:22:19] [Render thread/ERROR]: Slab stained_clay_tiles_yellow_slab could not be found.
[16:22:19] [Render thread/ERROR]: Slab stained_clay_tiles_light_blue_slab could not be found.
[16:22:19] [Render thread/ERROR]: Slab stained_clay_tiles_purple_slab could not be found.
[16:22:19] [Render thread/ERROR]: Slab stained_clay_tiles_silver_slab could not be found.
[16:22:19] [Render thread/ERROR]: Slab stained_clay_tiles_lime_slab could not be found.
[16:22:19] [Render thread/ERROR]: Slab stained_clay_tiles_green_slab could not be found.
[16:22:19] [Render thread/ERROR]: Slab stained_clay_tiles_black_slab could not be found.
[16:22:19] [Render thread/ERROR]: Slab stained_clay_tiles_brown_slab could not be found.
[16:22:19] [Render thread/ERROR]: Slab stained_clay_tiles_white_slab could not be found.
[16:22:19] [Render thread/ERROR]: Slab stained_clay_tiles_pink_slab could not be found.
[16:22:19] [Render thread/ERROR]: Slab stained_planks_gray_slab could not be found.
[16:22:19] [Render thread/ERROR]: Slab stained_planks_magenta_slab could not be found.
[16:22:19] [Render thread/ERROR]: Slab stained_planks_cyan_slab could not be found.
[16:22:19] [Render thread/ERROR]: Slab stained_planks_blue_slab could not be found.
[16:22:19] [Render thread/ERROR]: Slab stained_planks_orange_slab could not be found.
[16:22:19] [Render thread/ERROR]: Slab stained_planks_red_slab could not be found.
[16:22:19] [Render thread/ERROR]: Slab stained_planks_yellow_slab could not be found.
[16:22:19] [Render thread/ERROR]: Slab stained_planks_light_blue_slab could not be found.
[16:22:19] [Render thread/ERROR]: Slab stained_planks_purple_slab could not be found.
[16:22:19] [Render thread/ERROR]: Slab stained_planks_silver_slab could not be found.
[16:22:19] [Render thread/ERROR]: Slab stained_planks_lime_slab could not be found.
[16:22:19] [Render thread/ERROR]: Slab stained_planks_green_slab could not be found.
[16:22:19] [Render thread/ERROR]: Slab stained_planks_black_slab could not be found.
[16:22:19] [Render thread/ERROR]: Slab stained_planks_brown_slab could not be found.
[16:22:19] [Render thread/ERROR]: Slab stained_planks_white_slab could not be found.
[16:22:19] [Render thread/ERROR]: Slab stained_planks_pink_slab could not be found.
[16:22:19] [Render thread/ERROR]: Slab reed_block_slab could not be found.
[16:22:19] [Render thread/ERROR]: Slab thatch_slab_double could not be found.
[16:22:19] [Render thread/ERROR]: Slab icy_stone_slab could not be found.
[16:22:19] [Render thread/ERROR]: Slab fire_stone_slab could not be found.
[16:22:19] [Render thread/ERROR]: Slab stone_limestone_slab could not be found.
[16:22:19] [Render thread/ERROR]: Slab stone_marble_slab could not be found.
[16:22:19] [Render thread/ERROR]: Slab duskbound_block_slab_double could not be found.
[16:22:19] [Render thread/ERROR]: Slab magma_bricks_slab could not be found.
[16:22:19] [Render thread/ERROR]: Slab midori_block_slab_double could not be found.
[16:22:19] [Render thread/ERROR]: Slab iron_plate_slab_double could not be found.
[16:22:19] [Render thread/ERROR]: Slab polished_netherrack_bricks_slab could not be found.
[16:22:19] [Render thread/ERROR]: Slab soul_sandstone_slab_double could not be found.
[16:22:19] [Render thread/ERROR]: Slab soul_sandstone_bricks_slab_double could not be found.
[16:22:19] [Render thread/ERROR]: Slab soul_sandstone_smooth_slab could not be found.
[16:22:19] [Render thread/ERROR]: Slab bark_oak_slab could not be found.
[16:22:19] [Render thread/ERROR]: Slab bark_spruce_slab could not be found.
[16:22:19] [Render thread/ERROR]: Slab bark_birch_slab could not be found.
[16:22:19] [Render thread/ERROR]: Slab bark_jungle_slab could not be found.
[16:22:19] [Render thread/ERROR]: Slab bark_acacia_slab could not be found.
[16:22:19] [Render thread/ERROR]: Slab bark_dark_oak_slab could not be found.
[16:22:20] [Render thread/INFO]: Reloading trait files
[16:22:20] [Render thread/INFO]: Registered 74 traits
[16:22:20] [Render thread/INFO]: Reloading part files
[16:22:20] [Render thread/INFO]: Registered 44 parts
[16:22:20] [Render thread/INFO]: Reloading material files
[16:22:20] [Render thread/WARN]: Material 'silentgear:high_carbon_steel' has no model in the data file. This may be an outdated data pack or mod.
[16:22:20] [Render thread/INFO]: Skipped loading 18 material(s), as their conditions were not met. This is usually NOT an error!
[16:22:20] [Render thread/INFO]: Skipped materials: silentgear:aluminum_steel, silentgear:bismuth, silentgear:bismuth_brass, silentgear:bismuth_steel, silentgear:bronze, silentgear:compressed_iron, silentgear:enderium, silentgear:invar, silentgear:lumium, silentgear:osmium, silentgear:platinum, silentgear:redstone_alloy, silentgear:refined_glowstone, silentgear:refined_iron, silentgear:refined_obsidian, silentgear:signalum, silentgear:tin, silentgear:titanium
[16:22:20] [Render thread/INFO]: Loading data...
[16:22:21] [Render thread/INFO]: Done.
[16:22:21] [Render thread/INFO]: Finished recipe profiler for Arc Recycling, took 298 milliseconds
[16:22:21] [Render thread/INFO]: Beginning load of custom recipes for colony workers
[16:22:21] [Render thread/INFO]: Loaded 122 recipes for 13 crafters
[16:22:21] [Render thread/INFO]: Beginning load of research for University.
[16:22:21] [Render thread/INFO]: Loaded 184 recipes for 4 research branches
[16:22:21] [Render thread/INFO]: Loaded 13 normal and 13 rare Wandering Trader trade options.
[16:22:21] [Render thread/INFO]: Loaded cucumber-tags.json in 0 ms
[16:22:21] [Render thread/INFO]: Recipes for potions: ars_nouveau:mana_regen_potion, ars_nouveau:spell_damage_strong, ars_nouveau:mana_regen_potion_long, apotheosis:absorption, ars_nouveau:spell_damage, alexsmobs:soulsteal, minecraft:strong_swiftness, apotheosis:strong_absorption, alexsmobs:strong_knockback_resistance, minecraft:long_leaping, minecraft:regeneration, minecraft:strength, minecraft:strong_turtle_master, minecraft:strong_harming, minecraft:strong_slowness, minecraft:long_strength, alexsmobs:lava_vision, alexsmobs:long_lava_vision, alexsmobs:bug_pheromones, minecraft:harming, cyclic:strong_haste, minecraft:poison, alexsmobs:long_bug_pheromones, ars_nouveau:spell_damage_long, apotheosis:knowledge, minecraft:slowness, cyclic:haste, minecraft:healing, apotheosis:haste, cyclic:blind, minecraft:long_invisibility, alexsmobs:strong_soulsteal, cyclic:wither, minecraft:long_slow_falling, cyclic:swimspeed, apotheosis:long_haste, minecraft:turtle_master, apotheosis:strong_sundering, minecraft:mundane, alexsmobs:long_knockback_resistance, apotheosis:strong_haste, apotheosis:strong_fatigue, minecraft:strong_strength, cyclic:strong_hunger, minecraft:long_regeneration, minecraft:night_vision, alexsmobs:long_poison_resistance, apotheosis:long_fatigue, minecraft:strong_poison, minecraft:long_swiftness, minecraft:long_water_breathing, cyclic:levitation, minecraft:swiftness, apotheosis:long_wither, apotheosis:long_knowledge, apotheosis:wither, apotheosis:long_resistance, alexsmobs:long_soulsteal, minecraft:long_weakness, minecraft:long_slowness, minecraft:strong_regeneration, alexsmobs:knockback_resistance, alexsmobs:poison_resistance, apotheosis:fatigue, minecraft:long_fire_resistance, minecraft:long_turtle_master, minecraft:luck, apotheosis:long_absorption, cyclic:hunger, minecraft:strong_leaping, apotheosis:strong_wither, minecraft:weakness, apotheosis:strong_resistance, quark:strong_resilience, cyclic:stun, minecraft:strong_healing, cyclic:resistance, minecraft:long_night_vision, minecraft:leaping, alexsmobs:long_clinging, minecraft:slow_falling, minecraft:water, minecraft:fire_resistance, apotheosis:long_sundering, ars_nouveau:mana_regen_potion_strong, apotheosis:strong_knowledge, apotheosis:sundering, alexsmobs:clinging, quark:long_resilience, quark:resilience, minecraft:long_poison, minecraft:invisibility, alexsmobs:speed_iii, minecraft:awkward, minecraft:water_breathing, apotheosis:resistance
[16:22:23] [Render thread/INFO]: Loading world-gen registry content from data
[16:22:26] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:22:27] [Render thread/INFO]: Injecting existing registry data into this CLIENT instance
[16:22:36] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:22:46] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:22:48] [Render thread/INFO]: Tags Loaded
[16:22:48] [Render thread/INFO]: Environment: authHost='https://authserver.mojang.com', accountsHost='https://api.mojang.com', sessionHost='https://sessionserver.mojang.com', servicesHost='https://api.minecraftservices.com', name='PROD'
[16:22:48] [Server thread/INFO]: Starting integrated minecraft server version 1.18.1
[16:22:48] [Server thread/INFO]: Generating keypair
[16:22:49] [Server thread/INFO]: Loading server config for easymagic
[16:22:49] [Server thread/INFO]: Loading JourneyMap Forge Configs
[16:22:49] [Server thread/INFO]: Loading "Magical Torches" Server Config
[16:22:49] [Server thread/INFO]: [spawn_blockers, alone_torch_range] = 64
[16:22:49] [Server thread/INFO]: [spawn_blockers, bat_torch_range] = 64
[16:22:49] [Server thread/INFO]: [spawn_blockers, hostile, small_torch_range] = 16
[16:22:49] [Server thread/INFO]: [spawn_blockers, hostile, medium_torch_range] = 32
[16:22:49] [Server thread/INFO]: [spawn_blockers, hostile, grand_torch_range] = 64
[16:22:49] [Server thread/INFO]: [spawn_blockers, hostile, mega_torch_range] = 128
[16:22:49] [Server thread/INFO]: [spawn_blockers, hostile, blocked_entities] = [minecraft:blaze, minecraft:cave_spider, minecraft:creeper, minecraft:drowned, minecraft:elder_guardian, minecraft:ender_dragon, minecraft:enderman, minecraft:endermite, minecraft:evoker, minecraft:ghast, minecraft:giant, minecraft:guardian, minecraft:hoglin, minecraft:husk, minecraft:illusioner, minecraft:magma_cube, minecraft:phantom, minecraft:piglin, minecraft:piglin_brute, minecraft:pillager, minecraft:ravager, minecraft:shulker, minecraft:silverfish, minecraft:skeleton, minecraft:slime, minecraft:spider, minecraft:stray, minecraft:vex, minecraft:vindicator, minecraft:witch, minecraft:wither, minecraft:wither_skeleton, minecraft:zoglin, minecraft:zombie, minecraft:zombie_villager, minecraft:zombified_piglin]
[16:22:49] [Server thread/INFO]: [sound_mufflers, sound_muffling_torch_range] = 64
[16:22:49] [Server thread/INFO]: [sound_mufflers, sound_muffling_torch_to_muffle_sounds] = [HOSTILE, NEUTRAL, BLOCKS, RECORDS]
[16:22:49] [Server thread/INFO]: [chicken_egg_torch, range] = 16
[16:22:49] [Server thread/INFO]: [chicken_egg_torch, should_invert_chicken_egg_blocking] = false
[16:22:49] [Server thread/INFO]: "Magical Torches" Server Config loaded
[16:22:49] [Server thread/INFO]: Loaded FTB Teams - 1 known players
[16:22:51] [Server thread/INFO]: Tags Loaded
[16:22:51] [Server thread/INFO]: Loading Teams Data
[16:22:51] [Server thread/INFO]: Finished Loading Teams Data
[16:22:51] [Server thread/INFO]: Generating in dimension: minecraft:overworld
[16:22:51] [Server thread/INFO]: Dungeons generate in the following biomes of minecraft:overworld : biomesoplenty:tundra biomesoplenty:shrubland minecraft:savanna minecraft:birch_forest biomesoplenty:coniferous_forest biomesoplenty:forested_field biomesoplenty:lush_desert minecraft:frozen_peaks biomesoplenty:prairie minecraft:old_growth_spruce_taiga biomesoplenty:rainforest_cliffs minecraft:snowy_taiga minecraft:windswept_gravelly_hills biomesoplenty:bamboo_grove biomesoplenty:grassland biomesoplenty:highland minecraft:meadow minecraft:sunflower_plains biomesoplenty:mystic_grove biomesoplenty:snowy_fir_clearing biomesoplenty:pasture minecraft:snowy_plains biomesoplenty:lush_savanna minecraft:swamp minecraft:dark_forest minecraft:windswept_forest biomesoplenty:highland_moor minecraft:stony_peaks minecraft:windswept_savanna minecraft:ice_spikes biomesoplenty:old_growth_woodland biomesoplenty:old_growth_dead_forest biomesoplenty:rainbow_hills biomesoplenty:fir_clearing biomesoplenty:boreal_forest minecraft:badlands minecraft:snowy_slopes minecraft:plains biomesoplenty:maple_woods minecraft:wooded_badlands minecraft:bamboo_jungle biomesoplenty:ominous_woods biomesoplenty:rainforest biomesoplenty:jade_cliffs biomesoplenty:bayou biomesoplenty:clover_patch biomesoplenty:floodplain minecraft:jagged_peaks biomesoplenty:seasonal_forest biomesoplenty:lavender_forest biomesoplenty:orchard biomesoplenty:rocky_shrubland biomesoplenty:mediterranean_lakes minecraft:eroded_badlands minecraft:sparse_jungle biomesoplenty:cherry_blossom_grove biomesoplenty:bog biomesoplenty:dead_forest biomesoplenty:redwood_forest biomesoplenty:fungal_jungle minecraft:old_growth_birch_forest biomesoplenty:scrubland biomesoplenty:muskeg biomesoplenty:pumpkin_patch biomesoplenty:snowy_coniferous_forest minecraft:flower_forest biomesoplenty:lavender_field biomesoplenty:field biomesoplenty:cold_desert biomesoplenty:dryland biomesoplenty:snowy_maple_woods minecraft:jungle minecraft:savanna_plateau minecraft:windswept_hills biomesoplenty:wasteland minecraft:desert biomesoplenty:crag biomesoplenty:wooded_scrubland biomesoplenty:woodland terraforged:oak_forest minecraft:old_growth_pine_taiga minecraft:forest minecraft:grove biomesoplenty:marsh minecraft:taiga biomesoplenty:wooded_wasteland biomesoplenty:mediterranean_forest biomesoplenty:wetland mahoutsukai:marble 
[16:22:51] [Server thread/ERROR]: Was unable to check if minecraft:overworld is using Terraforged's ChunkGenerator.
[16:22:51] [Server thread/INFO]: Tags Loaded
[16:22:51] [Server thread/ERROR]: Was unable to check if minecraft:the_nether is using Terraforged's ChunkGenerator.
[16:22:51] [Server thread/INFO]: Tags Loaded
[16:22:51] [Server thread/ERROR]: Was unable to check if minecraft:the_end is using Terraforged's ChunkGenerator.
[16:22:51] [Server thread/INFO]: Tags Loaded
[16:22:52] [Server thread/ERROR]: Was unable to check if mahoutsukai:reality_marble is using Terraforged's ChunkGenerator.
[16:22:52] [Server thread/INFO]: Tags Loaded
[16:22:52] [Server thread/ERROR]: Was unable to check if dimdungeons:dungeon_dimension is using Terraforged's ChunkGenerator.
[16:22:52] [Server thread/INFO]: Preparing start region for dimension minecraft:overworld
[16:22:53] [Render thread/INFO]: Preparing spawn area: 0%
[16:22:53] [Render thread/INFO]: Preparing spawn area: 0%
[16:22:53] [Render thread/INFO]: Preparing spawn area: 0%
[16:22:53] [Render thread/INFO]: Preparing spawn area: 0%
[16:22:54] [Render thread/INFO]: Preparing spawn area: 0%
[16:22:59] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:22:59] [Thread-0/WARN]: Updated logging config. RS Debug logging enabled: false
[16:22:59] [Thread-0/INFO]: Reloading server config for easymagic
[16:22:59] [Thread-0/INFO]: Loading "Magical Torches" Server Config
[16:22:59] [Thread-0/INFO]: [spawn_blockers, alone_torch_range] = 64
[16:22:59] [Thread-0/INFO]: [spawn_blockers, bat_torch_range] = 64
[16:22:59] [Thread-0/INFO]: [spawn_blockers, hostile, small_torch_range] = 16
[16:22:59] [Thread-0/INFO]: [spawn_blockers, hostile, medium_torch_range] = 32
[16:22:59] [Thread-0/INFO]: [spawn_blockers, hostile, grand_torch_range] = 64
[16:22:59] [Thread-0/INFO]: [spawn_blockers, hostile, mega_torch_range] = 128
[16:22:59] [Thread-0/INFO]: [spawn_blockers, hostile, blocked_entities] = [minecraft:blaze, minecraft:cave_spider, minecraft:creeper, minecraft:drowned, minecraft:elder_guardian, minecraft:ender_dragon, minecraft:enderman, minecraft:endermite, minecraft:evoker, minecraft:ghast, minecraft:giant, minecraft:guardian, minecraft:hoglin, minecraft:husk, minecraft:illusioner, minecraft:magma_cube, minecraft:phantom, minecraft:piglin, minecraft:piglin_brute, minecraft:pillager, minecraft:ravager, minecraft:shulker, minecraft:silverfish, minecraft:skeleton, minecraft:slime, minecraft:spider, minecraft:stray, minecraft:vex, minecraft:vindicator, minecraft:witch, minecraft:wither, minecraft:wither_skeleton, minecraft:zoglin, minecraft:zombie, minecraft:zombie_villager, minecraft:zombified_piglin]
[16:22:59] [Thread-0/INFO]: [sound_mufflers, sound_muffling_torch_range] = 64
[16:22:59] [Thread-0/INFO]: [sound_mufflers, sound_muffling_torch_to_muffle_sounds] = [HOSTILE, NEUTRAL, BLOCKS, RECORDS]
[16:22:59] [Thread-0/INFO]: [chicken_egg_torch, range] = 16
[16:22:59] [Thread-0/INFO]: [chicken_egg_torch, should_invert_chicken_egg_blocking] = false
[16:22:59] [Thread-0/INFO]: "Magical Torches" Server Config loaded
[16:22:59] [Thread-0/INFO]: Loading JourneyMap Forge Configs
[16:23:00] [Render thread/INFO]: Preparing spawn area: 0%
[16:23:00] [Render thread/INFO]: Preparing spawn area: 0%
[16:23:00] [Render thread/INFO]: Preparing spawn area: 0%
[16:23:00] [Render thread/INFO]: Preparing spawn area: 0%
[16:23:00] [Render thread/INFO]: Preparing spawn area: 0%
[16:23:00] [Render thread/INFO]: Preparing spawn area: 0%
[16:23:00] [Render thread/INFO]: Preparing spawn area: 0%
[16:23:00] [Render thread/INFO]: Preparing spawn area: 0%
[16:23:00] [Render thread/INFO]: Preparing spawn area: 0%
[16:23:00] [Render thread/INFO]: Preparing spawn area: 0%
[16:23:00] [Render thread/INFO]: Preparing spawn area: 0%
[16:23:00] [Render thread/INFO]: Preparing spawn area: 0%
[16:23:07] [Render thread/INFO]: Preparing spawn area: 0%
[16:23:07] [Render thread/INFO]: Preparing spawn area: 0%
[16:23:07] [Render thread/INFO]: Preparing spawn area: 0%
[16:23:07] [Render thread/INFO]: Preparing spawn area: 0%
[16:23:07] [Render thread/INFO]: Preparing spawn area: 0%
[16:23:07] [Render thread/INFO]: Preparing spawn area: 0%
[16:23:07] [Render thread/INFO]: Preparing spawn area: 0%
[16:23:07] [Render thread/INFO]: Preparing spawn area: 0%
[16:23:07] [Render thread/INFO]: Preparing spawn area: 0%
[16:23:07] [Render thread/INFO]: Preparing spawn area: 0%
[16:23:07] [Render thread/INFO]: Preparing spawn area: 0%
[16:23:07] [Render thread/INFO]: Preparing spawn area: 0%
[16:23:07] [Render thread/INFO]: Preparing spawn area: 0%
[16:23:07] [Render thread/INFO]: Preparing spawn area: 0%
[16:23:07] [Render thread/INFO]: Preparing spawn area: 0%
[16:23:08] [Render thread/INFO]: Preparing spawn area: 0%
[16:23:08] [Render thread/INFO]: Preparing spawn area: 14%
[16:23:09] [Render thread/INFO]: Preparing spawn area: 25%
[16:23:09] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:23:09] [Render thread/INFO]: Preparing spawn area: 26%
[16:23:10] [Render thread/INFO]: Preparing spawn area: 42%
[16:23:10] [Render thread/INFO]: Preparing spawn area: 54%
[16:23:11] [Render thread/INFO]: Preparing spawn area: 70%
[16:23:11] [Render thread/INFO]: Preparing spawn area: 72%
[16:23:13] [Render thread/INFO]: Preparing spawn area: 83%
[16:23:13] [Render thread/INFO]: Preparing spawn area: 83%
[16:23:13] [Render thread/INFO]: Preparing spawn area: 85%
[16:23:13] [Render thread/INFO]: Preparing spawn area: 90%
[16:23:14] [Render thread/INFO]: Time elapsed: 21784 ms
[16:23:14] [Server thread/INFO]: Successfully initialized permission handler forge:default_handler
[16:23:14] [Server thread/WARN]: defineId called for: class net.minecraft.world.entity.TamableAnimal from interface com.hollingsworth.arsnouveau.common.entity.IFollowingSummon
[16:23:14] [Server thread/INFO]: Loading quests from /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/ftbquests/quests
[16:23:15] [Server thread/INFO]: Loaded 1 chapter groups, 3 chapters, 24 quests, 0 reward tables
[16:23:15] [Server thread/INFO]: Loading EnderTank Data
[16:23:15] [Server thread/INFO]: Finished Loading EnderTank Data
[16:23:15] [Server thread/INFO]: Traits loaded: 74
[16:23:15] [Server thread/INFO]: Parts loaded: 44
[16:23:15] [Server thread/INFO]: - Compound: 40
[16:23:15] [Server thread/INFO]: - Simple: 4
[16:23:15] [Server thread/INFO]: Materials loaded: 126
[16:23:15] [Server thread/INFO]: - Standard: 120
[16:23:15] [Server thread/INFO]: Loading EnderChest Data
[16:23:15] [Server thread/INFO]: Finished Loading EnderChest Data
[16:23:15] [Server thread/INFO]: Trying jar discover: assets/structurize
[16:23:15] [Server thread/INFO]: Trying jar discover: assets/minecolonies
[16:23:16] [Server thread/INFO]: Load additional huts or decorations from /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/structurize/schematics
[16:23:16] [Server thread/INFO]: Load cached schematic from /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/structurize/cache
[16:23:16] [Server thread/INFO]: Load cached schematic from /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/structurize/cache
[16:23:16] [Server thread/INFO]: Finished discovering saplings 63
[16:23:16] [Server thread/INFO]: Finished discovering Ores 109 106
[16:23:16] [Server thread/INFO]: Finished discovering plantables 19
[16:23:16] [Server thread/INFO]: Finished discovering food 413 455
[16:23:16] [Server thread/INFO]: Finished discovering fuel 822
[16:23:16] [Server thread/INFO]: Finished discovering compostables 865
[16:23:16] [Server thread/INFO]: Finished discovering lucky oreBlocks 127
[16:23:16] [Server thread/INFO]: Finished discovering recruitment costs
[16:23:16] [Server thread/INFO]: Finished discovering diseases
[16:23:16] [Server thread/WARN]: Unhandled modifier in loot table: minecraft:set_potion
[16:23:16] [Server thread/WARN]: Unhandled modifier in loot table: tombstone:delayed_nbt_loot
[16:23:16] [Server thread/WARN]: Unhandled modifier in loot table: tombstone:delayed_nbt_loot
[16:23:16] [Server thread/WARN]: Unhandled modifier in loot table: tombstone:delayed_nbt_loot
[16:23:16] [Server thread/WARN]: Unhandled modifier in loot table: tombstone:delayed_nbt_loot
[16:23:16] [Server thread/INFO]: Sending reload packet to clients
[16:23:17] [Server thread/INFO]: Changing view distance to 12, from 10
[16:23:17] [Server thread/INFO]: Changing simulation distance to 12, from 0
[16:23:18] [Netty Local Client IO #0/INFO]: Received 219 soul info objects from server
[16:23:18] [Netty Local Client IO #0/INFO]: Read 74 traits from server
[16:23:19] [Netty Local Client IO #0/INFO]: Read 44 parts from server
[16:23:19] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:23:19] [Server thread/WARN]: Can't keep up! Is the server overloaded? Running 2215ms or 44 ticks behind
[16:23:19] [Netty Local Client IO #0/INFO]: Read 126 materials from server
[16:23:22] [Netty Local Client IO #0/INFO]: Connected to a modded server.
[16:23:22] [Netty Local Client IO #0/ERROR]: Error adding element: Value must be positive: 0
[16:23:22] [Netty Local Client IO #0/ERROR]: Error adding element: Value must be positive: 0
[16:23:22] [Netty Local Client IO #0/ERROR]: Error adding element: Value must be positive: 0
[16:23:22] [Netty Local Client IO #0/ERROR]: Error adding element: Value must be positive: 0
[16:23:22] [Netty Local Client IO #0/ERROR]: Error adding element: Value must be positive: 0
[16:23:22] [Netty Local Client IO #0/ERROR]: Error adding element: Value must be positive: 0
[16:23:22] [Netty Local Client IO #0/ERROR]: Error adding element: Value must be positive: 0
[16:23:22] [Netty Local Client IO #0/ERROR]: Error adding element: Value must be positive: 0
[16:23:22] [Netty Local Client IO #0/ERROR]: Error adding element: Value must be positive: 0
[16:23:22] [Netty Local Client IO #0/ERROR]: Error adding element: Value must be positive: 0
[16:23:22] [Netty Local Client IO #0/ERROR]: Error adding element: Value must be positive: 0
[16:23:22] [Netty Local Client IO #0/ERROR]: Error adding element: Value must be positive: 0
[16:23:22] [Netty Local Client IO #0/ERROR]: Error adding element: Value must be positive: 0
[16:23:22] [Netty Local Client IO #0/ERROR]: Error adding element: Value must be positive: 0
[16:23:22] [Netty Local Client IO #0/ERROR]: Error adding element: Value must be positive: 0
[16:23:22] [Netty Local Client IO #0/ERROR]: Error adding element: Value must be positive: 0
[16:23:22] [Netty Local Client IO #0/ERROR]: Error adding element: Value must be positive: 0
[16:23:22] [Netty Local Client IO #0/ERROR]: Error adding element: Value must be positive: 0
[16:23:22] [Netty Local Client IO #0/ERROR]: Error adding element: Value must be positive: 0
[16:23:22] [Netty Local Client IO #0/ERROR]: Error adding element: Value must be positive: 0
[16:23:22] [Netty Local Client IO #0/ERROR]: Error adding element: Value must be positive: 0
[16:23:22] [Netty Local Client IO #0/ERROR]: Error adding element: Value must be positive: 0
[16:23:22] [Netty Local Client IO #0/ERROR]: Error adding element: Value must be positive: 0
[16:23:22] [Netty Local Client IO #0/ERROR]: Error adding element: Value must be positive: 0
[16:23:22] [Netty Local Client IO #0/ERROR]: Error adding element: Value must be positive: 0
[16:23:22] [Netty Local Client IO #0/ERROR]: Error adding element: Value must be positive: 0
[16:23:22] [Netty Local Client IO #0/ERROR]: Error adding element: Value must be positive: 0
[16:23:22] [Netty Local Client IO #0/ERROR]: Error adding element: Value must be positive: 0
[16:23:22] [Netty Local Client IO #0/ERROR]: Error adding element: Value 10 outside of range [0:7]
[16:23:22] [Netty Local Client IO #0/INFO]: Injecting world-gen registry defaults
[16:23:22] [Server thread/INFO]: Using new advancement loading for net.minecraft.server.PlayerAdvancements@6b324914
[16:23:22] [Server thread/ERROR]: Tried to load unrecognized recipe: mysticalagriculture:villager_seeds_infusion removed now.
[16:23:22] [Server thread/ERROR]: Tried to load unrecognized recipe: mysticalagriculture:vex_seeds_infusion removed now.
[16:23:22] [Server thread/ERROR]: Tried to load unrecognized recipe: mysticalagriculture:magma_cube_seeds_infusion removed now.
[16:23:22] [Server thread/ERROR]: Tried to load unrecognized recipe: mysticalagriculture:horse_seeds_infusion removed now.
[16:23:22] [Server thread/ERROR]: Tried to load unrecognized recipe: mysticalagriculture:classic_set_seeds_infusion removed now.
[16:23:22] [Server thread/ERROR]: Tried to load unrecognized recipe: mysticalagriculture:stray_seeds_reprocessor removed now.
[16:23:22] [Server thread/ERROR]: Tried to load unrecognized recipe: mysticalagriculture:panda_seeds_reprocessor removed now.
[16:23:22] [Server thread/ERROR]: Tried to load unrecognized recipe: mysticalagriculture:endermite_seeds_reprocessor removed now.
[16:23:22] [Server thread/ERROR]: Tried to load unrecognized recipe: mysticalagriculture:polar_bear_seeds_infusion removed now.
[16:23:22] [Server thread/ERROR]: Tried to load unrecognized recipe: mysticalagriculture:husk_seeds_infusion removed now.
[16:23:22] [Server thread/ERROR]: Tried to load unrecognized recipe: mysticalagriculture:evoker_seeds_infusion removed now.
[16:23:22] [Server thread/ERROR]: Tried to load unrecognized recipe: wstweaks:wither_skeleton_skull removed now.
[16:23:22] [Server thread/ERROR]: Tried to load unrecognized recipe: mysticalagriculture:ravager_seeds_reprocessor removed now.
[16:23:22] [Server thread/ERROR]: Tried to load unrecognized recipe: mysticalagriculture:fox_seeds_reprocessor removed now.
[16:23:22] [Server thread/ERROR]: Tried to load unrecognized recipe: mysticalagriculture:fox_seeds_infusion removed now.
[16:23:22] [Server thread/ERROR]: Tried to load unrecognized recipe: wstweaks:blaze_blade removed now.
[16:23:22] [Server thread/ERROR]: Tried to load unrecognized recipe: mysticalagriculture:endermite_seeds_infusion removed now.
[16:23:22] [Server thread/ERROR]: Tried to load unrecognized recipe: mysticalagriculture:ravager_seeds_infusion removed now.
[16:23:22] [Server thread/ERROR]: Tried to load unrecognized recipe: mysticalagriculture:bat_seeds_reprocessor removed now.
[16:23:22] [Server thread/ERROR]: Tried to load unrecognized recipe: mysticalagriculture:shulker_seeds_reprocessor removed now.
[16:23:22] [Server thread/ERROR]: Tried to load unrecognized recipe: apotheosis:enchanted_golden_apple removed now.
[16:23:22] [Server thread/ERROR]: Tried to load unrecognized recipe: mysticalagriculture:drowned_seeds_infusion removed now.
[16:23:22] [Server thread/ERROR]: Tried to load unrecognized recipe: wstweaks:lava_blade removed now.
[16:23:22] [Server thread/ERROR]: Tried to load unrecognized recipe: mysticalagriculture:cat_seeds_infusion removed now.
[16:23:22] [Server thread/ERROR]: Tried to load unrecognized recipe: mysticalagriculture:classic_set_seeds_reprocessor removed now.
[16:23:22] [Server thread/ERROR]: Tried to load unrecognized recipe: mysticalagriculture:vindicator_seeds_infusion removed now.
[16:23:22] [Server thread/ERROR]: Tried to load unrecognized recipe: mysticalagriculture:silverfish_seeds_infusion removed now.
[16:23:22] [Server thread/ERROR]: Tried to load unrecognized recipe: mysticalagriculture:zombified_piglin_seeds_reprocessor removed now.
[16:23:22] [Server thread/ERROR]: Tried to load unrecognized recipe: mysticalagriculture:witch_seeds_infusion removed now.
[16:23:22] [Server thread/ERROR]: Tried to load unrecognized recipe: mysticalagriculture:dolphin_seeds_infusion removed now.
[16:23:22] [Server thread/ERROR]: Tried to load unrecognized recipe: mysticalagriculture:parrot_seeds_reprocessor removed now.
[16:23:22] [Server thread/ERROR]: Tried to load unrecognized recipe: mysticalagriculture:wolf_seeds_reprocessor removed now.
[16:23:22] [Server thread/ERROR]: Tried to load unrecognized recipe: mysticalagriculture:piglin_brute_seeds_reprocessor removed now.
[16:23:22] [Server thread/ERROR]: Tried to load unrecognized recipe: mysticalagriculture:piglin_brute_seeds_infusion removed now.
[16:23:22] [Server thread/ERROR]: Tried to load unrecognized recipe: mysticalagriculture:pillager_seeds_infusion removed now.
[16:23:22] [Server thread/ERROR]: Tried to load unrecognized recipe: mysticalagriculture:silverfish_seeds_reprocessor removed now.
[16:23:22] [Server thread/ERROR]: Tried to load unrecognized recipe: mysticalagriculture:piglin_seeds_infusion removed now.
[16:23:22] [Server thread/ERROR]: Tried to load unrecognized recipe: mysticalagriculture:cat_seeds_reprocessor removed now.
[16:23:22] [Server thread/ERROR]: Tried to load unrecognized recipe: mysticalagriculture:polar_bear_seeds_reprocessor removed now.
[16:23:22] [Server thread/ERROR]: Tried to load unrecognized recipe: mysticalagriculture:wolf_seeds_infusion removed now.
[16:23:22] [Server thread/ERROR]: Tried to load unrecognized recipe: mysticalagriculture:piglin_seeds_reprocessor removed now.
[16:23:22] [Server thread/ERROR]: Tried to load unrecognized recipe: mysticalagriculture:dolphin_seeds_reprocessor removed now.
[16:23:22] [Server thread/ERROR]: Tried to load unrecognized recipe: mysticalagriculture:shulker_seeds_infusion removed now.
[16:23:22] [Server thread/ERROR]: Tried to load unrecognized recipe: mysticalagriculture:vindicator_seeds_reprocessor removed now.
[16:23:22] [Server thread/ERROR]: Tried to load unrecognized recipe: mysticalagriculture:villager_seeds_reprocessor removed now.
[16:23:22] [Server thread/ERROR]: Tried to load unrecognized recipe: mysticalagriculture:phantom_seeds_reprocessor removed now.
[16:23:22] [Server thread/ERROR]: Tried to load unrecognized recipe: mysticalagriculture:horse_seeds_reprocessor removed now.
[16:23:22] [Server thread/ERROR]: Tried to load unrecognized recipe: mysticalagriculture:mooshroom_seeds_infusion removed now.
[16:23:22] [Server thread/ERROR]: Tried to load unrecognized recipe: mysticalagriculture:evoker_seeds_reprocessor removed now.
[16:23:22] [Server thread/ERROR]: Tried to load unrecognized recipe: apotheosis:ender_lead removed now.
[16:23:22] [Server thread/ERROR]: Tried to load unrecognized recipe: mysticalagriculture:llama_seeds_reprocessor removed now.
[16:23:22] [Server thread/ERROR]: Tried to load unrecognized recipe: mysticalagriculture:drowned_seeds_reprocessor removed now.
[16:23:22] [Server thread/ERROR]: Tried to load unrecognized recipe: mysticalagriculture:guardian_seeds_infusion removed now.
[16:23:22] [Server thread/ERROR]: Tried to load unrecognized recipe: mysticalagriculture:husk_seeds_reprocessor removed now.
[16:23:22] [Server thread/ERROR]: Tried to load unrecognized recipe: mysticalagriculture:vex_seeds_reprocessor removed now.
[16:23:22] [Server thread/ERROR]: Tried to load unrecognized recipe: mysticalagriculture:stray_seeds_infusion removed now.
[16:23:22] [Server thread/ERROR]: Tried to load unrecognized recipe: mysticalagriculture:witch_seeds_reprocessor removed now.
[16:23:22] [Server thread/ERROR]: Tried to load unrecognized recipe: mysticalagriculture:mooshroom_seeds_reprocessor removed now.
[16:23:22] [Server thread/ERROR]: Tried to load unrecognized recipe: mysticalagriculture:guardian_seeds_reprocessor removed now.
[16:23:22] [Server thread/ERROR]: Tried to load unrecognized recipe: mysticalagriculture:llama_seeds_infusion removed now.
[16:23:22] [Server thread/ERROR]: Tried to load unrecognized recipe: mysticalagriculture:phantom_seeds_infusion removed now.
[16:23:22] [Server thread/ERROR]: Tried to load unrecognized recipe: mysticalagriculture:zombified_piglin_seeds_infusion removed now.
[16:23:22] [Server thread/ERROR]: Tried to load unrecognized recipe: mysticalagriculture:magma_cube_seeds_reprocessor removed now.
[16:23:22] [Server thread/ERROR]: Tried to load unrecognized recipe: mysticalagriculture:panda_seeds_infusion removed now.
[16:23:22] [Server thread/ERROR]: Tried to load unrecognized recipe: mysticalagriculture:parrot_seeds_infusion removed now.
[16:23:22] [Server thread/ERROR]: Tried to load unrecognized recipe: mysticalagriculture:bat_seeds_infusion removed now.
[16:23:22] [Server thread/ERROR]: Tried to load unrecognized recipe: mysticalagriculture:pillager_seeds_reprocessor removed now.
[16:23:22] [Server thread/ERROR]: Tried to load unrecognized recipe: mysticalagriculture:villager_seeds_infusion removed now.
[16:23:22] [Server thread/ERROR]: Tried to load unrecognized recipe: mysticalagriculture:vex_seeds_infusion removed now.
[16:23:22] [Server thread/ERROR]: Tried to load unrecognized recipe: mysticalagriculture:magma_cube_seeds_infusion removed now.
[16:23:22] [Server thread/ERROR]: Tried to load unrecognized recipe: mysticalagriculture:horse_seeds_infusion removed now.
[16:23:22] [Server thread/ERROR]: Tried to load unrecognized recipe: mysticalagriculture:classic_set_seeds_infusion removed now.
[16:23:22] [Server thread/ERROR]: Tried to load unrecognized recipe: mysticalagriculture:stray_seeds_reprocessor removed now.
[16:23:22] [Server thread/ERROR]: Tried to load unrecognized recipe: mysticalagriculture:panda_seeds_reprocessor removed now.
[16:23:22] [Server thread/ERROR]: Tried to load unrecognized recipe: mysticalagriculture:endermite_seeds_reprocessor removed now.
[16:23:22] [Server thread/ERROR]: Tried to load unrecognized recipe: mysticalagriculture:polar_bear_seeds_infusion removed now.
[16:23:22] [Server thread/ERROR]: Tried to load unrecognized recipe: mysticalagriculture:husk_seeds_infusion removed now.
[16:23:22] [Server thread/ERROR]: Tried to load unrecognized recipe: mysticalagriculture:evoker_seeds_infusion removed now.
[16:23:22] [Server thread/ERROR]: Tried to load unrecognized recipe: wstweaks:wither_skeleton_skull removed now.
[16:23:22] [Server thread/ERROR]: Tried to load unrecognized recipe: mysticalagriculture:ravager_seeds_reprocessor removed now.
[16:23:22] [Server thread/ERROR]: Tried to load unrecognized recipe: mysticalagriculture:fox_seeds_reprocessor removed now.
[16:23:22] [Server thread/ERROR]: Tried to load unrecognized recipe: mysticalagriculture:fox_seeds_infusion removed now.
[16:23:22] [Server thread/ERROR]: Tried to load unrecognized recipe: wstweaks:blaze_blade removed now.
[16:23:22] [Server thread/ERROR]: Tried to load unrecognized recipe: mysticalagriculture:endermite_seeds_infusion removed now.
[16:23:22] [Server thread/ERROR]: Tried to load unrecognized recipe: mysticalagriculture:ravager_seeds_infusion removed now.
[16:23:22] [Server thread/ERROR]: Tried to load unrecognized recipe: mysticalagriculture:bat_seeds_reprocessor removed now.
[16:23:22] [Server thread/ERROR]: Tried to load unrecognized recipe: mysticalagriculture:shulker_seeds_reprocessor removed now.
[16:23:22] [Server thread/ERROR]: Tried to load unrecognized recipe: apotheosis:enchanted_golden_apple removed now.
[16:23:22] [Server thread/ERROR]: Tried to load unrecognized recipe: mysticalagriculture:drowned_seeds_infusion removed now.
[16:23:22] [Server thread/ERROR]: Tried to load unrecognized recipe: wstweaks:lava_blade removed now.
[16:23:22] [Server thread/ERROR]: Tried to load unrecognized recipe: mysticalagriculture:cat_seeds_infusion removed now.
[16:23:22] [Server thread/ERROR]: Tried to load unrecognized recipe: mysticalagriculture:classic_set_seeds_reprocessor removed now.
[16:23:22] [Server thread/ERROR]: Tried to load unrecognized recipe: mysticalagriculture:vindicator_seeds_infusion removed now.
[16:23:22] [Server thread/ERROR]: Tried to load unrecognized recipe: mysticalagriculture:silverfish_seeds_infusion removed now.
[16:23:22] [Server thread/ERROR]: Tried to load unrecognized recipe: mysticalagriculture:zombified_piglin_seeds_reprocessor removed now.
[16:23:22] [Server thread/ERROR]: Tried to load unrecognized recipe: mysticalagriculture:witch_seeds_infusion removed now.
[16:23:22] [Server thread/ERROR]: Tried to load unrecognized recipe: mysticalagriculture:dolphin_seeds_infusion removed now.
[16:23:22] [Server thread/ERROR]: Tried to load unrecognized recipe: mysticalagriculture:parrot_seeds_reprocessor removed now.
[16:23:22] [Server thread/ERROR]: Tried to load unrecognized recipe: mysticalagriculture:wolf_seeds_reprocessor removed now.
[16:23:22] [Server thread/ERROR]: Tried to load unrecognized recipe: mysticalagriculture:piglin_brute_seeds_reprocessor removed now.
[16:23:22] [Server thread/ERROR]: Tried to load unrecognized recipe: mysticalagriculture:piglin_brute_seeds_infusion removed now.
[16:23:22] [Server thread/ERROR]: Tried to load unrecognized recipe: mysticalagriculture:pillager_seeds_infusion removed now.
[16:23:22] [Server thread/ERROR]: Tried to load unrecognized recipe: mysticalagriculture:silverfish_seeds_reprocessor removed now.
[16:23:22] [Server thread/ERROR]: Tried to load unrecognized recipe: mysticalagriculture:piglin_seeds_infusion removed now.
[16:23:22] [Server thread/ERROR]: Tried to load unrecognized recipe: mysticalagriculture:cat_seeds_reprocessor removed now.
[16:23:22] [Server thread/ERROR]: Tried to load unrecognized recipe: mysticalagriculture:polar_bear_seeds_reprocessor removed now.
[16:23:22] [Server thread/ERROR]: Tried to load unrecognized recipe: mysticalagriculture:wolf_seeds_infusion removed now.
[16:23:22] [Server thread/ERROR]: Tried to load unrecognized recipe: mysticalagriculture:piglin_seeds_reprocessor removed now.
[16:23:22] [Server thread/ERROR]: Tried to load unrecognized recipe: mysticalagriculture:dolphin_seeds_reprocessor removed now.
[16:23:22] [Server thread/ERROR]: Tried to load unrecognized recipe: mysticalagriculture:shulker_seeds_infusion removed now.
[16:23:22] [Server thread/ERROR]: Tried to load unrecognized recipe: mysticalagriculture:vindicator_seeds_reprocessor removed now.
[16:23:22] [Server thread/ERROR]: Tried to load unrecognized recipe: mysticalagriculture:villager_seeds_reprocessor removed now.
[16:23:22] [Server thread/ERROR]: Tried to load unrecognized recipe: mysticalagriculture:phantom_seeds_reprocessor removed now.
[16:23:22] [Server thread/ERROR]: Tried to load unrecognized recipe: mysticalagriculture:horse_seeds_reprocessor removed now.
[16:23:22] [Server thread/ERROR]: Tried to load unrecognized recipe: mysticalagriculture:mooshroom_seeds_infusion removed now.
[16:23:22] [Server thread/ERROR]: Tried to load unrecognized recipe: mysticalagriculture:evoker_seeds_reprocessor removed now.
[16:23:22] [Server thread/ERROR]: Tried to load unrecognized recipe: apotheosis:ender_lead removed now.
[16:23:22] [Server thread/ERROR]: Tried to load unrecognized recipe: mysticalagriculture:llama_seeds_reprocessor removed now.
[16:23:22] [Server thread/ERROR]: Tried to load unrecognized recipe: mysticalagriculture:drowned_seeds_reprocessor removed now.
[16:23:22] [Server thread/ERROR]: Tried to load unrecognized recipe: mysticalagriculture:guardian_seeds_infusion removed now.
[16:23:22] [Server thread/ERROR]: Tried to load unrecognized recipe: mysticalagriculture:husk_seeds_reprocessor removed now.
[16:23:22] [Server thread/ERROR]: Tried to load unrecognized recipe: mysticalagriculture:vex_seeds_reprocessor removed now.
[16:23:22] [Server thread/ERROR]: Tried to load unrecognized recipe: mysticalagriculture:stray_seeds_infusion removed now.
[16:23:22] [Server thread/ERROR]: Tried to load unrecognized recipe: mysticalagriculture:witch_seeds_reprocessor removed now.
[16:23:22] [Server thread/ERROR]: Tried to load unrecognized recipe: mysticalagriculture:mooshroom_seeds_reprocessor removed now.
[16:23:22] [Server thread/ERROR]: Tried to load unrecognized recipe: mysticalagriculture:guardian_seeds_reprocessor removed now.
[16:23:22] [Server thread/ERROR]: Tried to load unrecognized recipe: mysticalagriculture:llama_seeds_infusion removed now.
[16:23:22] [Server thread/ERROR]: Tried to load unrecognized recipe: mysticalagriculture:phantom_seeds_infusion removed now.
[16:23:22] [Server thread/ERROR]: Tried to load unrecognized recipe: mysticalagriculture:zombified_piglin_seeds_infusion removed now.
[16:23:22] [Server thread/ERROR]: Tried to load unrecognized recipe: mysticalagriculture:magma_cube_seeds_reprocessor removed now.
[16:23:22] [Server thread/ERROR]: Tried to load unrecognized recipe: mysticalagriculture:panda_seeds_infusion removed now.
[16:23:22] [Server thread/ERROR]: Tried to load unrecognized recipe: mysticalagriculture:parrot_seeds_infusion removed now.
[16:23:22] [Server thread/ERROR]: Tried to load unrecognized recipe: mysticalagriculture:bat_seeds_infusion removed now.
[16:23:22] [Server thread/ERROR]: Tried to load unrecognized recipe: mysticalagriculture:pillager_seeds_reprocessor removed now.
[16:23:22] [Server thread/INFO]: Keirtain[local:E:97cc4e8e] logged in with entity id 506 at (871.6910785830095, 120.0, -863.3375070293489)
[16:23:23] [Server thread/INFO]: Keirtain joined the game
[16:23:23] [Server thread/INFO]: Sending 9 bag types to Keirtain
[16:23:23] [Netty Local Client IO #0/INFO]: Loading world-gen registry content from data
[16:23:23] [Server thread/INFO]: New Server UUID c4e7d913-6513-44dd-b6de-b640e6227950
[16:23:23] [Render thread/INFO]: Started 4 worker threads
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:solidifier/cyclic:solidifier/solidifier_conc_green
[16:23:24] [Render thread/WARN]: Unknown recipe category: cfm:grill_cooking/minecraft:cooked_cod_from_grill_cooking
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:infusion/mysticalagriculture:seed/infusion/silver
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:infusion/mysticalagriculture:augment/health_boost_i
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:solidifier/cyclic:solidifier/solidifier_xp
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:crusher/cyclic:crusher/concrete_cyan_powder
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:crusher/cyclic:crusher/concrete_light_blue_powder
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:solidifier/cyclic:solidifier/solidifier_coral_bubbleblock
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:solidifier/cyclic:solidifier/solidifier_coral_fire
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:infusion/mysticalagriculture:seed/infusion/electrum
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:crusher/cyclic:crusher/redstone_repeater
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:infusion/mysticalagriculture:augment/jump_boost_ii
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:soul_extraction/mysticalagriculture:souls/gunpowder
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:infusion/industrialagriculture:eggs/minecraft/salmon_egg
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:infusion/mysticalagriculture:polar_bear_seeds_infusion
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:crusher/cyclic:crusher/concrete_green
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:solidifier/cyclic:solidifier/solidifier_magmabrick
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:reprocessor/mysticalagriculture:seed/reprocessor/nether_quartz
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:infusion/mysticalagriculture:augment/mining_aoe_iv
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:infusion/mysticalagriculture:augment/speed_i
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:melter/cyclic:melter/melter_honey
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:crusher/cyclic:crusher/concrete_orange_powder
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:reprocessor/mysticalagriculture:seed/reprocessor/spider
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:solidifier/cyclic:solidifier/solidifier_conc_blue
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:crusher/cyclic:crusher/concrete_lime
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:solidifier/cyclic:solidifier/solidifier_honeypie
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:reprocessor/mysticalagriculture:seed/reprocessor/mithril
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:solidifier/cyclic:solidifier/solidifier_honeyhive
[16:23:24] [Render thread/WARN]: Unknown recipe category: cfm:grill_cooking/minecraft:dried_kelp_from_grill_cooking
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:infusion/mysticalagriculture:seed/infusion/chicken
[16:23:24] [Render thread/WARN]: Unknown recipe category: cfm:grill_cooking/minecraft:baked_potato_from_grill_cooking
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:infusion/mysticalagriculture:seed/infusion/steel
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:infusion/industrialagriculture:eggs/minecraft/rabbit_egg
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:crusher/cyclic:crusher/logs
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:infusion/mysticalagriculture:seed/infusion/uranium
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:crusher/cyclic:crusher/gravel
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:reprocessor/mysticalagriculture:seed/reprocessor/netherite
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:solidifier/cyclic:solidifier/solidifier_conc_lime
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:soul_extraction/mysticalagriculture:souls/egg
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:infusion/industrialagriculture:eggs/minecraft/husk_egg
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:crusher/cyclic:crusher/dye_blue_flower
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:infusion/mysticalagriculture:seed/infusion/water
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:reprocessor/mysticalagriculture:seed/reprocessor/lead
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:crusher/cyclic:crusher/tnt
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:infusion/mysticalagriculture:augment/tilling_aoe_iv
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:infusion/industrialagriculture:eggs/minecraft/wolf_egg
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:generator_item/cyclic:generator/generate_tnt
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:crusher/cyclic:crusher/concrete_light_blue
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:infusion/mysticalagriculture:augment/speed_iii
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:infusion/mysticalagriculture:wolf_seeds_infusion
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:infusion/mysticalagriculture:augment/absorption_i
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:reprocessor/mysticalagriculture:seed/reprocessor/earth
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:infusion/mysticalagriculture:vindicator_seeds_infusion
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:crusher/cyclic:crusher/pork
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:infusion/mysticalagriculture:seed/infusion/nickel
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:reprocessor/mysticalagriculture:seed/reprocessor/aluminum
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:infusion/mysticalagriculture:vex_seeds_infusion
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:reprocessor/mysticalagriculture:stray_seeds_reprocessor
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:solidifier/cyclic:solidifier/solidifier_apple
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:crusher/cyclic:crusher/saplings
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:crusher/cyclic:crusher/beacon
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:infusion/industrialagriculture:eggs/minecraft/spider_egg
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:reprocessor/mysticalagriculture:pillager_seeds_reprocessor
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:solidifier/cyclic:solidifier/solidifier_xpfood
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:reprocessor/mysticalagriculture:silverfish_seeds_reprocessor
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:soul_extraction/mysticalagriculture:souls/ghast_tear
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:infusion/mysticalagriculture:parrot_seeds_infusion
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:crusher/cyclic:crusher/dye_magenta
[16:23:24] [Render thread/WARN]: Unknown recipe category: minecolonies:composting/minecolonies:compostables
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:solidifier/cyclic:solidifier/solidifier_coral_brainblock
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:reprocessor/mysticalagriculture:seed/reprocessor/lapis_lazuli
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:solidifier/cyclic:solidifier/solidifier_coral_horn
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:solidifier/cyclic:solidifier/solidifier_magmabricksl
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:infusion/mysticalagriculture:seed/infusion/fish
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:solidifier/cyclic:solidifier/solidifier_honeynest
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:infusion/mysticalagriculture:phantom_seeds_infusion
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:crusher/cyclic:crusher/dye_magenta_lilac
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:crusher/cyclic:crusher/beef
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:crusher/cyclic:crusher/dirt
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:infusion/mysticalagriculture:augment/tilling_aoe_iii
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:reprocessor/mysticalagriculture:seed/reprocessor/pig
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:infusion/mysticalagriculture:augment/attack_aoe_i
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:infusion/industrialagriculture:eggs/minecraft/cave_spider_egg
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:reprocessor/mysticalagriculture:seed/reprocessor/prismarine
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:soul_extraction/mysticalagriculture:souls/string
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:reprocessor/mysticalagriculture:seed/reprocessor/tungsten
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:solidifier/cyclic:solidifier/solidifier_magmabrickred
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:solidifier/cyclic:solidifier/solidifier_biodirt
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:infusion/mysticalagriculture:cat_seeds_infusion
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:infusion/mysticalagriculture:seed/infusion/coal
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:reprocessor/mysticalagriculture:magma_cube_seeds_reprocessor
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:reprocessor/mysticalagriculture:seed/reprocessor/ruby
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:soul_extraction/mysticalagriculture:souls/spider_eye
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:reprocessor/mysticalagriculture:seed/reprocessor/stone
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:crusher/cyclic:crusher/leather_chestplate
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:solidifier/cyclic:solidifier/solidifier_clay
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:solidifier/cyclic:solidifier/solidifier_honeycarrot
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:infusion/mysticalagriculture:dolphin_seeds_infusion
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:reprocessor/mysticalagriculture:seed/reprocessor/end
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:reprocessor/mysticalagriculture:seed/reprocessor/water
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:crusher/cyclic:crusher/concrete_gray_powder
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:infusion/mysticalagriculture:augment/jump_boost_i
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:infusion/mysticalagriculture:seed/infusion/skeleton
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:soul_extraction/mysticalagriculture:souls/zombie_head
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:crusher/cyclic:crusher/tinted_glass
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:infusion/mysticalagriculture:augment/tilling_aoe_ii
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:infusion/mysticalagriculture:seed/infusion/quartz_enriched_iron
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:solidifier/cyclic:solidifier/solidifier_ice
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:soul_extraction/mysticalagriculture:souls/rabbit
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:infusion/industrialagriculture:eggs/minecraft/enderman_egg
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:crusher/cyclic:crusher/magma
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:solidifier/cyclic:solidifier/solidifier_coral_firefan
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:solidifier/cyclic:solidifier/solidifier_conc_white
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:infusion/mysticalagriculture:augment/pathing_aoe_iv
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:crusher/cyclic:crusher/boats
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:reprocessor/mysticalagriculture:seed/reprocessor/copper
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:crusher/cyclic:crusher/redstone_torch
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:crusher/cyclic:crusher/emerald_ore
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:infusion/mysticalagriculture:seed/infusion/rabbit
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:infusion/mysticalagriculture:seed/infusion/lapis_lazuli
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:infusion/mysticalagriculture:augment/tilling_aoe_i
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:infusion/industrialagriculture:eggs/minecraft/fox_egg
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:infusion/mysticalagriculture:seed/infusion/lead
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:reprocessor/mysticalagriculture:zombified_piglin_seeds_reprocessor
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:reprocessor/mysticalagriculture:seed/reprocessor/brass
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:soul_extraction/mysticalagriculture:souls/tropical_fish
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:infusion/industrialagriculture:eggs/minecraft/cat_egg
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:soul_extraction/mysticalagriculture:souls/arrow
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:crusher/cyclic:crusher/magma_cream
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:solidifier/cyclic:solidifier/solidifier_honeycomb
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:infusion/mysticalagriculture:silverfish_seeds_infusion
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:crusher/cyclic:crusher/concrete_lime_powder
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:infusion/mysticalagriculture:stray_seeds_infusion
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:solidifier/cyclic:solidifier/solidifier_mossbrick
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:reprocessor/mysticalagriculture:guardian_seeds_reprocessor
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:reprocessor/mysticalagriculture:drowned_seeds_reprocessor
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:infusion/mysticalagriculture:passive_soulium_dagger
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:solidifier/cyclic:solidifier/solidifier_honeycake
[16:23:24] [Render thread/WARN]: Unknown recipe category: cfm:freezer_solidify/minecraft:packed_ice_from_freezing
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:crusher/cyclic:crusher/dye_red_tulip
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:crusher/cyclic:crusher/concrete_brown
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:solidifier/cyclic:solidifier/solidifier_peat
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:infusion/mysticalagriculture:seed/infusion/air
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:solidifier/cyclic:solidifier/solidifier_conc_gray
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:infusion/mysticalagriculture:horse_seeds_infusion
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:infusion/mysticalagriculture:seed/infusion/experience
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:reprocessor/mysticalagriculture:fox_seeds_reprocessor
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:reprocessor/mysticalagriculture:wolf_seeds_reprocessor
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:crusher/cyclic:crusher/glass
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:infusion/mysticalagriculture:seed/infusion/turtle
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:soul_extraction/mysticalagriculture:souls/bone
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:infusion/mysticalagriculture:augment/absorption_v
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:solidifier/cyclic:solidifier/solidifier_conc_red
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:solidifier/cyclic:solidifier/solidifier_coral_hornblock
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:infusion/mysticalagriculture:classic_set_seeds_infusion
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:reprocessor/mysticalagriculture:seed/reprocessor/invar
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:melter/cyclic:melter/melter_expghast
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:reprocessor/mysticalagriculture:bat_seeds_reprocessor
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:crusher/cyclic:crusher/powered_rail
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:infusion/mysticalagriculture:seed/infusion/earth
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:infusion/industrialagriculture:eggs/minecraft/parrot_egg
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:solidifier/cyclic:solidifier/solidifier_conc_light_gray
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:infusion/mysticalagriculture:seed/infusion/nether
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:crusher/cyclic:crusher/concrete_orange
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:infusion/mysticalagriculture:llama_seeds_infusion
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:solidifier/cyclic:solidifier/solidifier_conc_cyan
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:infusion/mysticalagriculture:guardian_seeds_infusion
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:infusion/industrialagriculture:eggs/minecraft/guardian_egg
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:reprocessor/mysticalagriculture:seed/reprocessor/sapphire
[16:23:24] [Render thread/WARN]: Unknown recipe category: cfm:grill_cooking/minecraft:cooked_porkchop_from_grill_cooking
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:infusion/mysticalagriculture:seed/infusion/sapphire
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:infusion/mysticalagriculture:augment/pathing_aoe_ii
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:solidifier/cyclic:solidifier/solidifier_honeymelon
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:crusher/cyclic:crusher/redstone_observer
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:infusion/mysticalagriculture:seed/infusion/sheep
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:infusion/mysticalagriculture:augment/absorption_iv
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:soul_extraction/mysticalagriculture:souls/blaze_rod
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:crusher/cyclic:crusher/concrete_green_powder
[16:23:24] [Render thread/WARN]: Unknown recipe category: cfm:grill_cooking/minecraft:cooked_mutton_from_grill_cooking
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:reprocessor/mysticalagriculture:piglin_seeds_reprocessor
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:melter/cyclic:melter/melter_expwitherrose
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:reprocessor/mysticalagriculture:seed/reprocessor/wither_skeleton
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:infusion/mysticalagriculture:augment/fire_resistance
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:reprocessor/mysticalagriculture:seed/reprocessor/iron
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:soul_extraction/mysticalagriculture:souls/creeper_head
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:reprocessor/mysticalagriculture:seed/reprocessor/hop_graphite
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:crusher/cyclic:crusher/glow_item_frame
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:solidifier/cyclic:solidifier/solidifier_pfuel
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:crusher/cyclic:crusher/hopper_gold
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:solidifier/cyclic:solidifier/solidifier_biomassleaves
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:melter/cyclic:melter/melter_honeybottle
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:crusher/cyclic:crusher/wooden_trapdoors
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:melter/cyclic:melter/melter_expbone
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:solidifier/cyclic:solidifier/solidifier_coral_brainfan
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:crusher/cyclic:crusher/dye_green
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:infusion/industrialagriculture:eggs/minecraft/skeleton_egg
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:solidifier/cyclic:solidifier/solidifier_honeycookie
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:reprocessor/mysticalagriculture:ravager_seeds_reprocessor
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:crusher/cyclic:crusher/dye_cyan
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:reprocessor/mysticalagriculture:seed/reprocessor/ice
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:infusion/mysticalagriculture:augment/absorption_ii
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:crusher/cyclic:crusher/beds
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:reprocessor/mysticalagriculture:seed/reprocessor/zinc
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:crusher/cyclic:crusher/dye_light_gray_azure
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:melter/cyclic:melter/melter_slimeballs
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:reprocessor/mysticalagriculture:parrot_seeds_reprocessor
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:solidifier/cyclic:solidifier/solidifier_biofarm
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:melter/cyclic:melter/melter_icetowater
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:reprocessor/mysticalagriculture:horse_seeds_reprocessor
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:reprocessor/mysticalagriculture:polar_bear_seeds_reprocessor
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:infusion/mysticalagriculture:seed/infusion/emerald
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:infusion/mysticalagriculture:magma_cube_seeds_infusion
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:infusion/industrialagriculture:eggs/minecraft/witch_egg
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:crusher/cyclic:crusher/sugar
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:generator_item/cyclic:generator/generate_peat
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:reprocessor/mysticalagriculture:vindicator_seeds_reprocessor
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:reprocessor/mysticalagriculture:seed/reprocessor/nether
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:crusher/cyclic:crusher/debris
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:reprocessor/mysticalagriculture:seed/reprocessor/squid
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:crusher/cyclic:crusher/iron_bars
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:solidifier/cyclic:solidifier/solidifier_honey_bottle
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:infusion/mysticalagriculture:evoker_seeds_infusion
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:infusion/mysticalagriculture:augment/absorption_iii
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:soul_extraction/mysticalagriculture:souls/wool
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:infusion/industrialagriculture:eggs/minecraft/silverfish_egg
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:infusion/mysticalagriculture:augment/health_boost_v
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:crusher/cyclic:crusher/dye_white
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:soul_extraction/mysticalagriculture:souls/cod
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:infusion/industrialagriculture:eggs/minecraft/stray_egg
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:infusion/mysticalagriculture:villager_seeds_infusion
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:reprocessor/mysticalagriculture:seed/reprocessor/constantan
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:crusher/cyclic:crusher/diamond_ore
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:reprocessor/mysticalagriculture:seed/reprocessor/diamond
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:infusion/mysticalagriculture:fox_seeds_infusion
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:infusion/mysticalagriculture:seed/infusion/dragon_egg
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:generator_item/cyclic:generator/generate_eye
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:crusher/cyclic:crusher/glow_lichen
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:reprocessor/mysticalagriculture:seed/reprocessor/tin
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:solidifier/cyclic:solidifier/solidifier_conc_pink
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:crusher/cyclic:crusher/dye_purple
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:soul_extraction/mysticalagriculture:souls/rabbit_hide
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:crusher/cyclic:crusher/gold_bars
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:infusion/industrialagriculture:eggs/minecraft/ghast_egg
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:infusion/mysticalagriculture:seed/infusion/silicon
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:solidifier/cyclic:solidifier/solidifier_amberalt
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:infusion/mysticalagriculture:seed/infusion/ruby
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:infusion/mysticalagriculture:seed/infusion/amethyst
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:reprocessor/mysticalagriculture:seed/reprocessor/chicken
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:crusher/cyclic:crusher/nylium_w
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:infusion/mysticalagriculture:seed/infusion/wood
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:crusher/cyclic:crusher/lead
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:crusher/cyclic:crusher/concrete_blue_powder
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:reprocessor/mysticalagriculture:seed/reprocessor/slime
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:crusher/cyclic:crusher/end_crystal
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:crusher/cyclic:crusher/sea_lantern
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:generator_item/cyclic:generator/generate_flesh
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:melter/cyclic:melter/melter_kelp
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:solidifier/cyclic:solidifier/solidifier_coral_fireblock
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:infusion/mysticalagriculture:augment/mining_fatigue_resistance
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:crusher/cyclic:crusher/dye_lime
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:reprocessor/mysticalagriculture:seed/reprocessor/turtle
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:infusion/industrialagriculture:eggs/minecraft/dolphin_egg
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:infusion/industrialagriculture:eggs/minecraft/llama_egg
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:crusher/cyclic:crusher/concrete_black
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:reprocessor/mysticalagriculture:seed/reprocessor/dragon_egg
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:crusher/cyclic:crusher/concrete_purple
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:solidifier/cyclic:solidifier/solidifier_apple_enchanted
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:crusher/cyclic:crusher/leather_leggings
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:infusion/industrialagriculture:eggs/minecraft/mooshroom_egg
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:crusher/cyclic:crusher/soul_soil
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:reprocessor/mysticalagriculture:vex_seeds_reprocessor
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:solidifier/cyclic:solidifier/solidifier_magmacrea
[16:23:24] [Render thread/WARN]: Unknown recipe category: cfm:grill_cooking/minecraft:cooked_chicken_from_grill_cooking
[16:23:24] [Render thread/WARN]: Unknown recipe category: cfm:grill_cooking/minecraft:cooked_rabbit_from_grill_cooking
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:crusher/cyclic:crusher/coal_ore
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:infusion/mysticalagriculture:seed/infusion/spider
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:reprocessor/mysticalagriculture:endermite_seeds_reprocessor
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:crusher/cyclic:crusher/packed_ice
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:reprocessor/mysticalagriculture:seed/reprocessor/nature
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:reprocessor/mysticalagriculture:shulker_seeds_reprocessor
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:crusher/cyclic:crusher/ender_eye
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:reprocessor/mysticalagriculture:phantom_seeds_reprocessor
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:reprocessor/mysticalagriculture:seed/reprocessor/honey
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:infusion/industrialagriculture:eggs/minecraft/blaze_egg
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:infusion/industrialagriculture:eggs/minecraft/cod_egg
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:infusion/mysticalagriculture:augment/wither_resistance
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:crusher/cyclic:crusher/blue_ice
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:infusion/mysticalagriculture:seed/infusion/prismarine
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:soul_extraction/mysticalagriculture:souls/leather
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:infusion/industrialagriculture:eggs/minecraft/shulker_egg
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:crusher/cyclic:crusher/wool
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:infusion/industrialagriculture:eggs/minecraft/phantom_egg
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:solidifier/cyclic:solidifier/solidifier_conc_orange
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:crusher/cyclic:crusher/coarse_dirt
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:infusion/mysticalagriculture:augment/pathing_aoe_iii
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:reprocessor/mysticalagriculture:seed/reprocessor/electrum
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:crusher/cyclic:crusher/lapis_ore
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:crusher/cyclic:crusher/dye_red_poppy
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:crusher/cyclic:crusher/granite
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:infusion/mysticalagriculture:seed/infusion/pig
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:solidifier/cyclic:solidifier/solidifier_obsidian
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:infusion/mysticalagriculture:augment/flight
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:infusion/mysticalagriculture:pillager_seeds_infusion
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:infusion/mysticalagriculture:seed/infusion/end
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:melter/cyclic:melter/melter_bamboo
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:infusion/mysticalagriculture:augment/health_boost_iii
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:crusher/cyclic:crusher/iron_ore
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:crusher/cyclic:crusher/painting
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:infusion/mysticalagriculture:seed/infusion/enderman
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:infusion/mysticalagriculture:seed/infusion/wither_skeleton
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:crusher/cyclic:crusher/dye_brown_flower
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:infusion/mysticalagriculture:husk_seeds_infusion
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:reprocessor/mysticalagriculture:seed/reprocessor/steel
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:crusher/cyclic:crusher/diorite
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:crusher/cyclic:crusher/dye_yellow_sun
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:soul_extraction/mysticalagriculture:souls/wither_skeleton_skull
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:reprocessor/mysticalagriculture:seed/reprocessor/amethyst
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:crusher/cyclic:crusher/concrete_black_powder
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:melter/cyclic:melter/melter_seeds
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:solidifier/cyclic:solidifier/solidifier_honey_block
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:infusion/mysticalagriculture:seed/infusion/fire
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:infusion/mysticalagriculture:piglin_seeds_infusion
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:solidifier/cyclic:solidifier/solidifier_coral_bubble
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:melter/cyclic:melter/melter_snowwater
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:infusion/mysticalagriculture:seed/infusion/dye
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:infusion/industrialagriculture:eggs/minecraft/zombie_villager_egg
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:solidifier/cyclic:solidifier/solidifier_biomass
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:reprocessor/mysticalagriculture:seed/reprocessor/inferium
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:crusher/cyclic:crusher/concrete_gray
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:infusion/mysticalagriculture:seed/infusion/iron
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:solidifier/cyclic:solidifier/solidifier_obs
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:generator_item/cyclic:generator/generate_breath
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:reprocessor/mysticalagriculture:seed/reprocessor/nether_star
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:reprocessor/mysticalagriculture:seed/reprocessor/fire
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:infusion/mysticalagriculture:seed/infusion/slime
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:crusher/cyclic:crusher/carpets
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:infusion/mysticalagriculture:seed/infusion/ice
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:crusher/cyclic:crusher/concrete_yellow
[16:23:24] [Render thread/WARN]: Unknown recipe category: cfm:freezer_solidify/minecraft:ice_from_freezing
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:infusion/mysticalagriculture:seed/infusion/nature
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:infusion/mysticalagriculture:augment/strength_ii
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:crusher/cyclic:crusher/gilded_blackstone
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:infusion/mysticalagriculture:seed/infusion/cow
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:soul_extraction/mysticalagriculture:souls/feather
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:infusion/mysticalagriculture:seed/infusion/glowstone
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:solidifier/cyclic:solidifier/solidifier_coral_brain
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:melter/cyclic:melter/melter_magma
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:soul_extraction/mysticalagriculture:souls/rotten_flesh
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:reprocessor/mysticalagriculture:seed/reprocessor/apatite
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:reprocessor/mysticalagriculture:seed/reprocessor/glowstone
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:infusion/mysticalagriculture:shulker_seeds_infusion
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:infusion/mysticalagriculture:augment/no_fall_damage
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:infusion/industrialagriculture:eggs/minecraft/wither_skeleton_egg
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:soul_extraction/mysticalagriculture:souls/scute
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:crusher/cyclic:crusher/farmland
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:infusion/mysticalagriculture:augment/strength_i
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:reprocessor/mysticalagriculture:seed/reprocessor/sheep
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:infusion/mysticalagriculture:seed/infusion/hop_graphite
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:reprocessor/mysticalagriculture:seed/reprocessor/zombie
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:crusher/cyclic:crusher/concrete_red
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:reprocessor/mysticalagriculture:seed/reprocessor/deepslate
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:crusher/cyclic:crusher/dye_brown_choc
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:infusion/industrialagriculture:eggs/minecraft/pillager_egg
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:crusher/cyclic:crusher/concrete_red_powder
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:crusher/cyclic:crusher/glowberries
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:infusion/industrialagriculture:eggs/minecraft/creeper_egg
[16:23:24] [Render thread/WARN]: Unknown recipe category: minecolonies:composting/minecolonies:compostables_poor
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:crusher/cyclic:crusher/dye_red_beet
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:solidifier/cyclic:solidifier/solidifier_conc_light_blue
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:infusion/mysticalagriculture:endermite_seeds_infusion
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:infusion/industrialagriculture:eggs/minecraft/turtle_egg
[16:23:24] [Render thread/WARN]: Unknown recipe category: cfm:grill_cooking/minecraft:cooked_beef_from_grill_cooking
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:soul_extraction/mysticalagriculture:souls/ender_pearl
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:crusher/cyclic:crusher/jukebox
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:crusher/cyclic:crusher/concrete_cyan
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:reprocessor/mysticalagriculture:seed/reprocessor/enderman
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:solidifier/cyclic:solidifier/solidifier_mosscobble
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:reprocessor/mysticalagriculture:seed/reprocessor/nickel
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:solidifier/cyclic:solidifier/solidifier_magmaava
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:reprocessor/mysticalagriculture:dolphin_seeds_reprocessor
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:crusher/cyclic:crusher/concrete_pink
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:infusion/industrialagriculture:eggs/minecraft/drowned_egg
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:solidifier/cyclic:solidifier/solidifier_gravel
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:crusher/cyclic:crusher/detector_rail
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:reprocessor/mysticalagriculture:cat_seeds_reprocessor
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:infusion/industrialagriculture:eggs/minecraft/piglin_brute_egg
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:infusion/mysticalagriculture:augment/mining_aoe_ii
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:crusher/cyclic:crusher/redstone_ore
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:infusion/mysticalagriculture:mooshroom_seeds_infusion
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:crusher/cyclic:crusher/chest
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:infusion/industrialagriculture:eggs/minecraft/zombified_piglin_egg
[16:23:24] [Render thread/WARN]: Unknown recipe category: minecolonies:composting/minecolonies:compostables_rich
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:reprocessor/mysticalagriculture:seed/reprocessor/titanium
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:infusion/industrialagriculture:eggs/minecraft/pig_egg
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:infusion/industrialagriculture:eggs/minecraft/panda_egg
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:infusion/industrialagriculture:eggs/minecraft/bat_egg
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:crusher/cyclic:crusher/dye_light_blue
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:crusher/cyclic:crusher/dye_pink
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:infusion/industrialagriculture:eggs/minecraft/tropical_fish_egg
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:infusion/industrialagriculture:eggs/minecraft/vex_egg
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:soul_extraction/mysticalagriculture:souls/chicken
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:crusher/cyclic:crusher/iron_trapdoor
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:melter/cyclic:melter/melter_exp
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:infusion/mysticalagriculture:ravager_seeds_infusion
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:infusion/industrialagriculture:eggs/minecraft/vindicator_egg
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:infusion/industrialagriculture:eggs/minecraft/slime_egg
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:infusion/mysticalagriculture:seed/infusion/copper
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:infusion/mysticalagriculture:seed/infusion/honey
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:soul_extraction/mysticalagriculture:souls/rabbit_foot
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:generator_item/cyclic:generator/generate_gunpowder
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:reprocessor/mysticalagriculture:seed/reprocessor/air
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:infusion/industrialagriculture:eggs/minecraft/zombie_egg
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:generator_item/cyclic:generator/generate_glowstone
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:solidifier/cyclic:solidifier/solidifier_biopodzol
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:crusher/cyclic:crusher/dye_blue_lapis
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:infusion/mysticalagriculture:seed/infusion/coral
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:crusher/cyclic:crusher/nylium_c
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:infusion/mysticalagriculture:augment/speed_ii
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:reprocessor/mysticalagriculture:seed/reprocessor/dirt
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:infusion/mysticalagriculture:augment/mining_aoe_i
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:infusion/mysticalagriculture:zombified_piglin_seeds_infusion
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:crusher/cyclic:crusher/concrete_white
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:infusion/mysticalagriculture:seed/infusion/squid
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:generator_item/cyclic:generator/generate_redstone
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:infusion/mysticalagriculture:panda_seeds_infusion
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:generator_item/cyclic:generator/generate_bone
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:infusion/mysticalagriculture:seed/infusion/creeper
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:crusher/cyclic:crusher/dye_light_gray_oxeye
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:infusion/mysticalagriculture:seed/infusion/blaze
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:solidifier/cyclic:solidifier/solidifier_conc_purple
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:crusher/cyclic:crusher/dye_pink_pe
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:crusher/cyclic:crusher/concrete_light_gray_powder
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:crusher/cyclic:crusher/redsone_comparator
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:infusion/mysticalagriculture:drowned_seeds_infusion
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:crusher/cyclic:crusher/dye_black_flower
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:generator_item/cyclic:generator/generate_peat_e
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:infusion/industrialagriculture:eggs/minecraft/polar_bear_egg
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:solidifier/cyclic:solidifier/solidifier_coral_hornfan
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:infusion/mysticalagriculture:witch_seeds_infusion
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:infusion/industrialagriculture:eggs/minecraft/endermite_egg
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:infusion/industrialagriculture:eggs/minecraft/squid_egg
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:crusher/cyclic:crusher/gold_ore
[16:23:24] [Render thread/WARN]: Unknown recipe category: cfm:freezer_solidify/minecraft:blue_ice_from_freezing
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:reprocessor/mysticalagriculture:seed/reprocessor/skeleton
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:soul_extraction/mysticalagriculture:souls/coal
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:crusher/cyclic:crusher/iron_door
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:infusion/mysticalagriculture:augment/water_breathing
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:solidifier/cyclic:solidifier/solidifier_prism
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:reprocessor/mysticalagriculture:seed/reprocessor/gold
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:infusion/mysticalagriculture:seed/infusion/nether_star
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:reprocessor/mysticalagriculture:seed/reprocessor/rabbit
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:infusion/mysticalagriculture:augment/strength_iii
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:solidifier/cyclic:solidifier/solidifier_conc_yellow
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:soul_extraction/mysticalagriculture:souls/pufferfish
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:soul_extraction/mysticalagriculture:souls/slime_ball
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:crusher/cyclic:crusher/hopper
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:crusher/cyclic:crusher/concrete_magenta_powder
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:solidifier/cyclic:solidifier/solidifier_slime
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:infusion/mysticalagriculture:seed/infusion/constantan
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:infusion/mysticalagriculture:seed/infusion/zombie
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:reprocessor/mysticalagriculture:piglin_brute_seeds_reprocessor
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:crusher/cyclic:crusher/stone
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:infusion/mysticalagriculture:augment/night_vision
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:solidifier/cyclic:solidifier/solidifier_coral_tube
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:solidifier/cyclic:solidifier/solidifier_conc_magenta
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:infusion/mysticalagriculture:seed/infusion/gold
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:reprocessor/mysticalagriculture:evoker_seeds_reprocessor
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:infusion/mysticalagriculture:augment/health_boost_iv
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:reprocessor/mysticalagriculture:llama_seeds_reprocessor
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:crusher/cyclic:crusher/concrete_pink_powder
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:crusher/cyclic:crusher/dirt_path
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:infusion/mysticalagriculture:seed/infusion/nether_quartz
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:crusher/cyclic:crusher/activator_rail
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:reprocessor/mysticalagriculture:seed/reprocessor/emerald
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:solidifier/cyclic:solidifier/solidifier_obsflower
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:soul_extraction/mysticalagriculture:souls/beef
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:infusion/mysticalagriculture:piglin_brute_seeds_infusion
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:infusion/mysticalagriculture:augment/pathing_aoe_i
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:crusher/cyclic:crusher/concrete_magenta
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:generator_item/cyclic:generator/generate_pearl
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:crusher/cyclic:crusher/grass
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:melter/cyclic:melter/melter_magmacream
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:crusher/cyclic:crusher/leather_boots
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:reprocessor/mysticalagriculture:panda_seeds_reprocessor
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:reprocessor/mysticalagriculture:seed/reprocessor/bronze
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:solidifier/cyclic:solidifier/gilded_blackstone
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:crusher/cyclic:crusher/end_stone
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:solidifier/cyclic:solidifier/solidifier_coral_bubblefan
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:solidifier/cyclic:solidifier/solidifier_glass
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:crusher/cyclic:crusher/blaze
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:reprocessor/mysticalagriculture:seed/reprocessor/redstone
[16:23:24] [Render thread/WARN]: Unknown recipe category: cfm:grill_cooking/minecraft:cooked_salmon_from_grill_cooking
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:crusher/cyclic:crusher/dye_black_sac
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:reprocessor/mysticalagriculture:seed/reprocessor/silver
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:infusion/industrialagriculture:eggs/minecraft/chicken_egg
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:crusher/cyclic:crusher/item_frame
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:crusher/cyclic:crusher/dye_yellow
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:reprocessor/mysticalagriculture:witch_seeds_reprocessor
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:infusion/mysticalagriculture:seed/infusion/netherite
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:soul_extraction/mysticalagriculture:souls/ink_sac
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:solidifier/cyclic:solidifier/solidifier_mycelium
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:soul_extraction/mysticalagriculture:souls/porkchop
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:crusher/cyclic:crusher/concrete_purple_powder
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:infusion/industrialagriculture:eggs/minecraft/pufferfish_egg
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:crusher/cyclic:crusher/soul_sand
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:crusher/cyclic:crusher/concrete_yellow_powder
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:soul_extraction/mysticalagriculture:souls/salmon
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:solidifier/cyclic:solidifier/solidifier_amber
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:soul_extraction/mysticalagriculture:souls/skeleton_skull
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:reprocessor/mysticalagriculture:seed/reprocessor/iridium
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:crusher/cyclic:crusher/copper_ore
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:infusion/mysticalagriculture:augment/attack_aoe_iii
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:infusion/mysticalagriculture:seed/infusion/deepslate
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:infusion/industrialagriculture:eggs/minecraft/ravager_egg
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:melter/cyclic:melter/melter_obslava
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:melter/cyclic:melter/melter_fbio
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:crusher/cyclic:crusher/prismarine_dark
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:reprocessor/mysticalagriculture:seed/reprocessor/creeper
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:crusher/cyclic:crusher/quartz_ore
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:reprocessor/mysticalagriculture:villager_seeds_reprocessor
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:infusion/mysticalagriculture:augment/health_boost_ii
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:crusher/cyclic:crusher/prism_bricks
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:reprocessor/mysticalagriculture:seed/reprocessor/saltpeter
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:infusion/mysticalagriculture:seed/infusion/ghast
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:infusion/mysticalagriculture:seed/infusion/zinc
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:reprocessor/mysticalagriculture:husk_seeds_reprocessor
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:crusher/cyclic:crusher/rail
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:crusher/cyclic:crusher/cobblestone
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:reprocessor/mysticalagriculture:seed/reprocessor/blaze
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:infusion/industrialagriculture:eggs/minecraft/villager_egg
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:infusion/mysticalagriculture:seed/infusion/aluminum
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:reprocessor/mysticalagriculture:seed/reprocessor/dye
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:crusher/cyclic:crusher/wither_rose
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:crusher/cyclic:crusher/leather_helmet
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:reprocessor/mysticalagriculture:seed/reprocessor/silicon
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:solidifier/cyclic:solidifier/solidifier_coral_tubeblock
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:crusher/cyclic:crusher/concrete_light_gray
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:crusher/cyclic:crusher/concrete_brown_powder
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:infusion/mysticalagriculture:hostile_soulium_dagger
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:melter/cyclic:melter/melter_expblaze
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:infusion/mysticalagriculture:augment/poison_resistance
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:infusion/mysticalagriculture:seed/infusion/redstone
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:soul_extraction/mysticalagriculture:souls/mutton
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:infusion/mysticalagriculture:augment/step_assist
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:crusher/cyclic:crusher/glow_ink_sack
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:reprocessor/mysticalagriculture:seed/reprocessor/obsidian
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:crusher/cyclic:crusher/prismarine
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:crusher/cyclic:crusher/concrete_white_powder
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:infusion/mysticalagriculture:bat_seeds_infusion
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:infusion/mysticalagriculture:seed/infusion/diamond
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:infusion/mysticalagriculture:augment/mining_aoe_iii
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:melter/cyclic:melter/melter_expflesh
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:infusion/mysticalagriculture:seed/infusion/sulfur
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:infusion/industrialagriculture:eggs/minecraft/magma_cube_egg
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:reprocessor/mysticalagriculture:seed/reprocessor/platinum
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:reprocessor/mysticalagriculture:seed/reprocessor/rubber
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:crusher/cyclic:crusher/bone
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:reprocessor/mysticalagriculture:seed/reprocessor/uranium
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:infusion/industrialagriculture:eggs/minecraft/cow_egg
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:crusher/cyclic:crusher/planks
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:crusher/cyclic:crusher/netherrack
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:reprocessor/mysticalagriculture:mooshroom_seeds_reprocessor
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:reprocessor/mysticalagriculture:seed/reprocessor/fish
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:infusion/industrialagriculture:eggs/minecraft/skeleton_horse_egg
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:solidifier/cyclic:solidifier/solidifier_magmaliq
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:melter/cyclic:melter/melter_slimeblock
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:reprocessor/mysticalagriculture:seed/reprocessor/experience
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:reprocessor/mysticalagriculture:seed/reprocessor/chrome
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:solidifier/cyclic:solidifier/solidifier_gmelon
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:crusher/cyclic:crusher/banners
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:crusher/cyclic:crusher/sandstone
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:crusher/cyclic:crusher/concrete_blue
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:reprocessor/mysticalagriculture:seed/reprocessor/graphite
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:crusher/cyclic:crusher/dye_light_gray_tulip
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:reprocessor/mysticalagriculture:seed/reprocessor/coal
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:solidifier/cyclic:solidifier/solidifier_path
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:generator_item/cyclic:generator/generate_star
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:crusher/cyclic:crusher/mutton
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:infusion/mysticalagriculture:seed/infusion/brass
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:reprocessor/mysticalagriculture:seed/reprocessor/ghast
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:infusion/mysticalagriculture:seed/infusion/stone
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:reprocessor/mysticalagriculture:seed/reprocessor/cow
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:infusion/industrialagriculture:eggs/minecraft/zombie_horse_egg
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:generator_item/cyclic:generator/generate_biomass_item
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:melter/cyclic:melter/melter_obslava1
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:reprocessor/mysticalagriculture:seed/reprocessor/sulfur
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:reprocessor/mysticalagriculture:seed/reprocessor/coral
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:infusion/industrialagriculture:eggs/minecraft/piglin_egg
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:solidifier/cyclic:solidifier/solidifier_conc_brown
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:solidifier/cyclic:solidifier/solidifier_coral_tubefan
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:infusion/mysticalagriculture:augment/jump_boost_iii
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:infusion/industrialagriculture:eggs/minecraft/sheep_egg
[16:23:24] [Render thread/WARN]: Unknown recipe category: silentgear:pressing/silentgear:pressing/material/sheet_metal
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:infusion/mysticalagriculture:seed/infusion/dirt
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:infusion/mysticalagriculture:seed/infusion/obsidian
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:crusher/cyclic:crusher/terracotta
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:infusion/industrialagriculture:eggs/minecraft/horse_egg
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:reprocessor/mysticalagriculture:seed/reprocessor/wood
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:crusher/cyclic:crusher/signs
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:reprocessor/mysticalagriculture:seed/reprocessor/quartz_enriched_iron
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:infusion/industrialagriculture:eggs/minecraft/evoker_egg
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:reprocessor/mysticalagriculture:classic_set_seeds_reprocessor
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:solidifier/cyclic:solidifier/solidifier_conc_black
[16:23:24] [Render thread/WARN]: Unknown recipe category: cyclic:crusher/cyclic:crusher/dye_orange
[16:23:24] [Render thread/WARN]: Unknown recipe category: mysticalagriculture:infusion/mysticalagriculture:augment/attack_aoe_ii
[16:23:27] [Render thread/INFO]: Starting JEI...
[16:23:29] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:23:29] [Render thread/INFO]: Building ingredient list...
[16:23:29] [Render thread/INFO]: Building ingredient list took 19.67 ms
[16:23:29] [Render thread/INFO]: Building ingredient filter...
[16:23:32] [Render thread/INFO]: Building ingredient filter took 3.083 s
[16:23:32] [Render thread/INFO]: Building bookmarks...
[16:23:32] [Render thread/INFO]: Building bookmarks took 3.190 ms
[16:23:33] [Render thread/INFO]: Reloading ResourceManager: Default, netherportalfix-forge-1.18-9.0.0.jar, refinedpipes-0.6.0.jar, DoggyTalents-1.18.1-2.4.0.jar, mcw-windows-2.0.2-mc1.18.1.jar, Industrial Agriculture[Core]-1.18.1-1.8.14.3.jar, modnametooltip-1.18.1-1.18.0.jar, kleeslabs-forge-1.18-11.0.0.jar, rsgauges-1.18.1-1.2.13-b1.jar, TerraForged-1.18.1-0.3.0-alpha-2.jar, cookingforblockheads-forge-1.18-11.0.0.jar, Controlling-forge-1.18.1-9.0.10.jar, Placebo-1.18.1-6.0.3.jar, citadel-1.10.8-1.18.jar, alexsmobs-1.15.1.jar, WitherSkeletonTweaks-1.18.1-7.0.1.jar, sophisticatedbackpacks-1.18.1-3.15.1.505.jar, guardvillagers-1.18.1.4.0.jar, buildinggadgets-3.10.1-build.3+mc1.18.jar, Customized-Dungeon-Loot-1.17.x-(v.2.1.0).jar, Apotheosis-1.18.1-5.0.0.jar, mcw-doors-1.0.5-mc1.18.1.jar, balm-2.4.0+0.jar, JustEnoughResources-1.18.1-0.13.1.141.jar, cloth-config-6.1.48-forge.jar, shetiphiancore-1.18-3.10.0.jar, supplementaries-1.18.1-1.1.5.jar, refinedstorage-1.10.0-beta.4.jar, EquipmentCompare-1.18.1-1.2.10.jar, out_of_sight-1.18.1-1.0.1.jar, mcw-bridges-2.0.1-mc1.18.1.jar, FarmersDelight-1.18.1-1.0.1.jar, torchmaster-18.0.2-beta.jar, repurposed_structures_forge-4.1.0+1.18.1.jar, morevillagers-FORGE-1.18.1-3.1.1.jar, endertanks-1.18-1.11.0.jar, BiomesOPlenty-1.18.1-15.0.0.90-universal.jar, mcw-trapdoors-1.0.4-mc1.18.1.jar, mcw-fences-1.0.2-mc1.18.1.jar, silent-gear-1.18.1-2.8.3.jar, supermartijn642corelib-1.0.16-mc1.18.jar, villagespawnpoint_1.18.1-1.9.jar, curios-forge-1.18.1-5.0.4.2.jar, Patchouli-1.18.1-64.jar, Industrial Agriculture[Silent's Gems]-1.18.1-1.8.14.jar, blockui-1.18-0.0.34-ALPHA.jar, collective-1.18.1-3.8.jar, OreExcavation-1.10.159.jar, tombstone-7.3.3-1.18.jar, ExtraStorage-1.18.1-2.0.1.jar, furniture-7.0.0-pre27-1.18.1.jar, architectury-3.4.9.jar, curiouselytra-forge-1.18.1-5.0.0.1.jar, AI-Improvements-1.18-0.4.0.jar, light-overlay-6.0.4-forge.jar, trashcans-1.0.12-mc1.18.jar, FastLeafDecay-27.2.jar, geckolib-1.18-forge-3.0.3.jar, treasure-bags-1.18-1.6.0.jar, Cyclic-1.18.1-1.6.9.jar, BetterAdvancements-1.18.1-0.1.2.122.jar, clienttweaks-forge-1.18-7.0.0.jar, rhino-forge-1800.1.7-build.92.jar, Cucumber-1.18.1-5.0.2.jar, jmi-1.18.1-0.5-27.jar, ftb-library-forge-1801.3.5-build.106.jar, ftb-teams-forge-1801.2.4-build.46.jar, item-filters-forge-1801.2.6-build.16.jar, EasyMagic-v3.2.1-1.18.1-Forge.jar, jei-1.18.1-9.1.2.61.jar, AttributeFix-Forge-1.18.1-13.0.3.jar, caelus-forge-1.18-3.0.0.1.jar, createchunkloading-0.3.1.jar, waystones-forge-1.18.1-9.0.1.jar, Clumps-forge-1.18.1-8.0.4.jar, journeymap-1.18.1-5.8.0beta6.jar, comforts-forge-1.18-5.0.0.1.jar, NaturesCompass-1.18.1-1.9.4-forge.jar, artifacts-1.18.1-4.0.2.jar, DungeonCrawl-1.18.1-2.3.6.jar, farmingforblockheads-forge-1.18.1-9.0.2.jar, mcjtylib-1.18-6.0.5.jar, rftoolsbase-1.18-3.0.1.jar, xnet-1.18-4.0.2.jar, mahoutsukai-1.18.1-v1.33.7.jar, catalogue-1.6.0-1.18.1.jar, ToastControl-1.18.1-6.0.0.jar, ars_nouveau-1.18.1-2.0.5.jar, rftoolspower-1.18-4.0.1.jar, ExtraDisks-1.18.1-2.0.2.jar, ftb-chunks-forge-1801.3.3-build.108.jar, kubejs-forge-1801.4.1-build.271.jar, forge-1.18.1-39.0.10-universal.jar, selene-1.18-1.11.jar, MysticalAgriculture-1.18.1-5.0.1.jar, MysticalAgradditions-1.18.1-5.0.2.jar, client-1.18.1-20211210.034407-srg.jar, EnchantmentDescriptions-Forge-1.18.1-9.0.8.jar, theoneprobe-1.18-5.0.2.jar, TerraBlender-1.18.1-1.0.0.24-universal.jar, swingthroughgrass-1.18.1-1.8.0.jar, MouseTweaks-forge-mc1.18-2.21.jar, ftb-quests-forge-1801.3.7-build.87.jar, ImmersiveEngineering-1.18.1-7.1.0-145.jar, silent-lib-1.18-6.0.0.jar, domum_ornamentum-1.18-1.0.31-ALPHA-universal.jar, dimdungeons-1.13.1-forge-1.18.1.jar, Iceberg-1.18.1-1.0.33.jar, flywheel-forge-1.18-0.5.0a.jar, create-mc1.18.1_v0.4b.jar, createdeco-1.2.2-1.18.jar, Croptopia-1.18-FORGE-1.8.0.jar, baubley-heart-canisters-1.18-1.0.0.jar, FastWorkbench-1.18.1-6.0.0.jar, polymorph-forge-1.18.1-0.35.jar, AutoRegLib-1.7-52.jar, Quark-3.0-334.jar, StorageDrawers-1.18.1-10.1.0.jar, sit-1.18-1.3.1.jar, enderchests-1.18-1.9.0.jar, InventoryHud_[1.18].forge-3.4.4.jar, structurize-1.18.1-1.0.319-BETA.jar, multi-piston-1.18-1.2.2-ALPHA.jar, AmbientEnvironment-forge-1.18.1-7.0.3.jar, kubejs-create-1801.2.0-build.14.jar, minecolonies-1.18.1-1.0.278-RELEASE.jar, FastFurnace-1.18.1-6.0.1.jar, appleskin-forge-mc1.18-2.2.0.jar, MagicalTorches-1.18.1-2.0.0.jar, lootr-1.18-0.1.13.40.jar, ferritecore-4.0.0-forge.jar, SoL-Carrot-1.18.1-1.12.0.jar, PuzzlesLib-v3.1.3-1.18.1-Forge.jar, Aquaculture-1.18.1-2.3.2.jar, silents-gems-1.18-4.2.0.jar, kubejs-immersive-engineering-1801.2.0-build.16.jar, refinedstorageaddons-0.8.1.jar, expandability-5.0.0-forge.jar, CosmeticArmorReworked-1.18.1-v1a.jar, defaultoptions-forge-1.18-14.0.0.jar
[16:23:33] [Render thread/INFO]: Read 9 bag types from server
[16:23:34] [Render thread/INFO]: Loading FTB Chunks client data from world 5af9ecf0-3c0c-4e79-815c-e12c4340fd7b
[16:23:34] [Render thread/INFO]: Read 6239 bytes, 94 objects
[16:23:34] [Render thread/INFO]: Synced Common configs
[16:23:34] [Render thread/INFO]: Synced Globe data
[16:23:34] [Render thread/INFO]: Trying jar discover: assets/structurize
[16:23:34] [Render thread/INFO]: Trying jar discover: assets/minecolonies
[16:23:35] [Render thread/INFO]: Load additional huts or decorations from /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/structurize/schematics
[16:23:35] [Render thread/INFO]: Load cached schematic from /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/structurize/cache
[16:23:35] [Render thread/INFO]: Load cached schematic from /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/structurize/cache
[16:23:37] [Render thread/INFO]: Injecting loot table 'silentgear:inject/chests/bastion_treasure' into 'minecraft:chests/bastion_treasure'
[16:23:37] [Render thread/INFO]: Injecting loot table 'silentgear:inject/chests/ruined_portal' into 'minecraft:chests/ruined_portal'
[16:23:37] [Render thread/INFO]: Injecting loot table 'silentgear:inject/chests/nether_bridge' into 'minecraft:chests/nether_bridge'
[16:23:38] [Render thread/INFO]: Injecting loot table 'silentgear:inject/entities/cave_spider' into 'minecraft:entities/cave_spider'
[16:23:38] [Render thread/INFO]: Injecting loot table 'silentgear:inject/entities/spider' into 'minecraft:entities/spider'
[16:23:38] [Render thread/INFO]: Injecting loot table 'silentgear:inject/chests/bastion_bridge' into 'minecraft:chests/bastion_bridge'
[16:23:39] [Render thread/INFO]: Injecting loot table 'silentgear:inject/chests/bastion_other' into 'minecraft:chests/bastion_other'
[16:23:39] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:23:39] [Render thread/INFO]: Reloaded with no KubeJS errors!
[16:23:39] [Render thread/WARN]: Found validation problem in {minecraft:chests/pillager_outpost}.pools[4].entries[0]: Unknown loot table called cdl:inject/pillager_outpost
[16:23:39] [Render thread/WARN]: Found validation problem in {minecraft:chests/pillager_outpost}.pools[5].entries[0]: Unknown loot table called supplementaries:inject/pillager_flax
[16:23:39] [Render thread/WARN]: Found validation problem in {minecraft:chests/abandoned_mineshaft}.pools[8].entries[0]: Unknown loot table called supplementaries:inject/mineshaft_bomb
[16:23:39] [Render thread/WARN]: Found validation problem in {minecraft:chests/pillager_outpost}.pools[6].entries[0]: Unknown loot table called minecolonies:chests/supplycamp
[16:23:39] [Render thread/WARN]: Found validation problem in {minecraft:chests/nether_bridge}.pools[5].entries[0]: Unknown loot table called silentgear:inject/chests/nether_bridge
[16:23:39] [Render thread/WARN]: Found validation problem in {minecraft:chests/abandoned_mineshaft}.pools[7].entries[0]: Unknown loot table called supplementaries:inject/mineshaft_blue_bomb
[16:23:39] [Render thread/WARN]: Found validation problem in {minecraft:chests/village/village_savanna_house}.pools[1].entries[0]: Unknown loot table called farmersdelight:inject/crops_villager_houses
[16:23:39] [Render thread/WARN]: Found validation problem in {minecraft:gameplay/fishing}.pools[0].entries[3]: Unknown loot table called aquaculture:gameplay/fishing/fish
[16:23:39] [Render thread/WARN]: Found validation problem in {minecraft:chests/nether_bridge}.pools[2].entries[0]: Unknown loot table called sophisticatedbackpacks:inject/chests/nether_bridge
[16:23:39] [Render thread/WARN]: Found validation problem in {minecraft:chests/nether_bridge}.pools[4].entries[0]: Unknown loot table called supplementaries:inject/fortress_bomb
[16:23:39] [Render thread/WARN]: Found validation problem in {minecraft:chests/shipwreck_map}.pools[2].entries[0]: Unknown loot table called minecolonies:chests/supplyship
[16:23:39] [Render thread/WARN]: Found validation problem in {minecraft:chests/nether_bridge}.pools[3].entries[0]: Unknown loot table called supplementaries:inject/fortress_blue_bomb
[16:23:39] [Render thread/WARN]: Found validation problem in {minecraft:chests/abandoned_mineshaft}.pools[9].entries[0]: Unknown loot table called minecolonies:chests/supplycamp
[16:23:39] [Render thread/WARN]: Found validation problem in {minecraft:chests/village/village_cartographer}.pools[1].entries[0]: Unknown loot table called minecolonies:chests/supplycamp
[16:23:39] [Render thread/WARN]: Found validation problem in {minecraft:chests/village/village_mason}.pools[1].entries[0]: Unknown loot table called minecolonies:chests/supplycamp
[16:23:39] [Render thread/WARN]: Found validation problem in {minecraft:chests/bastion_treasure}.pools[3].entries[0]: Unknown loot table called silentgear:inject/chests/bastion_treasure
[16:23:39] [Render thread/WARN]: Found validation problem in {minecraft:chests/buried_treasure}.pools[6].entries[0]: Unknown loot table called minecolonies:chests/supplyship
[16:23:39] [Render thread/WARN]: Found validation problem in {minecraft:entities/spider}.pools[2].entries[0]: Unknown loot table called silentgear:inject/entities/spider
[16:23:39] [Render thread/WARN]: Found validation problem in {minecraft:chests/bastion_treasure}.pools[2].entries[0]: Unknown loot table called sophisticatedbackpacks:inject/chests/bastion_treasure
[16:23:39] [Render thread/WARN]: Found validation problem in {minecraft:chests/stronghold_crossing}.pools[2].entries[0]: Unknown loot table called supplementaries:inject/stronghold_blue_bomb
[16:23:39] [Render thread/WARN]: Found validation problem in {minecraft:chests/woodland_mansion}.pools[5].entries[0]: Unknown loot table called minecolonies:chests/supplycamp
[16:23:39] [Render thread/WARN]: Found validation problem in {minecraft:chests/stronghold_crossing}.pools[3].entries[0]: Unknown loot table called supplementaries:inject/stronghold_bomb
[16:23:39] [Render thread/WARN]: Found validation problem in {minecraft:chests/village/village_temple}.pools[1].entries[0]: Unknown loot table called minecolonies:chests/supplyship
[16:23:39] [Render thread/WARN]: Found validation problem in {minecraft:chests/shipwreck_treasure}.pools[3].entries[0]: Unknown loot table called supplementaries:inject/shipwreck_treasure_globe
[16:23:39] [Render thread/WARN]: Found validation problem in {minecraft:chests/stronghold_crossing}.pools[4].entries[0]: Unknown loot table called minecolonies:chests/supplycamp
[16:23:39] [Render thread/WARN]: Found validation problem in {minecraft:chests/village/village_desert_house}.pools[2].entries[0]: Unknown loot table called minecolonies:chests/supplycamp
[16:23:39] [Render thread/WARN]: Found validation problem in {minecraft:chests/stronghold_library}.pools[1].entries[0]: Unknown loot table called minecolonies:chests/supplycamp
[16:23:39] [Render thread/WARN]: Found validation problem in {minecraft:chests/woodland_mansion}.pools[4].entries[0]: Unknown loot table called sophisticatedbackpacks:inject/chests/woodland_mansion
[16:23:39] [Render thread/WARN]: Found validation problem in {minecraft:chests/shipwreck_treasure}.pools[4].entries[0]: Unknown loot table called minecolonies:chests/supplyship
[16:23:39] [Render thread/WARN]: Found validation problem in {minecraft:chests/woodland_mansion}.pools[3].entries[0]: Unknown loot table called cdl:inject/woodland_mansion
[16:23:39] [Render thread/WARN]: Found validation problem in {minecraft:chests/village/village_desert_house}.pools[1].entries[0]: Unknown loot table called farmersdelight:inject/crops_villager_houses
[16:23:39] [Render thread/WARN]: Found validation problem in {minecraft:chests/igloo_chest}.pools[2].entries[0]: Unknown loot table called minecolonies:chests/supplycamp
[16:23:39] [Render thread/WARN]: Found validation problem in {minecraft:chests/abandoned_mineshaft}.pools[3].entries[0]: Unknown loot table called cdl:inject/abandoned_mineshaft
[16:23:39] [Render thread/WARN]: Found validation problem in {minecraft:chests/shipwreck_treasure}.pools[2].entries[0]: Unknown loot table called sophisticatedbackpacks:inject/chests/shipwreck_treasure
[16:23:39] [Render thread/WARN]: Found validation problem in {minecraft:chests/nether_bridge}.pools[1].entries[0]: Unknown loot table called cdl:inject/nether_bridge
[16:23:39] [Render thread/WARN]: Found validation problem in {minecraft:chests/abandoned_mineshaft}.pools[4].entries[0]: Unknown loot table called sophisticatedbackpacks:inject/chests/abandoned_mineshaft
[16:23:39] [Render thread/WARN]: Found validation problem in {minecraft:chests/end_city_treasure}.pools[1].entries[0]: Unknown loot table called sophisticatedbackpacks:inject/chests/end_city_treasure
[16:23:39] [Render thread/WARN]: Found validation problem in {minecraft:chests/abandoned_mineshaft}.pools[6].entries[0]: Unknown loot table called supplementaries:inject/mineshaft_flax
[16:23:39] [Render thread/WARN]: Found validation problem in {minecraft:chests/abandoned_mineshaft}.pools[5].entries[0]: Unknown loot table called supplementaries:inject/mineshaft_rope
[16:23:39] [Render thread/WARN]: Found validation problem in {minecraft:chests/stronghold_crossing}.pools[1].entries[0]: Unknown loot table called cdl:inject/stronghold_crossing
[16:23:39] [Render thread/WARN]: Found validation problem in {minecraft:chests/end_city_treasure}.pools[2].entries[0]: Unknown loot table called supplementaries:inject/end_city_stasis
[16:23:39] [Render thread/WARN]: Found validation problem in {minecraft:entities/cave_spider}.pools[2].entries[0]: Unknown loot table called silentgear:inject/entities/cave_spider
[16:23:39] [Render thread/WARN]: Found validation problem in {minecraft:chests/underwater_ruin_big}.pools[2].entries[0]: Unknown loot table called minecolonies:chests/supplyship
[16:23:39] [Render thread/WARN]: Found validation problem in {minecraft:gameplay/fishing}.pools[0].entries[5]: Unknown loot table called aquaculture:gameplay/fishing/neptunium
[16:23:39] [Render thread/WARN]: Found validation problem in {minecraft:chests/spawn_bonus_chest}.pools[4].entries[0]: Unknown loot table called minecolonies:chests/supplycamp
[16:23:39] [Render thread/WARN]: Found validation problem in {minecraft:chests/village/village_snowy_house}.pools[1].entries[0]: Unknown loot table called farmersdelight:inject/crops_villager_houses
[16:23:39] [Render thread/WARN]: Found validation problem in {minecraft:chests/shipwreck_supply}.pools[3].entries[0]: Unknown loot table called minecolonies:chests/supplyship
[16:23:39] [Render thread/WARN]: Found validation problem in {minecraft:chests/shipwreck_supply}.pools[1].entries[0]: Unknown loot table called farmersdelight:inject/shipwreck_supply
[16:23:39] [Render thread/WARN]: Found validation problem in {minecraft:chests/stronghold_corridor}.pools[1].entries[0]: Unknown loot table called minecolonies:chests/supplycamp
[16:23:39] [Render thread/WARN]: Found validation problem in {minecraft:chests/ruined_portal}.pools[1].entries[0]: Unknown loot table called silentgear:inject/chests/ruined_portal
[16:23:39] [Render thread/WARN]: Found validation problem in {minecraft:chests/shipwreck_supply}.pools[2].entries[0]: Unknown loot table called supplementaries:inject/shipwreck_storage_flax
[16:23:39] [Render thread/WARN]: Found validation problem in {minecraft:chests/desert_pyramid}.pools[2].entries[0]: Unknown loot table called sophisticatedbackpacks:inject/chests/desert_pyramid
[16:23:39] [Render thread/WARN]: Found validation problem in {minecraft:chests/jungle_temple}.pools[1].entries[0]: Unknown loot table called cdl:inject/jungle_temple
[16:23:39] [Render thread/WARN]: Found validation problem in {minecraft:gameplay/fishing}.pools[0].entries[4]: Unknown loot table called aquaculture:gameplay/fishing/junk
[16:23:39] [Render thread/WARN]: Found validation problem in {minecraft:chests/village/village_armorer}.pools[1].entries[0]: Unknown loot table called minecolonies:chests/supplyship
[16:23:39] [Render thread/WARN]: Found validation problem in {minecraft:chests/desert_pyramid}.pools[3].entries[0]: Unknown loot table called minecolonies:chests/supplycamp
[16:23:39] [Render thread/WARN]: Found validation problem in {minecraft:chests/bastion_other}.pools[3].entries[0]: Unknown loot table called silentgear:inject/chests/bastion_other
[16:23:39] [Render thread/WARN]: Found validation problem in {minecraft:chests/underwater_ruin_small}.pools[2].entries[0]: Unknown loot table called minecolonies:chests/supplyship
[16:23:39] [Render thread/WARN]: Found validation problem in {minecraft:chests/bastion_bridge}.pools[3].entries[0]: Unknown loot table called silentgear:inject/chests/bastion_bridge
[16:23:39] [Render thread/WARN]: Found validation problem in {minecraft:chests/village/village_plains_house}.pools[1].entries[0]: Unknown loot table called farmersdelight:inject/crops_villager_houses
[16:23:39] [Render thread/WARN]: Found validation problem in {minecraft:chests/jungle_temple}.pools[6].entries[0]: Unknown loot table called minecolonies:chests/supplycamp
[16:23:39] [Render thread/WARN]: Found validation problem in {minecraft:chests/simple_dungeon}.pools[4].entries[0]: Unknown loot table called sophisticatedbackpacks:inject/chests/simple_dungeon
[16:23:39] [Render thread/WARN]: Found validation problem in {minecraft:chests/simple_dungeon}.pools[6].entries[0]: Unknown loot table called supplementaries:inject/dungeon_blue_bomb
[16:23:39] [Render thread/WARN]: Found validation problem in {minecraft:chests/simple_dungeon}.pools[3].entries[0]: Unknown loot table called cdl:inject/simple_dungeon
[16:23:39] [Render thread/WARN]: Found validation problem in {minecraft:chests/village/village_fisher}.pools[1].entries[0]: Unknown loot table called minecolonies:chests/supplyship
[16:23:39] [Render thread/WARN]: Found validation problem in {minecraft:chests/jungle_temple}.pools[5].entries[0]: Unknown loot table called supplementaries:inject/temple_spikes
[16:23:39] [Render thread/WARN]: Found validation problem in {minecraft:chests/jungle_temple}.pools[4].entries[0]: Unknown loot table called supplementaries:inject/temple_bomb
[16:23:39] [Render thread/WARN]: Found validation problem in {minecraft:chests/simple_dungeon}.pools[7].entries[0]: Unknown loot table called minecolonies:chests/supplycamp
[16:23:39] [Render thread/WARN]: Found validation problem in {minecraft:chests/jungle_temple}.pools[3].entries[0]: Unknown loot table called supplementaries:inject/temple_blue_bomb
[16:23:39] [Render thread/WARN]: Found validation problem in {minecraft:chests/village/village_taiga_house}.pools[1].entries[0]: Unknown loot table called farmersdelight:inject/crops_villager_houses
[16:23:39] [Render thread/WARN]: Found validation problem in {minecraft:chests/simple_dungeon}.pools[5].entries[0]: Unknown loot table called supplementaries:inject/dungeon_flax
[16:23:39] [Render thread/INFO]: Registered 0 additional loot tables.
[16:23:47] [Render thread/INFO]: Building recipe registry...
[16:23:47] [Render thread/INFO]: Building recipe registry took 59.21 ms
[16:23:49] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:23:50] [Render thread/INFO]: Adding recipes to JEI!!
[16:23:50] [Render thread/ERROR]: Found a broken recipe: Domum Ornamentum domum_ornamentum:vanilla_slab_compat class com.ldtteam.domumornamentum.recipe.architectscutter.ArchitectsCutterRecipe {
  Outputs:
    net.minecraft.world.item.ItemStack: [[2 vanilla_slab_compat domum_ornamentum:vanilla_slab_compat]]
  Inputs:
    net.minecraft.world.item.ItemStack: [[1 orange_wool minecraft:orange_wool, 1 stripped_redwood_log biomesoplenty:stripped_redwood_log, 1 basalt minecraft:basalt, 1 light_blue_framed_glass quark:light_blue_framed_glass, 1 purple_cobblestone_extra domum_ornamentum:purple_cobblestone_extra, 1 podzol minecraft:podzol, 1 oak_leaves minecraft:oak_leaves, 1 bort_block silentgear:bort_block, 1 gray_framed_glass quark:gray_framed_glass, 1 obsidian minecraft:obsidian, 1 cyan_wool minecraft:cyan_wool, 1 blue_framed_glass quark:blue_framed_glass, 1 storage_nickel immersiveengineering:storage_nickel, 1 air minecraft:air, 1 lime_framed_glass quark:lime_framed_glass, 1 stripped_cherry_wood biomesoplenty:stripped_cherry_wood, 1 stripped_umbran_wood biomesoplenty:stripped_umbran_wood, 1 purple_concrete minecraft:purple_concrete, 1 redwood_leaves biomesoplenty:redwood_leaves, 1 dark_oak_leaves minecraft:dark_oak_leaves, 1 orange_terracotta minecraft:orange_terracotta, 1 copper_block minecraft:copper_block, 1 stripped_hellbark_log biomesoplenty:stripped_hellbark_log, 1 cyan_brick_extra domum_ornamentum:cyan_brick_extra, 1 mahogany_leaves biomesoplenty:mahogany_leaves, 1 brown_brick_extra domum_ornamentum:brown_brick_extra, 1 green_wool minecraft:green_wool, 1 umbran_log biomesoplenty:umbran_log, 1 rainbow_birch_leaves biomesoplenty:rainbow_birch_leaves, 1 purple_brick_extra domum_ornamentum:purple_brick_extra, 1 beige_bricks domum_ornamentum:beige_bricks, 1 origin_grass_block biomesoplenty:origin_grass_block, 1 mahogany_log biomesoplenty:mahogany_log, 1 red_brick_extra domum_ornamentum:red_brick_extra, 1 green_concrete minecraft:green_concrete, 1 chiseled_sandstone minecraft:chiseled_sandstone, 1 dirty_glass quark:dirty_glass, 1 stripped_green_archwood_wood ars_nouveau:stripped_green_archwood_wood, 1 pink_concrete minecraft:pink_concrete, 1 storage_constantan immersiveengineering:storage_constantan, 1 ammolite_block silentgems:ammolite_block, 1 diamond_block minecraft:diamond_block, 1 brain_coral_block minecraft:brain_coral_block, 1 pink_framed_glass quark:pink_framed_glass, 1 magenta_brick_extra domum_ornamentum:magenta_brick_extra, 1 red_blossom_leaves quark:red_blossom_leaves, 1 stripped_redwood_wood biomesoplenty:stripped_redwood_wood, 1 blue_wool minecraft:blue_wool, 1 jacaranda_log biomesoplenty:jacaranda_log, 1 cyan_framed_glass quark:cyan_framed_glass, 1 willow_leaves biomesoplenty:willow_leaves, 1 white_concrete minecraft:white_concrete, 1 waxed_exposed_copper minecraft:waxed_exposed_copper, 1 carnelian_block silentgems:carnelian_block, 1 hellbark_leaves biomesoplenty:hellbark_leaves, 1 yellow_framed_glass quark:yellow_framed_glass, 1 fire_coral_block minecraft:fire_coral_block, 1 black_wool minecraft:black_wool, 1 citrine_block silentgems:citrine_block, 1 stripped_birch_wood minecraft:stripped_birch_wood, 1 grass_block minecraft:grass_block, 1 pink_terracotta minecraft:pink_terracotta, 1 yellow_concrete minecraft:yellow_concrete, 1 lavender_blossom_leaves quark:lavender_blossom_leaves, 1 mycelium minecraft:mycelium, 1 air minecraft:air, 1 light_blue_concrete minecraft:light_blue_concrete, 1 blue_cobblestone_extra domum_ornamentum:blue_cobblestone_extra, 1 rooted_dirt minecraft:rooted_dirt, 1 air minecraft:air, 1 cut_copper minecraft:cut_copper, 1 palm_wood biomesoplenty:palm_wood, 1 cinnamon_wood croptopia:cinnamon_wood, 1 tiled_glass create:tiled_glass, 1 black_brick_extra domum_ornamentum:black_brick_extra, 1 cherry_log biomesoplenty:cherry_log, 1 weathered_copper minecraft:weathered_copper, 1 light_gray_terracotta minecraft:light_gray_terracotta, 1 stripped_dark_oak_wood minecraft:stripped_dark_oak_wood, 1 blackstone minecraft:blackstone, 1 brick_extra domum_ornamentum:brick_extra, 1 red_archwood_leaves ars_nouveau:red_archwood_leaves, 1 brown_stained_glass minecraft:brown_stained_glass, 1 magenta_stained_glass minecraft:magenta_stained_glass, 1 waxed_weathered_copper minecraft:waxed_weathered_copper, 1 quartz_pillar minecraft:quartz_pillar, 1 gilded_blackstone minecraft:gilded_blackstone, 1 stripped_umbran_log biomesoplenty:stripped_umbran_log, 1 pink_blossom_leaves quark:pink_blossom_leaves, 1 packed_ice minecraft:packed_ice, 1 stripped_palm_log biomesoplenty:stripped_palm_log, 1 stripped_blue_archwood_wood ars_nouveau:stripped_blue_archwood_wood, 1 feather_block supplementaries:feather_block, 1 lime_brick_extra domum_ornamentum:lime_brick_extra, 1 magenta_wool minecraft:magenta_wool, 1 mossy_cobblestone_extra domum_ornamentum:mossy_cobblestone_extra, 1 white_framed_glass quark:white_framed_glass, 1 origin_leaves biomesoplenty:origin_leaves, 1 green_cactus_extra domum_ornamentum:green_cactus_extra, 1 hellbark_log biomesoplenty:hellbark_log, 1 acacia_wood minecraft:acacia_wood, 1 gray_concrete minecraft:gray_concrete, 1 jungle_wood minecraft:jungle_wood, 1 magenta_framed_glass quark:magenta_framed_glass, 1 flint_block supplementaries:flint_block, 1 birch_wood minecraft:birch_wood, 1 willow_wood biomesoplenty:willow_wood, 1 stripped_cinnamon_log croptopia:stripped_cinnamon_log, 1 orange_blossom_leaves quark:orange_blossom_leaves, 1 brown_framed_glass quark:brown_framed_glass, 1 air minecraft:air, 1 yellow_wool minecraft:yellow_wool, 1 dead_log biomesoplenty:dead_log, 1 red_stained_glass minecraft:red_stained_glass, 1 stripped_fir_wood biomesoplenty:stripped_fir_wood, 1 amethyst_block minecraft:amethyst_block, 1 bookshelf minecraft:bookshelf, 1 gold_block minecraft:gold_block, 1 purple_wool minecraft:purple_wool, 1 green_archwood_leaves ars_nouveau:green_archwood_leaves, 1 acacia_log minecraft:acacia_log, 1 blue_terracotta minecraft:blue_terracotta, 1 white_terracotta minecraft:white_terracotta, 1 cream_bricks domum_ornamentum:cream_bricks, 1 budding_amethyst minecraft:budding_amethyst, 1 netherwood_wood silentgear:netherwood_wood, 1 magic_log biomesoplenty:magic_log, 1 heliodor_block silentgems:heliodor_block, 1 vertical_framed_glass create:vertical_framed_glass, 1 crimson_stem minecraft:crimson_stem, 1 storage_lead immersiveengineering:storage_lead, 1 stripped_oak_log minecraft:stripped_oak_log, 1 magic_wood biomesoplenty:magic_wood, 1 warped_nylium minecraft:warped_nylium, 1 blue_stained_glass minecraft:blue_stained_glass, 1 redstone_block minecraft:redstone_block, 1 stripped_magic_log biomesoplenty:stripped_magic_log, 1 red_concrete minecraft:red_concrete, 1 horizontal_framed_glass create:horizontal_framed_glass, 1 flowering_oak_leaves biomesoplenty:flowering_oak_leaves, 1 air minecraft:air, 1 gray_stained_glass minecraft:gray_stained_glass, 1 stripped_acacia_wood minecraft:stripped_acacia_wood, 1 zinc_block create:zinc_block, 1 beige_stone_bricks domum_ornamentum:beige_stone_bricks, 1 crimson_hyphae minecraft:crimson_hyphae, 1 crimson_iron_block silentgear:crimson_iron_block, 1 brown_terracotta minecraft:brown_terracotta, 1 cracked_stone_bricks minecraft:cracked_stone_bricks, 1 cherry_wood biomesoplenty:cherry_wood, 1 storage_aluminum immersiveengineering:storage_aluminum, 1 purple_terracotta minecraft:purple_terracotta, 1 chiseled_stone_bricks minecraft:chiseled_stone_bricks, 1 kyanite_block silentgems:kyanite_block, 1 brown_bricks domum_ornamentum:brown_bricks, 1 magic_leaves biomesoplenty:magic_leaves, 1 fir_leaves biomesoplenty:fir_leaves, 1 air minecraft:air, 1 ruby_block silentgems:ruby_block, 1 storage_silver immersiveengineering:storage_silver, 1 tube_coral_block minecraft:tube_coral_block, 1 stripped_mahogany_wood biomesoplenty:stripped_mahogany_wood, 1 light_gray_framed_glass quark:light_gray_framed_glass, 1 lime_wool minecraft:lime_wool, 1 jacaranda_wood biomesoplenty:jacaranda_wood, 1 emerald_block minecraft:emerald_block, 1 cobblestone_extra domum_ornamentum:cobblestone_extra, 1 air minecraft:air, 1 umbran_wood biomesoplenty:umbran_wood, 1 bubble_coral_block minecraft:bubble_coral_block, 1 white_stained_glass minecraft:white_stained_glass, 1 brown_wool minecraft:brown_wool, 1 yellow_stained_glass minecraft:yellow_stained_glass, 1 light_gray_brick_extra domum_ornamentum:light_gray_brick_extra, 1 black_diamond_block silentgems:black_diamond_block, 1 coal_block minecraft:coal_block, 1 framed_glass quark:framed_glass, 1 horn_coral_block minecraft:horn_coral_block, 1 stripped_fir_log biomesoplenty:stripped_fir_log, 1 stripped_red_archwood_log ars_nouveau:stripped_red_archwood_log, 1 stripped_willow_log biomesoplenty:stripped_willow_log, 1 palm_leaves biomesoplenty:palm_leaves, 1 stripped_spruce_wood minecraft:stripped_spruce_wood, 1 palm_log biomesoplenty:palm_log, 1 orange_autumn_leaves biomesoplenty:orange_autumn_leaves, 1 lime_terracotta minecraft:lime_terracotta, 1 air minecraft:air, 1 air minecraft:air, 1 dark_oak_log minecraft:dark_oak_log, 1 red_wool minecraft:red_wool, 1 turquoise_block silentgems:turquoise_block, 1 blue_archwood_leaves ars_nouveau:blue_archwood_leaves, 1 jungle_leaves minecraft:jungle_leaves, 1 air minecraft:air, 1 blue_archwood_log ars_nouveau:blue_archwood_log, 1 air minecraft:air, 1 storage_electrum immersiveengineering:storage_electrum, 1 light_blue_stained_glass minecraft:light_blue_stained_glass, 1 cinnamon_log croptopia:cinnamon_log, 1 yellow_blossom_leaves quark:yellow_blossom_leaves, 1 stripped_magic_wood biomesoplenty:stripped_magic_wood, 1 black_framed_glass quark:black_framed_glass, 1 light_gray_stained_glass minecraft:light_gray_stained_glass, 1 purple_archwood_leaves ars_nouveau:purple_archwood_leaves, 1 crimson_steel_block silentgear:crimson_steel_block, 1 stripped_dark_oak_log minecraft:stripped_dark_oak_log, 1 stripped_spruce_log minecraft:stripped_spruce_log, 1 glass_connected cyclic:glass_connected, 1 air minecraft:air, 1 air minecraft:air, 1 azure_electrum_block silentgear:azure_electrum_block, 1 air minecraft:air, 1 cyan_stained_glass minecraft:cyan_stained_glass, 1 green_stained_glass minecraft:green_stained_glass, 1 warped_hyphae minecraft:warped_hyphae, 1 stripped_palm_wood biomesoplenty:stripped_palm_wood, 1 umbran_leaves biomesoplenty:umbran_leaves, 1 oak_wood minecraft:oak_wood, 1 redwood_log biomesoplenty:redwood_log, 1 green_brick_extra domum_ornamentum:green_brick_extra, 1 black_concrete minecraft:black_concrete, 1 birch_log minecraft:birch_log, 1 pink_cherry_leaves biomesoplenty:pink_cherry_leaves, 1 green_archwood_log ars_nouveau:green_archwood_log, 1 gray_brick_extra domum_ornamentum:gray_brick_extra, 1 willow_log biomesoplenty:willow_log, 1 soap_block supplementaries:soap_block, 1 stripped_purple_archwood_log ars_nouveau:stripped_purple_archwood_log, 1 cactus_extra domum_ornamentum:cactus_extra, 1 air minecraft:air, 1 white_wool minecraft:white_wool, 1 hellbark_wood biomesoplenty:hellbark_wood, 1 brass_block create:brass_block, 1 rose_quartz_block silentgems:rose_quartz_block, 1 air minecraft:air, 1 gray_terracotta minecraft:gray_terracotta, 1 pink_stained_glass minecraft:pink_stained_glass, 1 brown_stone_bricks domum_ornamentum:brown_stone_bricks, 1 air minecraft:air, 1 green_framed_glass quark:green_framed_glass, 1 white_paper_extra domum_ornamentum:white_paper_extra, 1 brown_concrete minecraft:brown_concrete, 1 fir_log biomesoplenty:fir_log, 1 redwood_wood biomesoplenty:redwood_wood, 1 white_cherry_leaves biomesoplenty:white_cherry_leaves, 1 air minecraft:air, 1 blue_blossom_leaves quark:blue_blossom_leaves, 1 dead_wood biomesoplenty:dead_wood, 1 pink_brick_extra domum_ornamentum:pink_brick_extra, 1 purple_archwood_log ars_nouveau:purple_archwood_log, 1 orange_framed_glass quark:orange_framed_glass, 1 stripped_crimson_stem minecraft:stripped_crimson_stem, 1 dead_leaves biomesoplenty:dead_leaves, 1 stripped_mahogany_log biomesoplenty:stripped_mahogany_log, 1 birch_leaves minecraft:birch_leaves, 1 stripped_acacia_log minecraft:stripped_acacia_log, 1 chiseled_quartz_block minecraft:chiseled_quartz_block, 1 stripped_jungle_log minecraft:stripped_jungle_log, 1 air minecraft:air, 1 air minecraft:air, 1 air minecraft:air, 1 stripped_jacaranda_log biomesoplenty:stripped_jacaranda_log, 1 light_blue_wool minecraft:light_blue_wool, 1 framed_glass create:framed_glass, 1 jungle_log minecraft:jungle_log, 1 neptunium_block aquaculture:neptunium_block, 1 stripped_purple_archwood_wood ars_nouveau:stripped_purple_archwood_wood, 1 oak_log minecraft:oak_log, 1 mahogany_wood biomesoplenty:mahogany_wood, 1 air minecraft:air, 1 topaz_block silentgems:topaz_block, 1 netherite_block minecraft:netherite_block, 1 paper_extra domum_ornamentum:paper_extra, 1 alexandrite_block silentgems:alexandrite_block, 1 storage_uranium immersiveengineering:storage_uranium, 1 orange_stained_glass minecraft:orange_stained_glass, 1 air minecraft:air, 1 terracotta minecraft:terracotta, 1 stripped_oak_wood minecraft:stripped_oak_wood, 1 glowing_moss_block biomesoplenty:glowing_moss_block, 1 peridot_block silentgems:peridot_block, 1 purple_framed_glass quark:purple_framed_glass, 1 stripped_netherwood_log silentgear:stripped_netherwood_log, 1 coarse_dirt minecraft:coarse_dirt, 1 light_gray_wool minecraft:light_gray_wool, 1 cream_stone_bricks domum_ornamentum:cream_stone_bricks, 1 moss_block minecraft:moss_block, 1 black_terracotta minecraft:black_terracotta, 1 stripped_hellbark_wood biomesoplenty:stripped_hellbark_wood, 1 azalea_leaves minecraft:azalea_leaves, 1 wheat_extra domum_ornamentum:wheat_extra, 1 spruce_leaves minecraft:spruce_leaves, 1 stripped_netherwood_wood silentgear:stripped_netherwood_wood, 1 green_cobblestone_extra domum_ornamentum:green_cobblestone_extra, 1 lime_stained_glass minecraft:lime_stained_glass, 1 sapphire_block silentgems:sapphire_block, 1 red_terracotta minecraft:red_terracotta, 1 air minecraft:air, 1 spruce_wood minecraft:spruce_wood, 1 tyrian_steel_block silentgear:tyrian_steel_block, 1 dark_oak_wood minecraft:dark_oak_wood, 1 stripped_jungle_wood minecraft:stripped_jungle_wood, 1 air minecraft:air, 1 netherrack minecraft:netherrack, 1 blaze_gold_block silentgear:blaze_gold_block, 1 jacaranda_leaves biomesoplenty:jacaranda_leaves, 1 flax_block supplementaries:flax_block, 1 orange_concrete minecraft:orange_concrete, 1 magenta_terracotta minecraft:magenta_terracotta, 1 stripped_cinnamon_wood croptopia:stripped_cinnamon_wood, 1 stripped_cherry_log biomesoplenty:stripped_cherry_log, 1 cyan_terracotta minecraft:cyan_terracotta, 1 white_diamond_block silentgems:white_diamond_block, 1 yellow_terracotta minecraft:yellow_terracotta, 1 green_terracotta minecraft:green_terracotta, 1 stripped_willow_wood biomesoplenty:stripped_willow_wood, 1 flowering_azalea_leaves minecraft:flowering_azalea_leaves, 1 blue_brick_extra domum_ornamentum:blue_brick_extra, 1 maple_leaves biomesoplenty:maple_leaves, 1 iron_block minecraft:iron_block, 1 stripped_dead_wood biomesoplenty:stripped_dead_wood, 1 warped_wart_block minecraft:warped_wart_block, 1 blue_concrete minecraft:blue_concrete, 1 dirt minecraft:dirt, 1 orange_brick_extra domum_ornamentum:orange_brick_extra, 1 warped_stem minecraft:warped_stem, 1 lime_concrete minecraft:lime_concrete, 1 stripped_blue_archwood_log ars_nouveau:stripped_blue_archwood_log, 1 gray_wool minecraft:gray_wool, 1 light_blue_terracotta minecraft:light_blue_terracotta, 1 purple_stained_glass minecraft:purple_stained_glass, 1 charcoal_block quark:charcoal_block, 1 netherwood_leaves silentgear:netherwood_leaves, 1 storage_steel immersiveengineering:storage_steel, 1 magenta_concrete minecraft:magenta_concrete, 1 red_framed_glass quark:red_framed_glass, 1 acacia_leaves minecraft:acacia_leaves, 1 oxidized_copper minecraft:oxidized_copper, 1 azure_silver_block silentgear:azure_silver_block, 1 air minecraft:air, 1 yellow_brick_extra domum_ornamentum:yellow_brick_extra, 1 cyan_concrete minecraft:cyan_concrete, 1 lapis_block minecraft:lapis_block, 1 stripped_red_archwood_wood ars_nouveau:stripped_red_archwood_wood, 1 spruce_log minecraft:spruce_log, 1 yellow_autumn_leaves biomesoplenty:yellow_autumn_leaves, 1 moldavite_block silentgems:moldavite_block, 1 stripped_birch_log minecraft:stripped_birch_log, 1 pink_wool minecraft:pink_wool, 1 netherwood_log silentgear:netherwood_log, 1 stripped_warped_stem minecraft:stripped_warped_stem, 1 red_archwood_log ars_nouveau:red_archwood_log, 1 light_gray_concrete minecraft:light_gray_concrete, 1 quartz_block minecraft:quartz_block, 1 stripped_jacaranda_wood biomesoplenty:stripped_jacaranda_wood, 1 black_stained_glass minecraft:black_stained_glass, 1 stripped_crimson_hyphae minecraft:stripped_crimson_hyphae, 1 waxed_copper_block minecraft:waxed_copper_block, 1 iolite_block silentgems:iolite_block, 1 polished_basalt minecraft:polished_basalt, 1 nether_wart_block minecraft:nether_wart_block, 1 snow_block minecraft:snow_block, 1 crimson_nylium minecraft:crimson_nylium, 1 stripped_dead_log biomesoplenty:stripped_dead_log, 1 smooth_basalt minecraft:smooth_basalt, 1 glass minecraft:glass, 1 stripped_green_archwood_log ars_nouveau:stripped_green_archwood_log, 1 hay_block minecraft:hay_block, 1 waxed_oxidized_copper minecraft:waxed_oxidized_copper, 1 air minecraft:air, 1 exposed_copper minecraft:exposed_copper, 1 light_blue_brick_extra domum_ornamentum:light_blue_brick_extra, 1 white_brick_extra domum_ornamentum:white_brick_extra, 1 stripped_warped_hyphae minecraft:stripped_warped_hyphae, 1 fir_wood biomesoplenty:fir_wood]]
}

java.lang.IllegalArgumentException: ItemStack value must not be empty. 1 air minecraft:air
	at mezz.jei.util.ErrorUtil.checkNotEmpty(ErrorUtil.java:209) ~[jei-1.18.1-9.1.2.61.jar%23123!:9.1.2.61]
	at mezz.jei.plugins.vanilla.ingredients.item.ItemStackHelper.getUniqueId(ItemStackHelper.java:82) ~[jei-1.18.1-9.1.2.61.jar%23123!:9.1.2.61]
	at mezz.jei.plugins.vanilla.ingredients.item.ItemStackHelper.getUniqueId(ItemStackHelper.java:30) ~[jei-1.18.1-9.1.2.61.jar%23123!:9.1.2.61]
	at mezz.jei.recipes.RecipeMap.addRecipe(RecipeMap.java:94) ~[jei-1.18.1-9.1.2.61.jar%23123!:9.1.2.61]
	at mezz.jei.recipes.RecipeMap.addRecipe(RecipeMap.java:75) ~[jei-1.18.1-9.1.2.61.jar%23123!:9.1.2.61]
	at mezz.jei.recipes.RecipeManagerInternal.addRecipe(RecipeManagerInternal.java:111) ~[jei-1.18.1-9.1.2.61.jar%23123!:9.1.2.61]
	at mezz.jei.recipes.RecipeManagerInternal.addRecipe(RecipeManagerInternal.java:94) ~[jei-1.18.1-9.1.2.61.jar%23123!:9.1.2.61]
	at mezz.jei.recipes.RecipeManagerInternal.addRecipes(RecipeManagerInternal.java:88) ~[jei-1.18.1-9.1.2.61.jar%23123!:9.1.2.61]
	at mezz.jei.load.registration.RecipeRegistration.addRecipes(RecipeRegistration.java:58) ~[jei-1.18.1-9.1.2.61.jar%23123!:9.1.2.61]
	at com.ldtteam.domumornamentum.jei.JEIPlugin.registerRecipes(JEIPlugin.java:63) ~[domum_ornamentum-1.18-1.0.31-ALPHA-universal.jar%2393!:1.18-1.0.31-ALPHA]
	at mezz.jei.load.PluginLoader.lambda$createRecipeManager$9(PluginLoader.java:139) ~[jei-1.18.1-9.1.2.61.jar%23123!:9.1.2.61]
	at mezz.jei.load.PluginCaller.callOnPlugins(PluginCaller.java:26) ~[jei-1.18.1-9.1.2.61.jar%23123!:9.1.2.61]
	at mezz.jei.load.PluginLoader.createRecipeManager(PluginLoader.java:139) ~[jei-1.18.1-9.1.2.61.jar%23123!:9.1.2.61]
	at mezz.jei.startup.JeiStarter.start(JeiStarter.java:85) ~[jei-1.18.1-9.1.2.61.jar%23123!:9.1.2.61]
	at mezz.jei.startup.ClientLifecycleHandler.startJEI(ClientLifecycleHandler.java:134) ~[jei-1.18.1-9.1.2.61.jar%23123!:9.1.2.61]
	at mezz.jei.startup.ClientLifecycleHandler.setupJEI(ClientLifecycleHandler.java:123) ~[jei-1.18.1-9.1.2.61.jar%23123!:9.1.2.61]
	at mezz.jei.startup.ClientLifecycleHandler.lambda$new$2(ClientLifecycleHandler.java:107) ~[jei-1.18.1-9.1.2.61.jar%23123!:9.1.2.61]
	at net.minecraftforge.eventbus.EventBus.doCastFilter(EventBus.java:247) ~[eventbus-5.0.3.jar%232!:?]
	at net.minecraftforge.eventbus.EventBus.lambda$addListener$11(EventBus.java:239) ~[eventbus-5.0.3.jar%232!:?]
	at net.minecraftforge.eventbus.EventBus.post(EventBus.java:302) ~[eventbus-5.0.3.jar%232!:?]
	at net.minecraftforge.eventbus.EventBus.post(EventBus.java:283) ~[eventbus-5.0.3.jar%232!:?]
	at net.minecraftforge.client.ForgeHooksClient.onRecipesUpdated(ForgeHooksClient.java:677) ~[forge-1.18.1-39.0.10-universal.jar%23194!:?]
	at net.minecraft.client.multiplayer.ClientPacketListener.m_6327_(ClientPacketListener.java:1166) ~[client-1.18.1-20211210.034407-srg.jar%23190!:?]
	at net.minecraft.network.protocol.game.ClientboundUpdateRecipesPacket.m_5797_(ClientboundUpdateRecipesPacket.java:32) ~[client-1.18.1-20211210.034407-srg.jar%23190!:?]
	at net.minecraft.network.protocol.game.ClientboundUpdateRecipesPacket.m_5797_(ClientboundUpdateRecipesPacket.java:14) ~[client-1.18.1-20211210.034407-srg.jar%23190!:?]
	at net.minecraft.network.protocol.PacketUtils.m_131356_(PacketUtils.java:21) ~[client-1.18.1-20211210.034407-srg.jar%23190!:?]
	at net.minecraft.util.thread.BlockableEventLoop.m_6367_(BlockableEventLoop.java:151) ~[client-1.18.1-20211210.034407-srg.jar%23190!:?]
	at net.minecraft.util.thread.ReentrantBlockableEventLoop.m_6367_(ReentrantBlockableEventLoop.java:23) ~[client-1.18.1-20211210.034407-srg.jar%23190!:?]
	at net.minecraft.util.thread.BlockableEventLoop.m_7245_(BlockableEventLoop.java:125) ~[client-1.18.1-20211210.034407-srg.jar%23190!:?]
	at net.minecraft.util.thread.BlockableEventLoop.m_18699_(BlockableEventLoop.java:110) ~[client-1.18.1-20211210.034407-srg.jar%23190!:?]
	at net.minecraft.client.Minecraft.m_91383_(Minecraft.java:1009) ~[client-1.18.1-20211210.034407-srg.jar%23190!:?]
	at net.minecraft.client.Minecraft.m_91374_(Minecraft.java:660) ~[client-1.18.1-20211210.034407-srg.jar%23190!:?]
	at net.minecraft.client.main.Main.main(Main.java:205) ~[client-1.18.1-20211210.034407-srg.jar%23190!:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:568) ~[?:?]
	at net.minecraftforge.fml.loading.targets.CommonClientLaunchHandler.lambda$launchService$0(CommonClientLaunchHandler.java:45) ~[fmlloader-1.18.1-39.0.10.jar%2323!:?]
	at cpw.mods.modlauncher.LaunchServiceHandlerDecorator.launch(LaunchServiceHandlerDecorator.java:37) [modlauncher-9.0.7.jar%235!:?]
	at cpw.mods.modlauncher.LaunchServiceHandler.launch(LaunchServiceHandler.java:53) [modlauncher-9.0.7.jar%235!:?]
	at cpw.mods.modlauncher.LaunchServiceHandler.launch(LaunchServiceHandler.java:71) [modlauncher-9.0.7.jar%235!:?]
	at cpw.mods.modlauncher.Launcher.run(Launcher.java:106) [modlauncher-9.0.7.jar%235!:?]
	at cpw.mods.modlauncher.Launcher.main(Launcher.java:77) [modlauncher-9.0.7.jar%235!:?]
	at cpw.mods.modlauncher.BootstrapLaunchConsumer.accept(BootstrapLaunchConsumer.java:26) [modlauncher-9.0.7.jar%235!:?]
	at cpw.mods.modlauncher.BootstrapLaunchConsumer.accept(BootstrapLaunchConsumer.java:23) [modlauncher-9.0.7.jar%235!:?]
	at cpw.mods.bootstraplauncher.BootstrapLauncher.main(BootstrapLauncher.java:90) [bootstraplauncher-0.1.17.jar:?]
[16:23:50] [Render thread/ERROR]: Found a broken recipe: Domum Ornamentum domum_ornamentum:shingle class com.ldtteam.domumornamentum.recipe.architectscutter.ArchitectsCutterRecipe {
  Outputs:
    net.minecraft.world.item.ItemStack: [[4 shingle domum_ornamentum:shingle nbt:{textureData:{"minecraft:block/clay":"minecraft:clay","minecraft:block/oak_planks":"minecraft:oak_planks"}}]]
  Inputs:
    net.minecraft.world.item.ItemStack: [[1 paper_extra domum_ornamentum:paper_extra, 1 stripped_purple_archwood_wood ars_nouveau:stripped_purple_archwood_wood, 1 pink_concrete minecraft:pink_concrete, 1 obsidian minecraft:obsidian, 1 cream_stone_bricks domum_ornamentum:cream_stone_bricks, 1 infested_cobblestone minecraft:infested_cobblestone, 1 topaz_block silentgems:topaz_block, 1 palm_wood biomesoplenty:palm_wood, 1 beige_stone_bricks domum_ornamentum:beige_stone_bricks, 1 willow_leaves biomesoplenty:willow_leaves, 1 yellow_blossom_leaves quark:yellow_blossom_leaves, 1 hellbark_leaves biomesoplenty:hellbark_leaves, 1 acacia_leaves minecraft:acacia_leaves, 1 ruby_block silentgems:ruby_block, 1 azure_silver_block silentgear:azure_silver_block, 1 light_blue_stained_glass minecraft:light_blue_stained_glass, 1 purple_archwood_log ars_nouveau:purple_archwood_log, 1 dirt minecraft:dirt, 1 orange_terracotta minecraft:orange_terracotta, 1 air minecraft:air, 1 blackstone minecraft:blackstone, 1 blaze_gold_block silentgear:blaze_gold_block, 1 light_gray_stained_glass minecraft:light_gray_stained_glass, 1 storage_uranium immersiveengineering:storage_uranium, 1 redwood_wood biomesoplenty:redwood_wood, 1 storage_nickel immersiveengineering:storage_nickel, 1 heliodor_block silentgems:heliodor_block, 1 stripped_dark_oak_log minecraft:stripped_dark_oak_log, 1 hellbark_log biomesoplenty:hellbark_log, 1 glass_connected cyclic:glass_connected, 1 cut_sandstone minecraft:cut_sandstone, 1 stripped_jungle_wood minecraft:stripped_jungle_wood, 1 chiseled_sandstone minecraft:chiseled_sandstone, 1 moss_block minecraft:moss_block, 1 wheat_extra domum_ornamentum:wheat_extra, 1 dark_oak_planks minecraft:dark_oak_planks, 1 diamond_block minecraft:diamond_block, 1 yellow_wool minecraft:yellow_wool, 1 air minecraft:air, 1 stripped_oak_wood minecraft:stripped_oak_wood, 1 purple_archwood_leaves ars_nouveau:purple_archwood_leaves, 1 sandstone minecraft:sandstone, 1 dead_log biomesoplenty:dead_log, 1 mossy_stone_bricks minecraft:mossy_stone_bricks, 1 air minecraft:air, 1 orange_blossom_leaves quark:orange_blossom_leaves, 1 light_gray_terracotta minecraft:light_gray_terracotta, 1 netherrack minecraft:netherrack, 1 snow_block minecraft:snow_block, 1 quartz_block minecraft:quartz_block, 1 air minecraft:air, 1 stripped_magic_log biomesoplenty:stripped_magic_log, 1 purple_stained_glass minecraft:purple_stained_glass, 1 polished_calcite quark:polished_calcite, 1 oxidized_copper minecraft:oxidized_copper, 1 cyan_framed_glass quark:cyan_framed_glass, 1 stone minecraft:stone, 1 framed_glass quark:framed_glass, 1 waxed_exposed_copper minecraft:waxed_exposed_copper, 1 copper_block minecraft:copper_block, 1 exposed_copper minecraft:exposed_copper, 1 black_concrete minecraft:black_concrete, 1 gray_brick_extra domum_ornamentum:gray_brick_extra, 1 blue_archwood_leaves ars_nouveau:blue_archwood_leaves, 1 orange_autumn_leaves biomesoplenty:orange_autumn_leaves, 1 waxed_oxidized_cut_copper minecraft:waxed_oxidized_cut_copper, 1 stripped_warped_stem minecraft:stripped_warped_stem, 1 oak_planks minecraft:oak_planks, 1 brick_extra domum_ornamentum:brick_extra, 1 jungle_planks minecraft:jungle_planks, 1 light_gray_concrete minecraft:light_gray_concrete, 1 polished_andesite minecraft:polished_andesite, 1 oak_wood minecraft:oak_wood, 1 jungle_log minecraft:jungle_log, 1 magic_wood biomesoplenty:magic_wood, 1 moldavite_block silentgems:moldavite_block, 1 coal_block minecraft:coal_block, 1 yellow_terracotta minecraft:yellow_terracotta, 1 red_archwood_leaves ars_nouveau:red_archwood_leaves, 1 fir_leaves biomesoplenty:fir_leaves, 1 redwood_log biomesoplenty:redwood_log, 1 air minecraft:air, 1 blue_concrete minecraft:blue_concrete, 1 air minecraft:air, 1 emerald_block minecraft:emerald_block, 1 mahogany_leaves biomesoplenty:mahogany_leaves, 1 stripped_acacia_log minecraft:stripped_acacia_log, 1 warped_hyphae minecraft:warped_hyphae, 1 rose_quartz_block silentgems:rose_quartz_block, 1 neptunium_block aquaculture:neptunium_block, 1 crimson_stem minecraft:crimson_stem, 1 blue_framed_glass quark:blue_framed_glass, 1 polished_shale quark:polished_shale, 1 green_framed_glass quark:green_framed_glass, 1 stripped_spruce_log minecraft:stripped_spruce_log, 1 polished_blackstone minecraft:polished_blackstone, 1 gray_stained_glass minecraft:gray_stained_glass, 1 cherry_log biomesoplenty:cherry_log, 1 air minecraft:air, 1 horizontal_framed_glass create:horizontal_framed_glass, 1 willow_wood biomesoplenty:willow_wood, 1 black_stained_glass minecraft:black_stained_glass, 1 storage_lead immersiveengineering:storage_lead, 1 green_stained_glass minecraft:green_stained_glass, 1 feather_block supplementaries:feather_block, 1 polished_myalite quark:polished_myalite, 1 stripped_green_archwood_log ars_nouveau:stripped_green_archwood_log, 1 stripped_acacia_wood minecraft:stripped_acacia_wood, 1 dead_leaves biomesoplenty:dead_leaves, 1 limestone quark:limestone, 1 yellow_stained_glass minecraft:yellow_stained_glass, 1 lime_brick_extra domum_ornamentum:lime_brick_extra, 1 oak_leaves minecraft:oak_leaves, 1 granite minecraft:granite, 1 black_diamond_block silentgems:black_diamond_block, 1 stripped_red_archwood_log ars_nouveau:stripped_red_archwood_log, 1 blue_brick_extra domum_ornamentum:blue_brick_extra, 1 orange_stained_glass minecraft:orange_stained_glass, 1 smooth_red_sandstone minecraft:smooth_red_sandstone, 1 citrine_block silentgems:citrine_block, 1 stripped_cinnamon_log croptopia:stripped_cinnamon_log, 1 cobblestone minecraft:cobblestone, 1 orange_wool minecraft:orange_wool, 1 cinnamon_log croptopia:cinnamon_log, 1 lime_wool minecraft:lime_wool, 1 air minecraft:air, 1 jacaranda_planks biomesoplenty:jacaranda_planks, 1 yellow_autumn_leaves biomesoplenty:yellow_autumn_leaves, 1 pink_brick_extra domum_ornamentum:pink_brick_extra, 1 air minecraft:air, 1 storage_steel immersiveengineering:storage_steel, 1 purple_terracotta minecraft:purple_terracotta, 1 crimson_steel_block silentgear:crimson_steel_block, 1 stripped_cinnamon_wood croptopia:stripped_cinnamon_wood, 1 azure_electrum_block silentgear:azure_electrum_block, 1 stripped_cherry_log biomesoplenty:stripped_cherry_log, 1 air minecraft:air, 1 red_wool minecraft:red_wool, 1 mahogany_wood biomesoplenty:mahogany_wood, 1 polished_granite minecraft:polished_granite, 1 red_sandstone minecraft:red_sandstone, 1 redwood_planks biomesoplenty:redwood_planks, 1 fir_wood biomesoplenty:fir_wood, 1 purpur_pillar minecraft:purpur_pillar, 1 white_stained_glass minecraft:white_stained_glass, 1 green_terracotta minecraft:green_terracotta, 1 brown_wool minecraft:brown_wool, 1 weathered_copper minecraft:weathered_copper, 1 netherwood_log silentgear:netherwood_log, 1 air minecraft:air, 1 brown_framed_glass quark:brown_framed_glass, 1 green_brick_extra domum_ornamentum:green_brick_extra, 1 polished_basalt minecraft:polished_basalt, 1 stripped_red_archwood_wood ars_nouveau:stripped_red_archwood_wood, 1 maple_leaves biomesoplenty:maple_leaves, 1 stripped_mahogany_wood biomesoplenty:stripped_mahogany_wood, 1 waxed_cut_copper minecraft:waxed_cut_copper, 1 cyan_wool minecraft:cyan_wool, 1 black_framed_glass quark:black_framed_glass, 1 purple_concrete minecraft:purple_concrete, 1 chiseled_quartz_block minecraft:chiseled_quartz_block, 1 turquoise_block silentgems:turquoise_block, 1 mycelium minecraft:mycelium, 1 hay_block minecraft:hay_block, 1 beige_bricks domum_ornamentum:beige_bricks, 1 green_archwood_leaves ars_nouveau:green_archwood_leaves, 1 green_cobblestone_extra domum_ornamentum:green_cobblestone_extra, 1 umbran_leaves biomesoplenty:umbran_leaves, 1 flint_block supplementaries:flint_block, 1 flax_block supplementaries:flax_block, 1 pink_terracotta minecraft:pink_terracotta, 1 warped_stem minecraft:warped_stem, 1 pink_cherry_leaves biomesoplenty:pink_cherry_leaves, 1 smooth_basalt minecraft:smooth_basalt, 1 netherite_block minecraft:netherite_block, 1 lime_stained_glass minecraft:lime_stained_glass, 1 stripped_green_archwood_wood ars_nouveau:stripped_green_archwood_wood, 1 birch_wood minecraft:birch_wood, 1 cracked_stone_bricks minecraft:cracked_stone_bricks, 1 mossy_cobblestone minecraft:mossy_cobblestone, 1 magenta_framed_glass quark:magenta_framed_glass, 1 white_diamond_block silentgems:white_diamond_block, 1 acacia_log minecraft:acacia_log, 1 cyan_concrete minecraft:cyan_concrete, 1 stripped_willow_wood biomesoplenty:stripped_willow_wood, 1 pink_stained_glass minecraft:pink_stained_glass, 1 magenta_brick_extra domum_ornamentum:magenta_brick_extra, 1 stripped_jacaranda_log biomesoplenty:stripped_jacaranda_log, 1 blue_archwood_log ars_nouveau:blue_archwood_log, 1 green_wool minecraft:green_wool, 1 purple_framed_glass quark:purple_framed_glass, 1 purple_wool minecraft:purple_wool, 1 crimson_planks minecraft:crimson_planks, 1 stripped_fir_log biomesoplenty:stripped_fir_log, 1 brown_concrete minecraft:brown_concrete, 1 warped_nylium minecraft:warped_nylium, 1 orange_framed_glass quark:orange_framed_glass, 1 stripped_spruce_wood minecraft:stripped_spruce_wood, 1 magenta_terracotta minecraft:magenta_terracotta, 1 stripped_warped_hyphae minecraft:stripped_warped_hyphae, 1 jungle_leaves minecraft:jungle_leaves, 1 zinc_block create:zinc_block, 1 andesite minecraft:andesite, 1 shale quark:shale, 1 black_brick_extra domum_ornamentum:black_brick_extra, 1 magic_planks biomesoplenty:magic_planks, 1 tyrian_steel_block silentgear:tyrian_steel_block, 1 blue_stained_glass minecraft:blue_stained_glass, 1 cyan_terracotta minecraft:cyan_terracotta, 1 netherwood_wood silentgear:netherwood_wood, 1 air minecraft:air, 1 flowering_oak_leaves biomesoplenty:flowering_oak_leaves, 1 glass minecraft:glass, 1 crimson_hyphae minecraft:crimson_hyphae, 1 mahogany_log biomesoplenty:mahogany_log, 1 white_terracotta minecraft:white_terracotta, 1 polished_deepslate minecraft:polished_deepslate, 1 tiled_glass create:tiled_glass, 1 stripped_palm_log biomesoplenty:stripped_palm_log, 1 dark_oak_log minecraft:dark_oak_log, 1 magic_leaves biomesoplenty:magic_leaves, 1 light_gray_wool minecraft:light_gray_wool, 1 air minecraft:air, 1 polished_jasper quark:polished_jasper, 1 blue_wool minecraft:blue_wool, 1 blue_blossom_leaves quark:blue_blossom_leaves, 1 stripped_jungle_log minecraft:stripped_jungle_log, 1 ammolite_block silentgems:ammolite_block, 1 fir_planks biomesoplenty:fir_planks, 1 gray_terracotta minecraft:gray_terracotta, 1 storage_electrum immersiveengineering:storage_electrum, 1 oak_log minecraft:oak_log, 1 grass_block minecraft:grass_block, 1 peridot_block silentgems:peridot_block, 1 storage_aluminum immersiveengineering:storage_aluminum, 1 vertical_framed_glass create:vertical_framed_glass, 1 light_blue_concrete minecraft:light_blue_concrete, 1 yellow_concrete minecraft:yellow_concrete, 1 bort_block silentgear:bort_block, 1 dark_oak_wood minecraft:dark_oak_wood, 1 dirty_glass quark:dirty_glass, 1 brown_brick_extra domum_ornamentum:brown_brick_extra, 1 mahogany_planks biomesoplenty:mahogany_planks, 1 magenta_stained_glass minecraft:magenta_stained_glass, 1 air minecraft:air, 1 flowering_azalea_leaves minecraft:flowering_azalea_leaves, 1 stripped_redwood_wood biomesoplenty:stripped_redwood_wood, 1 smooth_quartz minecraft:smooth_quartz, 1 stripped_dead_wood biomesoplenty:stripped_dead_wood, 1 stripped_cherry_wood biomesoplenty:stripped_cherry_wood, 1 stripped_fir_wood biomesoplenty:stripped_fir_wood, 1 brown_bricks domum_ornamentum:brown_bricks, 1 stripped_hellbark_log biomesoplenty:stripped_hellbark_log, 1 cream_bricks domum_ornamentum:cream_bricks, 1 carnelian_block silentgems:carnelian_block, 1 stripped_oak_log minecraft:stripped_oak_log, 1 air minecraft:air, 1 cinnamon_wood croptopia:cinnamon_wood, 1 jacaranda_log biomesoplenty:jacaranda_log, 1 white_paper_extra domum_ornamentum:white_paper_extra, 1 coarse_dirt minecraft:coarse_dirt, 1 stripped_birch_wood minecraft:stripped_birch_wood, 1 white_wool minecraft:white_wool, 1 yellow_framed_glass quark:yellow_framed_glass, 1 stripped_crimson_hyphae minecraft:stripped_crimson_hyphae, 1 rainbow_birch_leaves biomesoplenty:rainbow_birch_leaves, 1 cobbled_deepslate minecraft:cobbled_deepslate, 1 waxed_exposed_cut_copper minecraft:waxed_exposed_cut_copper, 1 air minecraft:air, 1 light_gray_brick_extra domum_ornamentum:light_gray_brick_extra, 1 budding_amethyst minecraft:budding_amethyst, 1 waxed_weathered_copper minecraft:waxed_weathered_copper, 1 quartz_bricks minecraft:quartz_bricks, 1 kyanite_block silentgems:kyanite_block, 1 purple_brick_extra domum_ornamentum:purple_brick_extra, 1 blue_cobblestone_extra domum_ornamentum:blue_cobblestone_extra, 1 magenta_wool minecraft:magenta_wool, 1 light_blue_terracotta minecraft:light_blue_terracotta, 1 smooth_stone minecraft:smooth_stone, 1 stripped_dark_oak_wood minecraft:stripped_dark_oak_wood, 1 clay minecraft:clay, 1 netherwood_leaves silentgear:netherwood_leaves, 1 light_blue_framed_glass quark:light_blue_framed_glass, 1 air minecraft:air, 1 storage_silver immersiveengineering:storage_silver, 1 magenta_concrete minecraft:magenta_concrete, 1 purple_cobblestone_extra domum_ornamentum:purple_cobblestone_extra, 1 brown_stained_glass minecraft:brown_stained_glass, 1 origin_grass_block biomesoplenty:origin_grass_block, 1 palm_log biomesoplenty:palm_log, 1 cyan_brick_extra domum_ornamentum:cyan_brick_extra, 1 black_wool minecraft:black_wool, 1 white_framed_glass quark:white_framed_glass, 1 dead_wood biomesoplenty:dead_wood, 1 gray_framed_glass quark:gray_framed_glass, 1 red_blossom_leaves quark:red_blossom_leaves, 1 lapis_block minecraft:lapis_block, 1 jasper quark:jasper, 1 lime_concrete minecraft:lime_concrete, 1 warped_wart_block minecraft:warped_wart_block, 1 willow_log biomesoplenty:willow_log, 1 basalt minecraft:basalt, 1 air minecraft:air, 1 air minecraft:air, 1 stripped_netherwood_wood silentgear:stripped_netherwood_wood, 1 red_nether_bricks minecraft:red_nether_bricks, 1 origin_leaves biomesoplenty:origin_leaves, 1 gold_block minecraft:gold_block, 1 oxidized_cut_copper minecraft:oxidized_cut_copper, 1 yellow_brick_extra domum_ornamentum:yellow_brick_extra, 1 palm_planks biomesoplenty:palm_planks, 1 air minecraft:air, 1 polished_blackstone_bricks minecraft:polished_blackstone_bricks, 1 stripped_dead_log biomesoplenty:stripped_dead_log, 1 purpur_block minecraft:purpur_block, 1 stripped_mahogany_log biomesoplenty:stripped_mahogany_log, 1 cyan_stained_glass minecraft:cyan_stained_glass, 1 dead_planks biomesoplenty:dead_planks, 1 brass_block create:brass_block, 1 glowing_moss_block biomesoplenty:glowing_moss_block, 1 cherry_planks biomesoplenty:cherry_planks, 1 polished_limestone quark:polished_limestone, 1 stone_bricks minecraft:stone_bricks, 1 pink_wool minecraft:pink_wool, 1 light_blue_wool minecraft:light_blue_wool, 1 mossy_cobblestone_extra domum_ornamentum:mossy_cobblestone_extra, 1 gilded_blackstone minecraft:gilded_blackstone, 1 cactus_extra domum_ornamentum:cactus_extra, 1 smooth_sandstone minecraft:smooth_sandstone, 1 sapphire_block silentgems:sapphire_block, 1 hellbark_wood biomesoplenty:hellbark_wood, 1 air minecraft:air, 1 crimson_iron_block silentgear:crimson_iron_block, 1 crimson_nylium minecraft:crimson_nylium, 1 brown_terracotta minecraft:brown_terracotta, 1 jungle_wood minecraft:jungle_wood, 1 stripped_hellbark_wood biomesoplenty:stripped_hellbark_wood, 1 redwood_leaves biomesoplenty:redwood_leaves, 1 cut_red_sandstone minecraft:cut_red_sandstone, 1 green_concrete minecraft:green_concrete, 1 bricks minecraft:bricks, 1 framed_glass create:framed_glass, 1 pink_blossom_leaves quark:pink_blossom_leaves, 1 air minecraft:air, 1 fir_log biomesoplenty:fir_log, 1 chiseled_red_sandstone minecraft:chiseled_red_sandstone, 1 stripped_netherwood_log silentgear:stripped_netherwood_log, 1 end_stone minecraft:end_stone, 1 myalite quark:myalite, 1 spruce_wood minecraft:spruce_wood, 1 air minecraft:air, 1 jacaranda_wood biomesoplenty:jacaranda_wood, 1 spruce_planks minecraft:spruce_planks, 1 amethyst_block minecraft:amethyst_block, 1 weathered_cut_copper minecraft:weathered_cut_copper, 1 blue_terracotta minecraft:blue_terracotta, 1 air minecraft:air, 1 infested_stone minecraft:infested_stone, 1 green_archwood_log ars_nouveau:green_archwood_log, 1 gray_concrete minecraft:gray_concrete, 1 black_terracotta minecraft:black_terracotta, 1 acacia_planks minecraft:acacia_planks, 1 archwood_planks ars_nouveau:archwood_planks, 1 stripped_purple_archwood_log ars_nouveau:stripped_purple_archwood_log, 1 stripped_blue_archwood_wood ars_nouveau:stripped_blue_archwood_wood, 1 birch_leaves minecraft:birch_leaves, 1 lime_framed_glass quark:lime_framed_glass, 1 stripped_jacaranda_wood biomesoplenty:stripped_jacaranda_wood, 1 orange_concrete minecraft:orange_concrete, 1 podzol minecraft:podzol, 1 spruce_log minecraft:spruce_log, 1 lime_terracotta minecraft:lime_terracotta, 1 iolite_block silentgems:iolite_block, 1 jacaranda_leaves biomesoplenty:jacaranda_leaves, 1 willow_planks biomesoplenty:willow_planks, 1 red_stained_glass minecraft:red_stained_glass, 1 tuff minecraft:tuff, 1 light_gray_framed_glass quark:light_gray_framed_glass, 1 acacia_wood minecraft:acacia_wood, 1 umbran_wood biomesoplenty:umbran_wood, 1 netherwood_planks silentgear:netherwood_planks, 1 brown_stone_bricks domum_ornamentum:brown_stone_bricks, 1 umbran_planks biomesoplenty:umbran_planks, 1 nether_bricks minecraft:nether_bricks, 1 azalea_leaves minecraft:azalea_leaves, 1 deepslate_bricks minecraft:deepslate_bricks, 1 nether_wart_block minecraft:nether_wart_block, 1 gray_wool minecraft:gray_wool, 1 air minecraft:air, 1 packed_ice minecraft:packed_ice, 1 redstone_block minecraft:redstone_block, 1 green_cactus_extra domum_ornamentum:green_cactus_extra, 1 stripped_palm_wood biomesoplenty:stripped_palm_wood, 1 red_brick_extra domum_ornamentum:red_brick_extra, 1 waxed_oxidized_copper minecraft:waxed_oxidized_copper, 1 lavender_blossom_leaves quark:lavender_blossom_leaves, 1 charcoal_block quark:charcoal_block, 1 magic_log biomesoplenty:magic_log, 1 stripped_birch_log minecraft:stripped_birch_log, 1 palm_leaves biomesoplenty:palm_leaves, 1 hellbark_planks biomesoplenty:hellbark_planks, 1 red_archwood_log ars_nouveau:red_archwood_log, 1 waxed_weathered_cut_copper minecraft:waxed_weathered_cut_copper, 1 air minecraft:air, 1 chiseled_stone_bricks minecraft:chiseled_stone_bricks, 1 diorite minecraft:diorite, 1 iron_block minecraft:iron_block, 1 pink_framed_glass quark:pink_framed_glass, 1 deepslate minecraft:deepslate, 1 orange_brick_extra domum_ornamentum:orange_brick_extra, 1 polished_diorite minecraft:polished_diorite, 1 quartz_pillar minecraft:quartz_pillar, 1 white_concrete minecraft:white_concrete, 1 red_concrete minecraft:red_concrete, 1 stripped_blue_archwood_log ars_nouveau:stripped_blue_archwood_log, 1 waxed_copper_block minecraft:waxed_copper_block, 1 red_framed_glass quark:red_framed_glass, 1 birch_planks minecraft:birch_planks, 1 light_blue_brick_extra domum_ornamentum:light_blue_brick_extra, 1 birch_log minecraft:birch_log, 1 air minecraft:air, 1 stripped_magic_wood biomesoplenty:stripped_magic_wood, 1 rooted_dirt minecraft:rooted_dirt, 1 cherry_wood biomesoplenty:cherry_wood, 1 soap_block supplementaries:soap_block, 1 stripped_crimson_stem minecraft:stripped_crimson_stem, 1 white_cherry_leaves biomesoplenty:white_cherry_leaves, 1 umbran_log biomesoplenty:umbran_log, 1 warped_planks minecraft:warped_planks, 1 stripped_umbran_wood biomesoplenty:stripped_umbran_wood, 1 stripped_willow_log biomesoplenty:stripped_willow_log, 1 storage_constantan immersiveengineering:storage_constantan, 1 spruce_leaves minecraft:spruce_leaves, 1 red_terracotta minecraft:red_terracotta, 1 permafrost quark:permafrost, 1 terracotta minecraft:terracotta, 1 dark_oak_leaves minecraft:dark_oak_leaves, 1 stripped_redwood_log biomesoplenty:stripped_redwood_log, 1 cobblestone_extra domum_ornamentum:cobblestone_extra, 1 alexandrite_block silentgems:alexandrite_block, 1 white_brick_extra domum_ornamentum:white_brick_extra, 1 stripped_umbran_log biomesoplenty:stripped_umbran_log, 1 exposed_cut_copper minecraft:exposed_cut_copper], [1 stripped_netherwood_wood silentgear:stripped_netherwood_wood, 1 magic_planks biomesoplenty:magic_planks, 1 blue_archwood_log ars_nouveau:blue_archwood_log, 1 yellow_framed_glass quark:yellow_framed_glass, 1 hellbark_log biomesoplenty:hellbark_log, 1 mahogany_wood biomesoplenty:mahogany_wood, 1 dead_planks biomesoplenty:dead_planks, 1 green_archwood_log ars_nouveau:green_archwood_log, 1 brown_concrete minecraft:brown_concrete, 1 rose_quartz_block silentgems:rose_quartz_block, 1 smooth_red_sandstone minecraft:smooth_red_sandstone, 1 cyan_brick_extra domum_ornamentum:cyan_brick_extra, 1 light_gray_brick_extra domum_ornamentum:light_gray_brick_extra, 1 black_brick_extra domum_ornamentum:black_brick_extra, 1 stripped_crimson_hyphae minecraft:stripped_crimson_hyphae, 1 azure_silver_block silentgear:azure_silver_block, 1 light_blue_concrete minecraft:light_blue_concrete, 1 citrine_block silentgems:citrine_block, 1 light_gray_framed_glass quark:light_gray_framed_glass, 1 feather_block supplementaries:feather_block, 1 hellbark_planks biomesoplenty:hellbark_planks, 1 black_framed_glass quark:black_framed_glass, 1 orange_stained_glass minecraft:orange_stained_glass, 1 white_stained_glass minecraft:white_stained_glass, 1 magic_wood biomesoplenty:magic_wood, 1 polished_calcite quark:polished_calcite, 1 dark_oak_log minecraft:dark_oak_log, 1 cherry_log biomesoplenty:cherry_log, 1 framed_glass create:framed_glass, 1 stripped_redwood_log biomesoplenty:stripped_redwood_log, 1 stripped_purple_archwood_wood ars_nouveau:stripped_purple_archwood_wood, 1 white_brick_extra domum_ornamentum:white_brick_extra, 1 brown_terracotta minecraft:brown_terracotta, 1 gray_wool minecraft:gray_wool, 1 red_wool minecraft:red_wool, 1 heliodor_block silentgems:heliodor_block, 1 weathered_cut_copper minecraft:weathered_cut_copper, 1 zinc_block create:zinc_block, 1 magenta_framed_glass quark:magenta_framed_glass, 1 stripped_blue_archwood_log ars_nouveau:stripped_blue_archwood_log, 1 spruce_log minecraft:spruce_log, 1 exposed_copper minecraft:exposed_copper, 1 blue_concrete minecraft:blue_concrete, 1 stripped_jungle_log minecraft:stripped_jungle_log, 1 red_brick_extra domum_ornamentum:red_brick_extra, 1 obsidian minecraft:obsidian, 1 stripped_acacia_log minecraft:stripped_acacia_log, 1 willow_log biomesoplenty:willow_log, 1 amethyst_block minecraft:amethyst_block, 1 polished_blackstone minecraft:polished_blackstone, 1 lime_concrete minecraft:lime_concrete, 1 jungle_planks minecraft:jungle_planks, 1 sandstone minecraft:sandstone, 1 chiseled_sandstone minecraft:chiseled_sandstone, 1 storage_silver immersiveengineering:storage_silver, 1 green_concrete minecraft:green_concrete, 1 orange_concrete minecraft:orange_concrete, 1 stripped_cherry_log biomesoplenty:stripped_cherry_log, 1 stripped_dark_oak_log minecraft:stripped_dark_oak_log, 1 nether_wart_block minecraft:nether_wart_block, 1 polished_shale quark:polished_shale, 1 stripped_oak_log minecraft:stripped_oak_log, 1 polished_blackstone_bricks minecraft:polished_blackstone_bricks, 1 gray_framed_glass quark:gray_framed_glass, 1 stripped_cinnamon_log croptopia:stripped_cinnamon_log, 1 storage_steel immersiveengineering:storage_steel, 1 blue_cobblestone_extra domum_ornamentum:blue_cobblestone_extra, 1 dead_log biomesoplenty:dead_log, 1 end_stone minecraft:end_stone, 1 stripped_cinnamon_wood croptopia:stripped_cinnamon_wood, 1 green_terracotta minecraft:green_terracotta, 1 iolite_block silentgems:iolite_block, 1 crimson_planks minecraft:crimson_planks, 1 purple_brick_extra domum_ornamentum:purple_brick_extra, 1 storage_aluminum immersiveengineering:storage_aluminum, 1 mahogany_log biomesoplenty:mahogany_log, 1 coal_block minecraft:coal_block, 1 peridot_block silentgems:peridot_block, 1 dark_oak_planks minecraft:dark_oak_planks, 1 charcoal_block quark:charcoal_block, 1 stripped_warped_hyphae minecraft:stripped_warped_hyphae, 1 blaze_gold_block silentgear:blaze_gold_block, 1 gray_brick_extra domum_ornamentum:gray_brick_extra, 1 soap_block supplementaries:soap_block, 1 snow_block minecraft:snow_block, 1 purple_archwood_log ars_nouveau:purple_archwood_log, 1 waxed_exposed_copper minecraft:waxed_exposed_copper, 1 dead_wood biomesoplenty:dead_wood, 1 stripped_warped_stem minecraft:stripped_warped_stem, 1 waxed_weathered_copper minecraft:waxed_weathered_copper, 1 waxed_oxidized_copper minecraft:waxed_oxidized_copper, 1 stripped_umbran_log biomesoplenty:stripped_umbran_log, 1 lime_terracotta minecraft:lime_terracotta, 1 mossy_cobblestone minecraft:mossy_cobblestone, 1 hay_block minecraft:hay_block, 1 polished_deepslate minecraft:polished_deepslate, 1 polished_diorite minecraft:polished_diorite, 1 infested_cobblestone minecraft:infested_cobblestone, 1 glass minecraft:glass, 1 black_concrete minecraft:black_concrete, 1 birch_wood minecraft:birch_wood, 1 crimson_iron_block silentgear:crimson_iron_block, 1 waxed_weathered_cut_copper minecraft:waxed_weathered_cut_copper, 1 stripped_jungle_wood minecraft:stripped_jungle_wood, 1 fir_wood biomesoplenty:fir_wood, 1 purple_concrete minecraft:purple_concrete, 1 stripped_acacia_wood minecraft:stripped_acacia_wood, 1 red_sandstone minecraft:red_sandstone, 1 stripped_green_archwood_log ars_nouveau:stripped_green_archwood_log, 1 framed_glass quark:framed_glass, 1 netherrack minecraft:netherrack, 1 willow_planks biomesoplenty:willow_planks, 1 pink_brick_extra domum_ornamentum:pink_brick_extra, 1 mossy_stone_bricks minecraft:mossy_stone_bricks, 1 purple_terracotta minecraft:purple_terracotta, 1 polished_jasper quark:polished_jasper, 1 glass_connected cyclic:glass_connected, 1 crimson_stem minecraft:crimson_stem, 1 stripped_cherry_wood biomesoplenty:stripped_cherry_wood, 1 purpur_pillar minecraft:purpur_pillar, 1 fir_planks biomesoplenty:fir_planks, 1 kyanite_block silentgems:kyanite_block, 1 redstone_block minecraft:redstone_block, 1 redwood_wood biomesoplenty:redwood_wood, 1 palm_log biomesoplenty:palm_log, 1 paper_extra domum_ornamentum:paper_extra, 1 brown_framed_glass quark:brown_framed_glass, 1 flint_block supplementaries:flint_block, 1 limestone quark:limestone, 1 stripped_dark_oak_wood minecraft:stripped_dark_oak_wood, 1 beige_bricks domum_ornamentum:beige_bricks, 1 acacia_planks minecraft:acacia_planks, 1 light_gray_concrete minecraft:light_gray_concrete, 1 umbran_planks biomesoplenty:umbran_planks, 1 cut_sandstone minecraft:cut_sandstone, 1 cyan_wool minecraft:cyan_wool, 1 white_concrete minecraft:white_concrete, 1 mahogany_planks biomesoplenty:mahogany_planks, 1 spruce_wood minecraft:spruce_wood, 1 budding_amethyst minecraft:budding_amethyst, 1 spruce_planks minecraft:spruce_planks, 1 black_terracotta minecraft:black_terracotta, 1 gold_block minecraft:gold_block, 1 gray_stained_glass minecraft:gray_stained_glass, 1 smooth_stone minecraft:smooth_stone, 1 carnelian_block silentgems:carnelian_block, 1 jacaranda_wood biomesoplenty:jacaranda_wood, 1 light_blue_framed_glass quark:light_blue_framed_glass, 1 topaz_block silentgems:topaz_block, 1 cherry_wood biomesoplenty:cherry_wood, 1 cream_stone_bricks domum_ornamentum:cream_stone_bricks, 1 acacia_wood minecraft:acacia_wood, 1 storage_uranium immersiveengineering:storage_uranium, 1 black_stained_glass minecraft:black_stained_glass, 1 sapphire_block silentgems:sapphire_block, 1 green_brick_extra domum_ornamentum:green_brick_extra, 1 permafrost quark:permafrost, 1 iron_block minecraft:iron_block, 1 brown_stained_glass minecraft:brown_stained_glass, 1 warped_stem minecraft:warped_stem, 1 cobblestone_extra domum_ornamentum:cobblestone_extra, 1 diorite minecraft:diorite, 1 polished_basalt minecraft:polished_basalt, 1 stripped_fir_wood biomesoplenty:stripped_fir_wood, 1 lime_wool minecraft:lime_wool, 1 stripped_birch_log minecraft:stripped_birch_log, 1 chiseled_red_sandstone minecraft:chiseled_red_sandstone, 1 quartz_pillar minecraft:quartz_pillar, 1 blackstone minecraft:blackstone, 1 white_paper_extra domum_ornamentum:white_paper_extra, 1 purpur_block minecraft:purpur_block, 1 warped_planks minecraft:warped_planks, 1 redwood_planks biomesoplenty:redwood_planks, 1 red_terracotta minecraft:red_terracotta, 1 jasper quark:jasper, 1 jacaranda_log biomesoplenty:jacaranda_log, 1 light_gray_wool minecraft:light_gray_wool, 1 light_blue_terracotta minecraft:light_blue_terracotta, 1 stripped_red_archwood_wood ars_nouveau:stripped_red_archwood_wood, 1 fir_log biomesoplenty:fir_log, 1 stripped_hellbark_wood biomesoplenty:stripped_hellbark_wood, 1 stripped_magic_log biomesoplenty:stripped_magic_log, 1 netherwood_wood silentgear:netherwood_wood, 1 stripped_jacaranda_log biomesoplenty:stripped_jacaranda_log, 1 ammolite_block silentgems:ammolite_block, 1 emerald_block minecraft:emerald_block, 1 black_diamond_block silentgems:black_diamond_block, 1 stripped_dead_wood biomesoplenty:stripped_dead_wood, 1 stripped_birch_wood minecraft:stripped_birch_wood, 1 red_concrete minecraft:red_concrete, 1 red_framed_glass quark:red_framed_glass, 1 packed_ice minecraft:packed_ice, 1 stripped_crimson_stem minecraft:stripped_crimson_stem, 1 quartz_bricks minecraft:quartz_bricks, 1 infested_stone minecraft:infested_stone, 1 cyan_concrete minecraft:cyan_concrete, 1 magenta_wool minecraft:magenta_wool, 1 birch_planks minecraft:birch_planks, 1 cyan_stained_glass minecraft:cyan_stained_glass, 1 stripped_oak_wood minecraft:stripped_oak_wood, 1 oxidized_cut_copper minecraft:oxidized_cut_copper, 1 green_wool minecraft:green_wool, 1 magenta_brick_extra domum_ornamentum:magenta_brick_extra, 1 neptunium_block aquaculture:neptunium_block, 1 cinnamon_wood croptopia:cinnamon_wood, 1 oak_wood minecraft:oak_wood, 1 orange_brick_extra domum_ornamentum:orange_brick_extra, 1 palm_planks biomesoplenty:palm_planks, 1 brown_bricks domum_ornamentum:brown_bricks, 1 gray_concrete minecraft:gray_concrete, 1 deepslate_bricks minecraft:deepslate_bricks, 1 terracotta minecraft:terracotta, 1 dirty_glass quark:dirty_glass, 1 cyan_framed_glass quark:cyan_framed_glass, 1 cobblestone minecraft:cobblestone, 1 polished_myalite quark:polished_myalite, 1 chiseled_quartz_block minecraft:chiseled_quartz_block, 1 lime_framed_glass quark:lime_framed_glass, 1 bort_block silentgear:bort_block, 1 blue_framed_glass quark:blue_framed_glass, 1 wheat_extra domum_ornamentum:wheat_extra, 1 warped_wart_block minecraft:warped_wart_block, 1 black_wool minecraft:black_wool, 1 storage_electrum immersiveengineering:storage_electrum, 1 brown_wool minecraft:brown_wool, 1 stripped_jacaranda_wood biomesoplenty:stripped_jacaranda_wood, 1 alexandrite_block silentgems:alexandrite_block, 1 smooth_quartz minecraft:smooth_quartz, 1 purple_stained_glass minecraft:purple_stained_glass, 1 pink_framed_glass quark:pink_framed_glass, 1 green_framed_glass quark:green_framed_glass, 1 cactus_extra domum_ornamentum:cactus_extra, 1 blue_stained_glass minecraft:blue_stained_glass, 1 oak_planks minecraft:oak_planks, 1 crimson_hyphae minecraft:crimson_hyphae, 1 tiled_glass create:tiled_glass, 1 exposed_cut_copper minecraft:exposed_cut_copper, 1 dark_oak_wood minecraft:dark_oak_wood, 1 stripped_netherwood_log silentgear:stripped_netherwood_log, 1 cinnamon_log croptopia:cinnamon_log, 1 oxidized_copper minecraft:oxidized_copper, 1 white_wool minecraft:white_wool, 1 red_stained_glass minecraft:red_stained_glass, 1 green_cobblestone_extra domum_ornamentum:green_cobblestone_extra, 1 purple_framed_glass quark:purple_framed_glass, 1 chiseled_stone_bricks minecraft:chiseled_stone_bricks, 1 light_blue_brick_extra domum_ornamentum:light_blue_brick_extra, 1 stripped_palm_wood biomesoplenty:stripped_palm_wood, 1 yellow_stained_glass minecraft:yellow_stained_glass, 1 storage_nickel immersiveengineering:storage_nickel, 1 magenta_stained_glass minecraft:magenta_stained_glass, 1 pink_wool minecraft:pink_wool, 1 redwood_log biomesoplenty:redwood_log, 1 gilded_blackstone minecraft:gilded_blackstone, 1 netherite_block minecraft:netherite_block, 1 green_stained_glass minecraft:green_stained_glass, 1 brass_block create:brass_block, 1 stripped_redwood_wood biomesoplenty:stripped_redwood_wood, 1 stripped_green_archwood_wood ars_nouveau:stripped_green_archwood_wood, 1 lime_brick_extra domum_ornamentum:lime_brick_extra, 1 light_blue_stained_glass minecraft:light_blue_stained_glass, 1 stripped_spruce_log minecraft:stripped_spruce_log, 1 netherwood_log silentgear:netherwood_log, 1 smooth_basalt minecraft:smooth_basalt, 1 stripped_mahogany_log biomesoplenty:stripped_mahogany_log, 1 magenta_terracotta minecraft:magenta_terracotta, 1 pink_terracotta minecraft:pink_terracotta, 1 orange_wool minecraft:orange_wool, 1 stripped_willow_log biomesoplenty:stripped_willow_log, 1 hellbark_wood biomesoplenty:hellbark_wood, 1 stone_bricks minecraft:stone_bricks, 1 ruby_block silentgems:ruby_block, 1 blue_terracotta minecraft:blue_terracotta, 1 red_archwood_log ars_nouveau:red_archwood_log, 1 stripped_umbran_wood biomesoplenty:stripped_umbran_wood, 1 waxed_copper_block minecraft:waxed_copper_block, 1 diamond_block minecraft:diamond_block, 1 stripped_dead_log biomesoplenty:stripped_dead_log, 1 netherwood_planks silentgear:netherwood_planks, 1 granite minecraft:granite, 1 polished_andesite minecraft:polished_andesite, 1 white_terracotta minecraft:white_terracotta, 1 birch_log minecraft:birch_log, 1 oak_log minecraft:oak_log, 1 acacia_log minecraft:acacia_log, 1 yellow_terracotta minecraft:yellow_terracotta, 1 light_gray_stained_glass minecraft:light_gray_stained_glass, 1 stripped_magic_wood biomesoplenty:stripped_magic_wood, 1 light_blue_wool minecraft:light_blue_wool, 1 quartz_block minecraft:quartz_block, 1 warped_hyphae minecraft:warped_hyphae, 1 cherry_planks biomesoplenty:cherry_planks, 1 crimson_steel_block silentgear:crimson_steel_block, 1 moldavite_block silentgems:moldavite_block, 1 shale quark:shale, 1 yellow_concrete minecraft:yellow_concrete, 1 myalite quark:myalite, 1 cracked_stone_bricks minecraft:cracked_stone_bricks, 1 cream_bricks domum_ornamentum:cream_bricks, 1 stripped_hellbark_log biomesoplenty:stripped_hellbark_log, 1 archwood_planks ars_nouveau:archwood_planks, 1 blue_wool minecraft:blue_wool, 1 lapis_block minecraft:lapis_block, 1 polished_granite minecraft:polished_granite, 1 stripped_spruce_wood minecraft:stripped_spruce_wood, 1 magic_log biomesoplenty:magic_log, 1 stripped_willow_wood biomesoplenty:stripped_willow_wood, 1 tyrian_steel_block silentgear:tyrian_steel_block, 1 brick_extra domum_ornamentum:brick_extra, 1 pink_concrete minecraft:pink_concrete, 1 mossy_cobblestone_extra domum_ornamentum:mossy_cobblestone_extra, 1 brown_brick_extra domum_ornamentum:brown_brick_extra, 1 stripped_mahogany_wood biomesoplenty:stripped_mahogany_wood, 1 pink_stained_glass minecraft:pink_stained_glass, 1 smooth_sandstone minecraft:smooth_sandstone, 1 green_cactus_extra domum_ornamentum:green_cactus_extra, 1 palm_wood biomesoplenty:palm_wood, 1 cobbled_deepslate minecraft:cobbled_deepslate, 1 purple_cobblestone_extra domum_ornamentum:purple_cobblestone_extra, 1 cut_red_sandstone minecraft:cut_red_sandstone, 1 warped_nylium minecraft:warped_nylium, 1 willow_wood biomesoplenty:willow_wood, 1 cyan_terracotta minecraft:cyan_terracotta, 1 blue_brick_extra domum_ornamentum:blue_brick_extra, 1 polished_limestone quark:polished_limestone, 1 stripped_purple_archwood_log ars_nouveau:stripped_purple_archwood_log, 1 white_diamond_block silentgems:white_diamond_block, 1 tuff minecraft:tuff, 1 flax_block supplementaries:flax_block, 1 turquoise_block silentgems:turquoise_block, 1 umbran_log biomesoplenty:umbran_log, 1 stripped_palm_log biomesoplenty:stripped_palm_log, 1 horizontal_framed_glass create:horizontal_framed_glass, 1 purple_wool minecraft:purple_wool, 1 storage_constantan immersiveengineering:storage_constantan, 1 crimson_nylium minecraft:crimson_nylium, 1 stripped_fir_log biomesoplenty:stripped_fir_log, 1 weathered_copper minecraft:weathered_copper, 1 stripped_red_archwood_log ars_nouveau:stripped_red_archwood_log, 1 lime_stained_glass minecraft:lime_stained_glass, 1 gray_terracotta minecraft:gray_terracotta, 1 stripped_blue_archwood_wood ars_nouveau:stripped_blue_archwood_wood, 1 beige_stone_bricks domum_ornamentum:beige_stone_bricks, 1 yellow_brick_extra domum_ornamentum:yellow_brick_extra, 1 stone minecraft:stone, 1 yellow_wool minecraft:yellow_wool, 1 andesite minecraft:andesite, 1 umbran_wood biomesoplenty:umbran_wood, 1 azure_electrum_block silentgear:azure_electrum_block, 1 white_framed_glass quark:white_framed_glass, 1 storage_lead immersiveengineering:storage_lead, 1 nether_bricks minecraft:nether_bricks, 1 orange_terracotta minecraft:orange_terracotta, 1 jungle_wood minecraft:jungle_wood, 1 copper_block minecraft:copper_block, 1 basalt minecraft:basalt, 1 magenta_concrete minecraft:magenta_concrete, 1 vertical_framed_glass create:vertical_framed_glass, 1 waxed_exposed_cut_copper minecraft:waxed_exposed_cut_copper, 1 jungle_log minecraft:jungle_log, 1 red_nether_bricks minecraft:red_nether_bricks, 1 light_gray_terracotta minecraft:light_gray_terracotta, 1 jacaranda_planks biomesoplenty:jacaranda_planks, 1 brown_stone_bricks domum_ornamentum:brown_stone_bricks, 1 orange_framed_glass quark:orange_framed_glass, 1 waxed_oxidized_cut_copper minecraft:waxed_oxidized_cut_copper, 1 waxed_cut_copper minecraft:waxed_cut_copper, 1 deepslate minecraft:deepslate]]
}

java.lang.IllegalArgumentException: ItemStack value must not be empty. 1 air minecraft:air
	at mezz.jei.util.ErrorUtil.checkNotEmpty(ErrorUtil.java:209) ~[jei-1.18.1-9.1.2.61.jar%23123!:9.1.2.61]
	at mezz.jei.plugins.vanilla.ingredients.item.ItemStackHelper.getUniqueId(ItemStackHelper.java:82) ~[jei-1.18.1-9.1.2.61.jar%23123!:9.1.2.61]
	at mezz.jei.plugins.vanilla.ingredients.item.ItemStackHelper.getUniqueId(ItemStackHelper.java:30) ~[jei-1.18.1-9.1.2.61.jar%23123!:9.1.2.61]
	at mezz.jei.recipes.RecipeMap.addRecipe(RecipeMap.java:94) ~[jei-1.18.1-9.1.2.61.jar%23123!:9.1.2.61]
	at mezz.jei.recipes.RecipeMap.addRecipe(RecipeMap.java:75) ~[jei-1.18.1-9.1.2.61.jar%23123!:9.1.2.61]
	at mezz.jei.recipes.RecipeManagerInternal.addRecipe(RecipeManagerInternal.java:111) ~[jei-1.18.1-9.1.2.61.jar%23123!:9.1.2.61]
	at mezz.jei.recipes.RecipeManagerInternal.addRecipe(RecipeManagerInternal.java:94) ~[jei-1.18.1-9.1.2.61.jar%23123!:9.1.2.61]
	at mezz.jei.recipes.RecipeManagerInternal.addRecipes(RecipeManagerInternal.java:88) ~[jei-1.18.1-9.1.2.61.jar%23123!:9.1.2.61]
	at mezz.jei.load.registration.RecipeRegistration.addRecipes(RecipeRegistration.java:58) ~[jei-1.18.1-9.1.2.61.jar%23123!:9.1.2.61]
	at com.ldtteam.domumornamentum.jei.JEIPlugin.registerRecipes(JEIPlugin.java:63) ~[domum_ornamentum-1.18-1.0.31-ALPHA-universal.jar%2393!:1.18-1.0.31-ALPHA]
	at mezz.jei.load.PluginLoader.lambda$createRecipeManager$9(PluginLoader.java:139) ~[jei-1.18.1-9.1.2.61.jar%23123!:9.1.2.61]
	at mezz.jei.load.PluginCaller.callOnPlugins(PluginCaller.java:26) ~[jei-1.18.1-9.1.2.61.jar%23123!:9.1.2.61]
	at mezz.jei.load.PluginLoader.createRecipeManager(PluginLoader.java:139) ~[jei-1.18.1-9.1.2.61.jar%23123!:9.1.2.61]
	at mezz.jei.startup.JeiStarter.start(JeiStarter.java:85) ~[jei-1.18.1-9.1.2.61.jar%23123!:9.1.2.61]
	at mezz.jei.startup.ClientLifecycleHandler.startJEI(ClientLifecycleHandler.java:134) ~[jei-1.18.1-9.1.2.61.jar%23123!:9.1.2.61]
	at mezz.jei.startup.ClientLifecycleHandler.setupJEI(ClientLifecycleHandler.java:123) ~[jei-1.18.1-9.1.2.61.jar%23123!:9.1.2.61]
	at mezz.jei.startup.ClientLifecycleHandler.lambda$new$2(ClientLifecycleHandler.java:107) ~[jei-1.18.1-9.1.2.61.jar%23123!:9.1.2.61]
	at net.minecraftforge.eventbus.EventBus.doCastFilter(EventBus.java:247) ~[eventbus-5.0.3.jar%232!:?]
	at net.minecraftforge.eventbus.EventBus.lambda$addListener$11(EventBus.java:239) ~[eventbus-5.0.3.jar%232!:?]
	at net.minecraftforge.eventbus.EventBus.post(EventBus.java:302) ~[eventbus-5.0.3.jar%232!:?]
	at net.minecraftforge.eventbus.EventBus.post(EventBus.java:283) ~[eventbus-5.0.3.jar%232!:?]
	at net.minecraftforge.client.ForgeHooksClient.onRecipesUpdated(ForgeHooksClient.java:677) ~[forge-1.18.1-39.0.10-universal.jar%23194!:?]
	at net.minecraft.client.multiplayer.ClientPacketListener.m_6327_(ClientPacketListener.java:1166) ~[client-1.18.1-20211210.034407-srg.jar%23190!:?]
	at net.minecraft.network.protocol.game.ClientboundUpdateRecipesPacket.m_5797_(ClientboundUpdateRecipesPacket.java:32) ~[client-1.18.1-20211210.034407-srg.jar%23190!:?]
	at net.minecraft.network.protocol.game.ClientboundUpdateRecipesPacket.m_5797_(ClientboundUpdateRecipesPacket.java:14) ~[client-1.18.1-20211210.034407-srg.jar%23190!:?]
	at net.minecraft.network.protocol.PacketUtils.m_131356_(PacketUtils.java:21) ~[client-1.18.1-20211210.034407-srg.jar%23190!:?]
	at net.minecraft.util.thread.BlockableEventLoop.m_6367_(BlockableEventLoop.java:151) ~[client-1.18.1-20211210.034407-srg.jar%23190!:?]
	at net.minecraft.util.thread.ReentrantBlockableEventLoop.m_6367_(ReentrantBlockableEventLoop.java:23) ~[client-1.18.1-20211210.034407-srg.jar%23190!:?]
	at net.minecraft.util.thread.BlockableEventLoop.m_7245_(BlockableEventLoop.java:125) ~[client-1.18.1-20211210.034407-srg.jar%23190!:?]
	at net.minecraft.util.thread.BlockableEventLoop.m_18699_(BlockableEventLoop.java:110) ~[client-1.18.1-20211210.034407-srg.jar%23190!:?]
	at net.minecraft.client.Minecraft.m_91383_(Minecraft.java:1009) ~[client-1.18.1-20211210.034407-srg.jar%23190!:?]
	at net.minecraft.client.Minecraft.m_91374_(Minecraft.java:660) ~[client-1.18.1-20211210.034407-srg.jar%23190!:?]
	at net.minecraft.client.main.Main.main(Main.java:205) ~[client-1.18.1-20211210.034407-srg.jar%23190!:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:568) ~[?:?]
	at net.minecraftforge.fml.loading.targets.CommonClientLaunchHandler.lambda$launchService$0(CommonClientLaunchHandler.java:45) ~[fmlloader-1.18.1-39.0.10.jar%2323!:?]
	at cpw.mods.modlauncher.LaunchServiceHandlerDecorator.launch(LaunchServiceHandlerDecorator.java:37) [modlauncher-9.0.7.jar%235!:?]
	at cpw.mods.modlauncher.LaunchServiceHandler.launch(LaunchServiceHandler.java:53) [modlauncher-9.0.7.jar%235!:?]
	at cpw.mods.modlauncher.LaunchServiceHandler.launch(LaunchServiceHandler.java:71) [modlauncher-9.0.7.jar%235!:?]
	at cpw.mods.modlauncher.Launcher.run(Launcher.java:106) [modlauncher-9.0.7.jar%235!:?]
	at cpw.mods.modlauncher.Launcher.main(Launcher.java:77) [modlauncher-9.0.7.jar%235!:?]
	at cpw.mods.modlauncher.BootstrapLaunchConsumer.accept(BootstrapLaunchConsumer.java:26) [modlauncher-9.0.7.jar%235!:?]
	at cpw.mods.modlauncher.BootstrapLaunchConsumer.accept(BootstrapLaunchConsumer.java:23) [modlauncher-9.0.7.jar%235!:?]
	at cpw.mods.bootstraplauncher.BootstrapLauncher.main(BootstrapLauncher.java:90) [bootstraplauncher-0.1.17.jar:?]
[16:23:50] [Render thread/ERROR]: Found a broken recipe: Domum Ornamentum domum_ornamentum:shingle_slab class com.ldtteam.domumornamentum.recipe.architectscutter.ArchitectsCutterRecipe {
  Outputs:
    net.minecraft.world.item.ItemStack: [[9 shingle_slab domum_ornamentum:shingle_slab nbt:{textureData:{"minecraft:block/acacia_planks":"minecraft:acacia_planks","minecraft:block/dark_oak_planks":"minecraft:dark_oak_planks","minecraft:block/oak_planks":"minecraft:oak_planks"}}]]
  Inputs:
    net.minecraft.world.item.ItemStack: [[1 red_wool minecraft:red_wool, 1 yellow_framed_glass quark:yellow_framed_glass, 1 light_blue_concrete minecraft:light_blue_concrete, 1 polished_shale quark:polished_shale, 1 storage_constantan immersiveengineering:storage_constantan, 1 origin_grass_block biomesoplenty:origin_grass_block, 1 warped_planks minecraft:warped_planks, 1 air minecraft:air, 1 citrine_block silentgems:citrine_block, 1 light_gray_framed_glass quark:light_gray_framed_glass, 1 storage_steel immersiveengineering:storage_steel, 1 netherwood_leaves silentgear:netherwood_leaves, 1 gray_brick_extra domum_ornamentum:gray_brick_extra, 1 light_gray_stained_glass minecraft:light_gray_stained_glass, 1 kyanite_block silentgems:kyanite_block, 1 pink_framed_glass quark:pink_framed_glass, 1 light_gray_brick_extra domum_ornamentum:light_gray_brick_extra, 1 white_wool minecraft:white_wool, 1 orange_wool minecraft:orange_wool, 1 fir_wood biomesoplenty:fir_wood, 1 jacaranda_log biomesoplenty:jacaranda_log, 1 lime_brick_extra domum_ornamentum:lime_brick_extra, 1 waxed_oxidized_cut_copper minecraft:waxed_oxidized_cut_copper, 1 stripped_hellbark_log biomesoplenty:stripped_hellbark_log, 1 cut_red_sandstone minecraft:cut_red_sandstone, 1 stripped_umbran_wood biomesoplenty:stripped_umbran_wood, 1 dirty_glass quark:dirty_glass, 1 storage_nickel immersiveengineering:storage_nickel, 1 cyan_terracotta minecraft:cyan_terracotta, 1 white_stained_glass minecraft:white_stained_glass, 1 clay minecraft:clay, 1 gray_framed_glass quark:gray_framed_glass, 1 stripped_green_archwood_log ars_nouveau:stripped_green_archwood_log, 1 polished_andesite minecraft:polished_andesite, 1 magenta_terracotta minecraft:magenta_terracotta, 1 stripped_jacaranda_log biomesoplenty:stripped_jacaranda_log, 1 air minecraft:air, 1 chiseled_stone_bricks minecraft:chiseled_stone_bricks, 1 stripped_jacaranda_wood biomesoplenty:stripped_jacaranda_wood, 1 storage_electrum immersiveengineering:storage_electrum, 1 white_paper_extra domum_ornamentum:white_paper_extra, 1 oak_wood minecraft:oak_wood, 1 light_blue_terracotta minecraft:light_blue_terracotta, 1 jacaranda_wood biomesoplenty:jacaranda_wood, 1 stripped_red_archwood_wood ars_nouveau:stripped_red_archwood_wood, 1 warped_stem minecraft:warped_stem, 1 neptunium_block aquaculture:neptunium_block, 1 magic_log biomesoplenty:magic_log, 1 purple_framed_glass quark:purple_framed_glass, 1 shale quark:shale, 1 coarse_dirt minecraft:coarse_dirt, 1 lapis_block minecraft:lapis_block, 1 paper_extra domum_ornamentum:paper_extra, 1 stripped_cinnamon_wood croptopia:stripped_cinnamon_wood, 1 stripped_cinnamon_log croptopia:stripped_cinnamon_log, 1 umbran_wood biomesoplenty:umbran_wood, 1 yellow_blossom_leaves quark:yellow_blossom_leaves, 1 polished_myalite quark:polished_myalite, 1 magenta_brick_extra domum_ornamentum:magenta_brick_extra, 1 air minecraft:air, 1 light_gray_concrete minecraft:light_gray_concrete, 1 lime_wool minecraft:lime_wool, 1 green_wool minecraft:green_wool, 1 pink_cherry_leaves biomesoplenty:pink_cherry_leaves, 1 green_framed_glass quark:green_framed_glass, 1 red_nether_bricks minecraft:red_nether_bricks, 1 iolite_block silentgems:iolite_block, 1 stripped_netherwood_wood silentgear:stripped_netherwood_wood, 1 magic_planks biomesoplenty:magic_planks, 1 air minecraft:air, 1 lime_terracotta minecraft:lime_terracotta, 1 white_framed_glass quark:white_framed_glass, 1 dark_oak_wood minecraft:dark_oak_wood, 1 smooth_red_sandstone minecraft:smooth_red_sandstone, 1 dead_wood biomesoplenty:dead_wood, 1 carnelian_block silentgems:carnelian_block, 1 stripped_crimson_hyphae minecraft:stripped_crimson_hyphae, 1 netherrack minecraft:netherrack, 1 air minecraft:air, 1 jungle_leaves minecraft:jungle_leaves, 1 air minecraft:air, 1 vertical_framed_glass create:vertical_framed_glass, 1 gilded_blackstone minecraft:gilded_blackstone, 1 cobblestone minecraft:cobblestone, 1 oak_log minecraft:oak_log, 1 granite minecraft:granite, 1 magic_leaves biomesoplenty:magic_leaves, 1 pink_concrete minecraft:pink_concrete, 1 cobblestone_extra domum_ornamentum:cobblestone_extra, 1 tiled_glass create:tiled_glass, 1 gray_stained_glass minecraft:gray_stained_glass, 1 glowing_moss_block biomesoplenty:glowing_moss_block, 1 lavender_blossom_leaves quark:lavender_blossom_leaves, 1 air minecraft:air, 1 palm_wood biomesoplenty:palm_wood, 1 stripped_warped_stem minecraft:stripped_warped_stem, 1 birch_planks minecraft:birch_planks, 1 smooth_basalt minecraft:smooth_basalt, 1 netherite_block minecraft:netherite_block, 1 willow_planks biomesoplenty:willow_planks, 1 crimson_planks minecraft:crimson_planks, 1 stripped_fir_wood biomesoplenty:stripped_fir_wood, 1 maple_leaves biomesoplenty:maple_leaves, 1 rooted_dirt minecraft:rooted_dirt, 1 hellbark_log biomesoplenty:hellbark_log, 1 purple_stained_glass minecraft:purple_stained_glass, 1 birch_log minecraft:birch_log, 1 stripped_oak_wood minecraft:stripped_oak_wood, 1 tyrian_steel_block silentgear:tyrian_steel_block, 1 weathered_copper minecraft:weathered_copper, 1 budding_amethyst minecraft:budding_amethyst, 1 crimson_steel_block silentgear:crimson_steel_block, 1 stripped_dead_wood biomesoplenty:stripped_dead_wood, 1 mycelium minecraft:mycelium, 1 purple_archwood_leaves ars_nouveau:purple_archwood_leaves, 1 stripped_hellbark_wood biomesoplenty:stripped_hellbark_wood, 1 cut_sandstone minecraft:cut_sandstone, 1 gray_terracotta minecraft:gray_terracotta, 1 air minecraft:air, 1 nether_wart_block minecraft:nether_wart_block, 1 jungle_wood minecraft:jungle_wood, 1 amethyst_block minecraft:amethyst_block, 1 brown_concrete minecraft:brown_concrete, 1 myalite quark:myalite, 1 spruce_log minecraft:spruce_log, 1 pink_blossom_leaves quark:pink_blossom_leaves, 1 blue_brick_extra domum_ornamentum:blue_brick_extra, 1 red_blossom_leaves quark:red_blossom_leaves, 1 light_blue_framed_glass quark:light_blue_framed_glass, 1 orange_autumn_leaves biomesoplenty:orange_autumn_leaves, 1 moldavite_block silentgems:moldavite_block, 1 stripped_netherwood_log silentgear:stripped_netherwood_log, 1 air minecraft:air, 1 green_archwood_leaves ars_nouveau:green_archwood_leaves, 1 obsidian minecraft:obsidian, 1 blue_stained_glass minecraft:blue_stained_glass, 1 black_wool minecraft:black_wool, 1 redwood_wood biomesoplenty:redwood_wood, 1 air minecraft:air, 1 cyan_framed_glass quark:cyan_framed_glass, 1 smooth_stone minecraft:smooth_stone, 1 smooth_sandstone minecraft:smooth_sandstone, 1 air minecraft:air, 1 birch_wood minecraft:birch_wood, 1 green_cobblestone_extra domum_ornamentum:green_cobblestone_extra, 1 spruce_leaves minecraft:spruce_leaves, 1 gray_wool minecraft:gray_wool, 1 cyan_brick_extra domum_ornamentum:cyan_brick_extra, 1 podzol minecraft:podzol, 1 quartz_bricks minecraft:quartz_bricks, 1 deepslate_bricks minecraft:deepslate_bricks, 1 blue_cobblestone_extra domum_ornamentum:blue_cobblestone_extra, 1 air minecraft:air, 1 jungle_log minecraft:jungle_log, 1 white_concrete minecraft:white_concrete, 1 red_framed_glass quark:red_framed_glass, 1 ammolite_block silentgems:ammolite_block, 1 warped_nylium minecraft:warped_nylium, 1 air minecraft:air, 1 blackstone minecraft:blackstone, 1 emerald_block minecraft:emerald_block, 1 stripped_palm_log biomesoplenty:stripped_palm_log, 1 green_concrete minecraft:green_concrete, 1 stripped_acacia_wood minecraft:stripped_acacia_wood, 1 hellbark_wood biomesoplenty:hellbark_wood, 1 infested_stone minecraft:infested_stone, 1 cherry_wood biomesoplenty:cherry_wood, 1 feather_block supplementaries:feather_block, 1 polished_diorite minecraft:polished_diorite, 1 dark_oak_leaves minecraft:dark_oak_leaves, 1 acacia_planks minecraft:acacia_planks, 1 bricks minecraft:bricks, 1 redwood_leaves biomesoplenty:redwood_leaves, 1 cinnamon_wood croptopia:cinnamon_wood, 1 black_brick_extra domum_ornamentum:black_brick_extra, 1 dead_planks biomesoplenty:dead_planks, 1 willow_wood biomesoplenty:willow_wood, 1 light_gray_terracotta minecraft:light_gray_terracotta, 1 stripped_purple_archwood_wood ars_nouveau:stripped_purple_archwood_wood, 1 polished_granite minecraft:polished_granite, 1 stripped_crimson_stem minecraft:stripped_crimson_stem, 1 storage_aluminum immersiveengineering:storage_aluminum, 1 netherwood_log silentgear:netherwood_log, 1 oxidized_copper minecraft:oxidized_copper, 1 air minecraft:air, 1 yellow_brick_extra domum_ornamentum:yellow_brick_extra, 1 brown_wool minecraft:brown_wool, 1 pink_brick_extra domum_ornamentum:pink_brick_extra, 1 zinc_block create:zinc_block, 1 pink_terracotta minecraft:pink_terracotta, 1 blue_concrete minecraft:blue_concrete, 1 andesite minecraft:andesite, 1 rainbow_birch_leaves biomesoplenty:rainbow_birch_leaves, 1 orange_concrete minecraft:orange_concrete, 1 framed_glass create:framed_glass, 1 birch_leaves minecraft:birch_leaves, 1 stripped_jungle_log minecraft:stripped_jungle_log, 1 crimson_iron_block silentgear:crimson_iron_block, 1 red_brick_extra domum_ornamentum:red_brick_extra, 1 lime_framed_glass quark:lime_framed_glass, 1 white_terracotta minecraft:white_terracotta, 1 azure_silver_block silentgear:azure_silver_block, 1 air minecraft:air, 1 purpur_block minecraft:purpur_block, 1 storage_uranium immersiveengineering:storage_uranium, 1 gold_block minecraft:gold_block, 1 acacia_log minecraft:acacia_log, 1 mossy_cobblestone minecraft:mossy_cobblestone, 1 polished_blackstone minecraft:polished_blackstone, 1 palm_log biomesoplenty:palm_log, 1 brown_bricks domum_ornamentum:brown_bricks, 1 air minecraft:air, 1 black_concrete minecraft:black_concrete, 1 orange_brick_extra domum_ornamentum:orange_brick_extra, 1 green_terracotta minecraft:green_terracotta, 1 stripped_blue_archwood_log ars_nouveau:stripped_blue_archwood_log, 1 mahogany_planks biomesoplenty:mahogany_planks, 1 orange_framed_glass quark:orange_framed_glass, 1 polished_blackstone_bricks minecraft:polished_blackstone_bricks, 1 snow_block minecraft:snow_block, 1 stripped_redwood_log biomesoplenty:stripped_redwood_log, 1 yellow_terracotta minecraft:yellow_terracotta, 1 blue_archwood_log ars_nouveau:blue_archwood_log, 1 stripped_warped_hyphae minecraft:stripped_warped_hyphae, 1 dark_oak_log minecraft:dark_oak_log, 1 blue_terracotta minecraft:blue_terracotta, 1 polished_limestone quark:polished_limestone, 1 black_framed_glass quark:black_framed_glass, 1 purple_brick_extra domum_ornamentum:purple_brick_extra, 1 quartz_pillar minecraft:quartz_pillar, 1 air minecraft:air, 1 polished_calcite quark:polished_calcite, 1 mahogany_wood biomesoplenty:mahogany_wood, 1 blaze_gold_block silentgear:blaze_gold_block, 1 chiseled_sandstone minecraft:chiseled_sandstone, 1 brown_framed_glass quark:brown_framed_glass, 1 waxed_weathered_cut_copper minecraft:waxed_weathered_cut_copper, 1 waxed_cut_copper minecraft:waxed_cut_copper, 1 stripped_mahogany_wood biomesoplenty:stripped_mahogany_wood, 1 air minecraft:air, 1 coal_block minecraft:coal_block, 1 cinnamon_log croptopia:cinnamon_log, 1 blue_archwood_leaves ars_nouveau:blue_archwood_leaves, 1 white_cherry_leaves biomesoplenty:white_cherry_leaves, 1 iron_block minecraft:iron_block, 1 stripped_cherry_log biomesoplenty:stripped_cherry_log, 1 rose_quartz_block silentgems:rose_quartz_block, 1 charcoal_block quark:charcoal_block, 1 oxidized_cut_copper minecraft:oxidized_cut_copper, 1 red_stained_glass minecraft:red_stained_glass, 1 stripped_fir_log biomesoplenty:stripped_fir_log, 1 black_terracotta minecraft:black_terracotta, 1 stripped_oak_log minecraft:stripped_oak_log, 1 waxed_weathered_copper minecraft:waxed_weathered_copper, 1 mossy_cobblestone_extra domum_ornamentum:mossy_cobblestone_extra, 1 yellow_stained_glass minecraft:yellow_stained_glass, 1 redwood_log biomesoplenty:redwood_log, 1 exposed_copper minecraft:exposed_copper, 1 willow_leaves biomesoplenty:willow_leaves, 1 stripped_birch_wood minecraft:stripped_birch_wood, 1 redstone_block minecraft:redstone_block, 1 magenta_wool minecraft:magenta_wool, 1 framed_glass quark:framed_glass, 1 topaz_block silentgems:topaz_block, 1 stripped_jungle_wood minecraft:stripped_jungle_wood, 1 blue_blossom_leaves quark:blue_blossom_leaves, 1 azalea_leaves minecraft:azalea_leaves, 1 polished_basalt minecraft:polished_basalt, 1 green_stained_glass minecraft:green_stained_glass, 1 cyan_concrete minecraft:cyan_concrete, 1 purpur_pillar minecraft:purpur_pillar, 1 terracotta minecraft:terracotta, 1 light_blue_wool minecraft:light_blue_wool, 1 blue_wool minecraft:blue_wool, 1 bort_block silentgear:bort_block, 1 horizontal_framed_glass create:horizontal_framed_glass, 1 diamond_block minecraft:diamond_block, 1 stripped_cherry_wood biomesoplenty:stripped_cherry_wood, 1 brown_brick_extra domum_ornamentum:brown_brick_extra, 1 black_stained_glass minecraft:black_stained_glass, 1 cherry_planks biomesoplenty:cherry_planks, 1 white_brick_extra domum_ornamentum:white_brick_extra, 1 moss_block minecraft:moss_block, 1 yellow_autumn_leaves biomesoplenty:yellow_autumn_leaves, 1 spruce_planks minecraft:spruce_planks, 1 limestone quark:limestone, 1 hay_block minecraft:hay_block, 1 stripped_red_archwood_log ars_nouveau:stripped_red_archwood_log, 1 stripped_umbran_log biomesoplenty:stripped_umbran_log, 1 flowering_oak_leaves biomesoplenty:flowering_oak_leaves, 1 air minecraft:air, 1 mahogany_log biomesoplenty:mahogany_log, 1 stripped_mahogany_log biomesoplenty:stripped_mahogany_log, 1 flint_block supplementaries:flint_block, 1 packed_ice minecraft:packed_ice, 1 air minecraft:air, 1 flowering_azalea_leaves minecraft:flowering_azalea_leaves, 1 smooth_quartz minecraft:smooth_quartz, 1 green_brick_extra domum_ornamentum:green_brick_extra, 1 light_blue_stained_glass minecraft:light_blue_stained_glass, 1 oak_planks minecraft:oak_planks, 1 blue_framed_glass quark:blue_framed_glass, 1 redwood_planks biomesoplenty:redwood_planks, 1 palm_leaves biomesoplenty:palm_leaves, 1 stripped_dark_oak_log minecraft:stripped_dark_oak_log, 1 peridot_block silentgems:peridot_block, 1 purple_terracotta minecraft:purple_terracotta, 1 beige_stone_bricks domum_ornamentum:beige_stone_bricks, 1 crimson_nylium minecraft:crimson_nylium, 1 yellow_concrete minecraft:yellow_concrete, 1 oak_leaves minecraft:oak_leaves, 1 stripped_purple_archwood_log ars_nouveau:stripped_purple_archwood_log, 1 stripped_birch_log minecraft:stripped_birch_log, 1 orange_blossom_leaves quark:orange_blossom_leaves, 1 stripped_willow_log biomesoplenty:stripped_willow_log, 1 jacaranda_planks biomesoplenty:jacaranda_planks, 1 quartz_block minecraft:quartz_block, 1 pink_wool minecraft:pink_wool, 1 magenta_framed_glass quark:magenta_framed_glass, 1 black_diamond_block silentgems:black_diamond_block, 1 orange_terracotta minecraft:orange_terracotta, 1 nether_bricks minecraft:nether_bricks, 1 storage_lead immersiveengineering:storage_lead, 1 air minecraft:air, 1 light_blue_brick_extra domum_ornamentum:light_blue_brick_extra, 1 purple_wool minecraft:purple_wool, 1 green_cactus_extra domum_ornamentum:green_cactus_extra, 1 stripped_spruce_wood minecraft:stripped_spruce_wood, 1 jacaranda_leaves biomesoplenty:jacaranda_leaves, 1 permafrost quark:permafrost, 1 sandstone minecraft:sandstone, 1 tuff minecraft:tuff, 1 stripped_green_archwood_wood ars_nouveau:stripped_green_archwood_wood, 1 air minecraft:air, 1 cactus_extra domum_ornamentum:cactus_extra, 1 lime_concrete minecraft:lime_concrete, 1 deepslate minecraft:deepslate, 1 air minecraft:air, 1 stripped_redwood_wood biomesoplenty:stripped_redwood_wood, 1 storage_silver immersiveengineering:storage_silver, 1 chiseled_red_sandstone minecraft:chiseled_red_sandstone, 1 cream_bricks domum_ornamentum:cream_bricks, 1 jasper quark:jasper, 1 fir_log biomesoplenty:fir_log, 1 purple_cobblestone_extra domum_ornamentum:purple_cobblestone_extra, 1 air minecraft:air, 1 waxed_exposed_copper minecraft:waxed_exposed_copper, 1 infested_cobblestone minecraft:infested_cobblestone, 1 wheat_extra domum_ornamentum:wheat_extra, 1 stripped_blue_archwood_wood ars_nouveau:stripped_blue_archwood_wood, 1 origin_leaves biomesoplenty:origin_leaves, 1 crimson_stem minecraft:crimson_stem, 1 red_archwood_leaves ars_nouveau:red_archwood_leaves, 1 stripped_willow_wood biomesoplenty:stripped_willow_wood, 1 white_diamond_block silentgems:white_diamond_block, 1 red_concrete minecraft:red_concrete, 1 ruby_block silentgems:ruby_block, 1 hellbark_leaves biomesoplenty:hellbark_leaves, 1 magenta_concrete minecraft:magenta_concrete, 1 turquoise_block silentgems:turquoise_block, 1 brass_block create:brass_block, 1 magenta_stained_glass minecraft:magenta_stained_glass, 1 weathered_cut_copper minecraft:weathered_cut_copper, 1 umbran_leaves biomesoplenty:umbran_leaves, 1 cracked_stone_bricks minecraft:cracked_stone_bricks, 1 waxed_oxidized_copper minecraft:waxed_oxidized_copper, 1 grass_block minecraft:grass_block, 1 netherwood_wood silentgear:netherwood_wood, 1 light_gray_wool minecraft:light_gray_wool, 1 stripped_magic_log biomesoplenty:stripped_magic_log, 1 dark_oak_planks minecraft:dark_oak_planks, 1 warped_wart_block minecraft:warped_wart_block, 1 red_archwood_log ars_nouveau:red_archwood_log, 1 umbran_log biomesoplenty:umbran_log, 1 air minecraft:air, 1 waxed_exposed_cut_copper minecraft:waxed_exposed_cut_copper, 1 yellow_wool minecraft:yellow_wool, 1 mahogany_leaves biomesoplenty:mahogany_leaves, 1 polished_deepslate minecraft:polished_deepslate, 1 end_stone minecraft:end_stone, 1 palm_planks biomesoplenty:palm_planks, 1 lime_stained_glass minecraft:lime_stained_glass, 1 stone_bricks minecraft:stone_bricks, 1 soap_block supplementaries:soap_block, 1 cyan_stained_glass minecraft:cyan_stained_glass, 1 dirt minecraft:dirt, 1 brown_stone_bricks domum_ornamentum:brown_stone_bricks, 1 glass minecraft:glass, 1 brick_extra domum_ornamentum:brick_extra, 1 heliodor_block silentgems:heliodor_block, 1 stripped_spruce_log minecraft:stripped_spruce_log, 1 copper_block minecraft:copper_block, 1 pink_stained_glass minecraft:pink_stained_glass, 1 cherry_log biomesoplenty:cherry_log, 1 acacia_wood minecraft:acacia_wood, 1 diorite minecraft:diorite, 1 cream_stone_bricks domum_ornamentum:cream_stone_bricks, 1 stripped_dead_log biomesoplenty:stripped_dead_log, 1 basalt minecraft:basalt, 1 cyan_wool minecraft:cyan_wool, 1 purple_concrete minecraft:purple_concrete, 1 sapphire_block silentgems:sapphire_block, 1 alexandrite_block silentgems:alexandrite_block, 1 glass_connected cyclic:glass_connected, 1 waxed_copper_block minecraft:waxed_copper_block, 1 flax_block supplementaries:flax_block, 1 gray_concrete minecraft:gray_concrete, 1 netherwood_planks silentgear:netherwood_planks, 1 warped_hyphae minecraft:warped_hyphae, 1 brown_terracotta minecraft:brown_terracotta, 1 magic_wood biomesoplenty:magic_wood, 1 fir_leaves biomesoplenty:fir_leaves, 1 air minecraft:air, 1 stripped_magic_wood biomesoplenty:stripped_magic_wood, 1 crimson_hyphae minecraft:crimson_hyphae, 1 purple_archwood_log ars_nouveau:purple_archwood_log, 1 stripped_dark_oak_wood minecraft:stripped_dark_oak_wood, 1 jungle_planks minecraft:jungle_planks, 1 stripped_palm_wood biomesoplenty:stripped_palm_wood, 1 polished_jasper quark:polished_jasper, 1 red_sandstone minecraft:red_sandstone, 1 orange_stained_glass minecraft:orange_stained_glass, 1 acacia_leaves minecraft:acacia_leaves, 1 hellbark_planks biomesoplenty:hellbark_planks, 1 azure_electrum_block silentgear:azure_electrum_block, 1 fir_planks biomesoplenty:fir_planks, 1 dead_log biomesoplenty:dead_log, 1 chiseled_quartz_block minecraft:chiseled_quartz_block, 1 red_terracotta minecraft:red_terracotta, 1 green_archwood_log ars_nouveau:green_archwood_log, 1 exposed_cut_copper minecraft:exposed_cut_copper, 1 spruce_wood minecraft:spruce_wood, 1 brown_stained_glass minecraft:brown_stained_glass, 1 cobbled_deepslate minecraft:cobbled_deepslate, 1 beige_bricks domum_ornamentum:beige_bricks, 1 willow_log biomesoplenty:willow_log, 1 air minecraft:air, 1 mossy_stone_bricks minecraft:mossy_stone_bricks, 1 stone minecraft:stone, 1 archwood_planks ars_nouveau:archwood_planks, 1 stripped_acacia_log minecraft:stripped_acacia_log, 1 umbran_planks biomesoplenty:umbran_planks, 1 dead_leaves biomesoplenty:dead_leaves], [1 permafrost quark:permafrost, 1 blue_stained_glass minecraft:blue_stained_glass, 1 stripped_crimson_stem minecraft:stripped_crimson_stem, 1 stripped_purple_archwood_log ars_nouveau:stripped_purple_archwood_log, 1 jungle_log minecraft:jungle_log, 1 light_blue_brick_extra domum_ornamentum:light_blue_brick_extra, 1 gray_concrete minecraft:gray_concrete, 1 rose_quartz_block silentgems:rose_quartz_block, 1 light_gray_stained_glass minecraft:light_gray_stained_glass, 1 quartz_bricks minecraft:quartz_bricks, 1 storage_constantan immersiveengineering:storage_constantan, 1 oak_wood minecraft:oak_wood, 1 fir_planks biomesoplenty:fir_planks, 1 polished_diorite minecraft:polished_diorite, 1 black_framed_glass quark:black_framed_glass, 1 stripped_redwood_wood biomesoplenty:stripped_redwood_wood, 1 cut_red_sandstone minecraft:cut_red_sandstone, 1 packed_ice minecraft:packed_ice, 1 netherwood_log silentgear:netherwood_log, 1 orange_concrete minecraft:orange_concrete, 1 smooth_stone minecraft:smooth_stone, 1 dead_wood biomesoplenty:dead_wood, 1 magenta_concrete minecraft:magenta_concrete, 1 nether_bricks minecraft:nether_bricks, 1 stripped_oak_log minecraft:stripped_oak_log, 1 moldavite_block silentgems:moldavite_block, 1 budding_amethyst minecraft:budding_amethyst, 1 waxed_cut_copper minecraft:waxed_cut_copper, 1 myalite quark:myalite, 1 brown_brick_extra domum_ornamentum:brown_brick_extra, 1 red_sandstone minecraft:red_sandstone, 1 blackstone minecraft:blackstone, 1 yellow_stained_glass minecraft:yellow_stained_glass, 1 hellbark_wood biomesoplenty:hellbark_wood, 1 umbran_planks biomesoplenty:umbran_planks, 1 tiled_glass create:tiled_glass, 1 mahogany_wood biomesoplenty:mahogany_wood, 1 wheat_extra domum_ornamentum:wheat_extra, 1 blue_wool minecraft:blue_wool, 1 light_gray_wool minecraft:light_gray_wool, 1 blaze_gold_block silentgear:blaze_gold_block, 1 stripped_acacia_wood minecraft:stripped_acacia_wood, 1 stripped_umbran_wood biomesoplenty:stripped_umbran_wood, 1 stripped_red_archwood_wood ars_nouveau:stripped_red_archwood_wood, 1 green_terracotta minecraft:green_terracotta, 1 stripped_hellbark_wood biomesoplenty:stripped_hellbark_wood, 1 dark_oak_wood minecraft:dark_oak_wood, 1 jacaranda_wood biomesoplenty:jacaranda_wood, 1 hellbark_planks biomesoplenty:hellbark_planks, 1 neptunium_block aquaculture:neptunium_block, 1 kyanite_block silentgems:kyanite_block, 1 stripped_birch_wood minecraft:stripped_birch_wood, 1 ruby_block silentgems:ruby_block, 1 warped_wart_block minecraft:warped_wart_block, 1 dead_planks biomesoplenty:dead_planks, 1 acacia_log minecraft:acacia_log, 1 purple_concrete minecraft:purple_concrete, 1 orange_stained_glass minecraft:orange_stained_glass, 1 gold_block minecraft:gold_block, 1 stripped_cherry_wood biomesoplenty:stripped_cherry_wood, 1 dark_oak_log minecraft:dark_oak_log, 1 jacaranda_planks biomesoplenty:jacaranda_planks, 1 palm_planks biomesoplenty:palm_planks, 1 polished_blackstone minecraft:polished_blackstone, 1 stripped_palm_wood biomesoplenty:stripped_palm_wood, 1 storage_nickel immersiveengineering:storage_nickel, 1 tyrian_steel_block silentgear:tyrian_steel_block, 1 fir_wood biomesoplenty:fir_wood, 1 feather_block supplementaries:feather_block, 1 light_blue_framed_glass quark:light_blue_framed_glass, 1 end_stone minecraft:end_stone, 1 diorite minecraft:diorite, 1 crimson_stem minecraft:crimson_stem, 1 quartz_block minecraft:quartz_block, 1 stripped_birch_log minecraft:stripped_birch_log, 1 redwood_wood biomesoplenty:redwood_wood, 1 orange_terracotta minecraft:orange_terracotta, 1 lime_wool minecraft:lime_wool, 1 hay_block minecraft:hay_block, 1 hellbark_log biomesoplenty:hellbark_log, 1 purpur_block minecraft:purpur_block, 1 white_concrete minecraft:white_concrete, 1 waxed_exposed_copper minecraft:waxed_exposed_copper, 1 red_concrete minecraft:red_concrete, 1 black_diamond_block silentgems:black_diamond_block, 1 white_diamond_block silentgems:white_diamond_block, 1 stripped_jacaranda_log biomesoplenty:stripped_jacaranda_log, 1 cyan_framed_glass quark:cyan_framed_glass, 1 storage_aluminum immersiveengineering:storage_aluminum, 1 storage_uranium immersiveengineering:storage_uranium, 1 polished_deepslate minecraft:polished_deepslate, 1 mossy_cobblestone_extra domum_ornamentum:mossy_cobblestone_extra, 1 blue_brick_extra domum_ornamentum:blue_brick_extra, 1 smooth_red_sandstone minecraft:smooth_red_sandstone, 1 yellow_wool minecraft:yellow_wool, 1 dark_oak_planks minecraft:dark_oak_planks, 1 blue_cobblestone_extra domum_ornamentum:blue_cobblestone_extra, 1 crimson_iron_block silentgear:crimson_iron_block, 1 cobblestone_extra domum_ornamentum:cobblestone_extra, 1 crimson_planks minecraft:crimson_planks, 1 gray_framed_glass quark:gray_framed_glass, 1 magic_wood biomesoplenty:magic_wood, 1 crimson_hyphae minecraft:crimson_hyphae, 1 weathered_cut_copper minecraft:weathered_cut_copper, 1 storage_steel immersiveengineering:storage_steel, 1 azure_silver_block silentgear:azure_silver_block, 1 magenta_stained_glass minecraft:magenta_stained_glass, 1 stripped_spruce_log minecraft:stripped_spruce_log, 1 cinnamon_wood croptopia:cinnamon_wood, 1 white_wool minecraft:white_wool, 1 heliodor_block silentgems:heliodor_block, 1 mahogany_planks biomesoplenty:mahogany_planks, 1 turquoise_block silentgems:turquoise_block, 1 stone minecraft:stone, 1 redstone_block minecraft:redstone_block, 1 willow_wood biomesoplenty:willow_wood, 1 storage_lead immersiveengineering:storage_lead, 1 magenta_wool minecraft:magenta_wool, 1 light_blue_wool minecraft:light_blue_wool, 1 terracotta minecraft:terracotta, 1 stripped_crimson_hyphae minecraft:stripped_crimson_hyphae, 1 stripped_spruce_wood minecraft:stripped_spruce_wood, 1 spruce_planks minecraft:spruce_planks, 1 cream_bricks domum_ornamentum:cream_bricks, 1 framed_glass create:framed_glass, 1 brown_concrete minecraft:brown_concrete, 1 polished_calcite quark:polished_calcite, 1 white_paper_extra domum_ornamentum:white_paper_extra, 1 shale quark:shale, 1 red_stained_glass minecraft:red_stained_glass, 1 brass_block create:brass_block, 1 flax_block supplementaries:flax_block, 1 oak_planks minecraft:oak_planks, 1 stripped_green_archwood_log ars_nouveau:stripped_green_archwood_log, 1 magenta_framed_glass quark:magenta_framed_glass, 1 green_stained_glass minecraft:green_stained_glass, 1 purple_brick_extra domum_ornamentum:purple_brick_extra, 1 netherwood_planks silentgear:netherwood_planks, 1 stripped_jungle_wood minecraft:stripped_jungle_wood, 1 fir_log biomesoplenty:fir_log, 1 citrine_block silentgems:citrine_block, 1 warped_nylium minecraft:warped_nylium, 1 gray_terracotta minecraft:gray_terracotta, 1 exposed_copper minecraft:exposed_copper, 1 storage_electrum immersiveengineering:storage_electrum, 1 acacia_planks minecraft:acacia_planks, 1 archwood_planks ars_nouveau:archwood_planks, 1 polished_limestone quark:polished_limestone, 1 pink_stained_glass minecraft:pink_stained_glass, 1 beige_bricks domum_ornamentum:beige_bricks, 1 gray_stained_glass minecraft:gray_stained_glass, 1 lime_stained_glass minecraft:lime_stained_glass, 1 green_cobblestone_extra domum_ornamentum:green_cobblestone_extra, 1 warped_planks minecraft:warped_planks, 1 redwood_planks biomesoplenty:redwood_planks, 1 paper_extra domum_ornamentum:paper_extra, 1 sandstone minecraft:sandstone, 1 red_brick_extra domum_ornamentum:red_brick_extra, 1 brown_wool minecraft:brown_wool, 1 purple_framed_glass quark:purple_framed_glass, 1 stripped_willow_wood biomesoplenty:stripped_willow_wood, 1 orange_framed_glass quark:orange_framed_glass, 1 cyan_concrete minecraft:cyan_concrete, 1 crimson_steel_block silentgear:crimson_steel_block, 1 light_gray_brick_extra domum_ornamentum:light_gray_brick_extra, 1 white_terracotta minecraft:white_terracotta, 1 cherry_planks biomesoplenty:cherry_planks, 1 cyan_wool minecraft:cyan_wool, 1 mahogany_log biomesoplenty:mahogany_log, 1 brown_stone_bricks domum_ornamentum:brown_stone_bricks, 1 stripped_willow_log biomesoplenty:stripped_willow_log, 1 willow_planks biomesoplenty:willow_planks, 1 black_concrete minecraft:black_concrete, 1 waxed_weathered_copper minecraft:waxed_weathered_copper, 1 stripped_magic_wood biomesoplenty:stripped_magic_wood, 1 framed_glass quark:framed_glass, 1 pink_brick_extra domum_ornamentum:pink_brick_extra, 1 cherry_log biomesoplenty:cherry_log, 1 bort_block silentgear:bort_block, 1 gilded_blackstone minecraft:gilded_blackstone, 1 blue_framed_glass quark:blue_framed_glass, 1 polished_blackstone_bricks minecraft:polished_blackstone_bricks, 1 polished_granite minecraft:polished_granite, 1 magenta_brick_extra domum_ornamentum:magenta_brick_extra, 1 sapphire_block silentgems:sapphire_block, 1 stripped_jacaranda_wood biomesoplenty:stripped_jacaranda_wood, 1 dirty_glass quark:dirty_glass, 1 polished_andesite minecraft:polished_andesite, 1 carnelian_block silentgems:carnelian_block, 1 stripped_netherwood_wood silentgear:stripped_netherwood_wood, 1 waxed_copper_block minecraft:waxed_copper_block, 1 cobblestone minecraft:cobblestone, 1 stripped_redwood_log biomesoplenty:stripped_redwood_log, 1 purpur_pillar minecraft:purpur_pillar, 1 palm_log biomesoplenty:palm_log, 1 azure_electrum_block silentgear:azure_electrum_block, 1 netherite_block minecraft:netherite_block, 1 light_blue_stained_glass minecraft:light_blue_stained_glass, 1 nether_wart_block minecraft:nether_wart_block, 1 stripped_jungle_log minecraft:stripped_jungle_log, 1 yellow_terracotta minecraft:yellow_terracotta, 1 palm_wood biomesoplenty:palm_wood, 1 purple_archwood_log ars_nouveau:purple_archwood_log, 1 cut_sandstone minecraft:cut_sandstone, 1 weathered_copper minecraft:weathered_copper, 1 warped_stem minecraft:warped_stem, 1 polished_jasper quark:polished_jasper, 1 oxidized_cut_copper minecraft:oxidized_cut_copper, 1 stripped_blue_archwood_wood ars_nouveau:stripped_blue_archwood_wood, 1 stripped_green_archwood_wood ars_nouveau:stripped_green_archwood_wood, 1 stripped_cinnamon_log croptopia:stripped_cinnamon_log, 1 white_framed_glass quark:white_framed_glass, 1 tuff minecraft:tuff, 1 black_stained_glass minecraft:black_stained_glass, 1 infested_cobblestone minecraft:infested_cobblestone, 1 pink_concrete minecraft:pink_concrete, 1 jacaranda_log biomesoplenty:jacaranda_log, 1 exposed_cut_copper minecraft:exposed_cut_copper, 1 waxed_oxidized_cut_copper minecraft:waxed_oxidized_cut_copper, 1 polished_myalite quark:polished_myalite, 1 brown_bricks domum_ornamentum:brown_bricks, 1 ammolite_block silentgems:ammolite_block, 1 quartz_pillar minecraft:quartz_pillar, 1 oxidized_copper minecraft:oxidized_copper, 1 netherwood_wood silentgear:netherwood_wood, 1 cherry_wood biomesoplenty:cherry_wood, 1 zinc_block create:zinc_block, 1 mossy_cobblestone minecraft:mossy_cobblestone, 1 flint_block supplementaries:flint_block, 1 chiseled_red_sandstone minecraft:chiseled_red_sandstone, 1 lapis_block minecraft:lapis_block, 1 basalt minecraft:basalt, 1 jasper quark:jasper, 1 infested_stone minecraft:infested_stone, 1 stripped_mahogany_wood biomesoplenty:stripped_mahogany_wood, 1 red_archwood_log ars_nouveau:red_archwood_log, 1 purple_terracotta minecraft:purple_terracotta, 1 granite minecraft:granite, 1 light_gray_framed_glass quark:light_gray_framed_glass, 1 limestone quark:limestone, 1 stripped_cherry_log biomesoplenty:stripped_cherry_log, 1 cinnamon_log croptopia:cinnamon_log, 1 andesite minecraft:andesite, 1 cyan_stained_glass minecraft:cyan_stained_glass, 1 gray_wool minecraft:gray_wool, 1 gray_brick_extra domum_ornamentum:gray_brick_extra, 1 pink_terracotta minecraft:pink_terracotta, 1 diamond_block minecraft:diamond_block, 1 cream_stone_bricks domum_ornamentum:cream_stone_bricks, 1 netherrack minecraft:netherrack, 1 cracked_stone_bricks minecraft:cracked_stone_bricks, 1 stripped_purple_archwood_wood ars_nouveau:stripped_purple_archwood_wood, 1 deepslate_bricks minecraft:deepslate_bricks, 1 warped_hyphae minecraft:warped_hyphae, 1 peridot_block silentgems:peridot_block, 1 green_archwood_log ars_nouveau:green_archwood_log, 1 stripped_oak_wood minecraft:stripped_oak_wood, 1 yellow_concrete minecraft:yellow_concrete, 1 glass minecraft:glass, 1 smooth_quartz minecraft:smooth_quartz, 1 stripped_magic_log biomesoplenty:stripped_magic_log, 1 dead_log biomesoplenty:dead_log, 1 light_gray_concrete minecraft:light_gray_concrete, 1 polished_shale quark:polished_shale, 1 stripped_acacia_log minecraft:stripped_acacia_log, 1 yellow_framed_glass quark:yellow_framed_glass, 1 brown_terracotta minecraft:brown_terracotta, 1 cyan_terracotta minecraft:cyan_terracotta, 1 pink_framed_glass quark:pink_framed_glass, 1 umbran_log biomesoplenty:umbran_log, 1 stripped_umbran_log biomesoplenty:stripped_umbran_log, 1 blue_concrete minecraft:blue_concrete, 1 lime_concrete minecraft:lime_concrete, 1 light_blue_terracotta minecraft:light_blue_terracotta, 1 stripped_dead_log biomesoplenty:stripped_dead_log, 1 green_concrete minecraft:green_concrete, 1 coal_block minecraft:coal_block, 1 topaz_block silentgems:topaz_block, 1 birch_wood minecraft:birch_wood, 1 stripped_dark_oak_wood minecraft:stripped_dark_oak_wood, 1 stripped_dead_wood biomesoplenty:stripped_dead_wood, 1 redwood_log biomesoplenty:redwood_log, 1 cyan_brick_extra domum_ornamentum:cyan_brick_extra, 1 horizontal_framed_glass create:horizontal_framed_glass, 1 acacia_wood minecraft:acacia_wood, 1 brown_stained_glass minecraft:brown_stained_glass, 1 stripped_red_archwood_log ars_nouveau:stripped_red_archwood_log, 1 stripped_netherwood_log silentgear:stripped_netherwood_log, 1 orange_wool minecraft:orange_wool, 1 willow_log biomesoplenty:willow_log, 1 chiseled_quartz_block minecraft:chiseled_quartz_block, 1 black_terracotta minecraft:black_terracotta, 1 red_nether_bricks minecraft:red_nether_bricks, 1 copper_block minecraft:copper_block, 1 green_brick_extra domum_ornamentum:green_brick_extra, 1 stripped_blue_archwood_log ars_nouveau:stripped_blue_archwood_log, 1 light_gray_terracotta minecraft:light_gray_terracotta, 1 orange_brick_extra domum_ornamentum:orange_brick_extra, 1 stripped_warped_stem minecraft:stripped_warped_stem, 1 charcoal_block quark:charcoal_block, 1 emerald_block minecraft:emerald_block, 1 soap_block supplementaries:soap_block, 1 black_brick_extra domum_ornamentum:black_brick_extra, 1 mossy_stone_bricks minecraft:mossy_stone_bricks, 1 spruce_wood minecraft:spruce_wood, 1 green_cactus_extra domum_ornamentum:green_cactus_extra, 1 waxed_exposed_cut_copper minecraft:waxed_exposed_cut_copper, 1 storage_silver immersiveengineering:storage_silver, 1 pink_wool minecraft:pink_wool, 1 magenta_terracotta minecraft:magenta_terracotta, 1 smooth_basalt minecraft:smooth_basalt, 1 chiseled_sandstone minecraft:chiseled_sandstone, 1 umbran_wood biomesoplenty:umbran_wood, 1 cactus_extra domum_ornamentum:cactus_extra, 1 snow_block minecraft:snow_block, 1 birch_planks minecraft:birch_planks, 1 yellow_brick_extra domum_ornamentum:yellow_brick_extra, 1 red_wool minecraft:red_wool, 1 white_brick_extra domum_ornamentum:white_brick_extra, 1 blue_archwood_log ars_nouveau:blue_archwood_log, 1 smooth_sandstone minecraft:smooth_sandstone, 1 red_terracotta minecraft:red_terracotta, 1 amethyst_block minecraft:amethyst_block, 1 stripped_cinnamon_wood croptopia:stripped_cinnamon_wood, 1 waxed_weathered_cut_copper minecraft:waxed_weathered_cut_copper, 1 jungle_wood minecraft:jungle_wood, 1 vertical_framed_glass create:vertical_framed_glass, 1 stone_bricks minecraft:stone_bricks, 1 green_wool minecraft:green_wool, 1 purple_cobblestone_extra domum_ornamentum:purple_cobblestone_extra, 1 lime_brick_extra domum_ornamentum:lime_brick_extra, 1 blue_terracotta minecraft:blue_terracotta, 1 green_framed_glass quark:green_framed_glass, 1 stripped_mahogany_log biomesoplenty:stripped_mahogany_log, 1 red_framed_glass quark:red_framed_glass, 1 black_wool minecraft:black_wool, 1 glass_connected cyclic:glass_connected, 1 light_blue_concrete minecraft:light_blue_concrete, 1 stripped_hellbark_log biomesoplenty:stripped_hellbark_log, 1 obsidian minecraft:obsidian, 1 purple_stained_glass minecraft:purple_stained_glass, 1 stripped_warped_hyphae minecraft:stripped_warped_hyphae, 1 crimson_nylium minecraft:crimson_nylium, 1 chiseled_stone_bricks minecraft:chiseled_stone_bricks, 1 polished_basalt minecraft:polished_basalt, 1 white_stained_glass minecraft:white_stained_glass, 1 beige_stone_bricks domum_ornamentum:beige_stone_bricks, 1 lime_framed_glass quark:lime_framed_glass, 1 lime_terracotta minecraft:lime_terracotta, 1 stripped_dark_oak_log minecraft:stripped_dark_oak_log, 1 iron_block minecraft:iron_block, 1 spruce_log minecraft:spruce_log, 1 stripped_palm_log biomesoplenty:stripped_palm_log, 1 iolite_block silentgems:iolite_block, 1 alexandrite_block silentgems:alexandrite_block, 1 waxed_oxidized_copper minecraft:waxed_oxidized_copper, 1 brick_extra domum_ornamentum:brick_extra, 1 cobbled_deepslate minecraft:cobbled_deepslate, 1 birch_log minecraft:birch_log, 1 oak_log minecraft:oak_log, 1 brown_framed_glass quark:brown_framed_glass, 1 magic_log biomesoplenty:magic_log, 1 deepslate minecraft:deepslate, 1 stripped_fir_log biomesoplenty:stripped_fir_log, 1 stripped_fir_wood biomesoplenty:stripped_fir_wood, 1 magic_planks biomesoplenty:magic_planks, 1 purple_wool minecraft:purple_wool, 1 jungle_planks minecraft:jungle_planks], [1 stripped_crimson_stem minecraft:stripped_crimson_stem, 1 stripped_green_archwood_log ars_nouveau:stripped_green_archwood_log, 1 storage_silver immersiveengineering:storage_silver, 1 coarse_dirt minecraft:coarse_dirt, 1 blue_archwood_log ars_nouveau:blue_archwood_log, 1 warped_hyphae minecraft:warped_hyphae, 1 purpur_block minecraft:purpur_block, 1 black_concrete minecraft:black_concrete, 1 stripped_crimson_hyphae minecraft:stripped_crimson_hyphae, 1 stripped_willow_log biomesoplenty:stripped_willow_log, 1 air minecraft:air, 1 white_concrete minecraft:white_concrete, 1 lapis_block minecraft:lapis_block, 1 purple_cobblestone_extra domum_ornamentum:purple_cobblestone_extra, 1 waxed_cut_copper minecraft:waxed_cut_copper, 1 stripped_jungle_log minecraft:stripped_jungle_log, 1 stripped_red_archwood_log ars_nouveau:stripped_red_archwood_log, 1 rainbow_birch_leaves biomesoplenty:rainbow_birch_leaves, 1 black_framed_glass quark:black_framed_glass, 1 green_archwood_leaves ars_nouveau:green_archwood_leaves, 1 dead_planks biomesoplenty:dead_planks, 1 stripped_jacaranda_log biomesoplenty:stripped_jacaranda_log, 1 cyan_wool minecraft:cyan_wool, 1 alexandrite_block silentgems:alexandrite_block, 1 polished_basalt minecraft:polished_basalt, 1 stone minecraft:stone, 1 polished_limestone quark:polished_limestone, 1 weathered_copper minecraft:weathered_copper, 1 podzol minecraft:podzol, 1 quartz_pillar minecraft:quartz_pillar, 1 yellow_wool minecraft:yellow_wool, 1 dark_oak_log minecraft:dark_oak_log, 1 neptunium_block aquaculture:neptunium_block, 1 exposed_copper minecraft:exposed_copper, 1 stripped_blue_archwood_log ars_nouveau:stripped_blue_archwood_log, 1 maple_leaves biomesoplenty:maple_leaves, 1 bort_block silentgear:bort_block, 1 deepslate minecraft:deepslate, 1 stone_bricks minecraft:stone_bricks, 1 purple_wool minecraft:purple_wool, 1 birch_log minecraft:birch_log, 1 jungle_planks minecraft:jungle_planks, 1 stripped_dark_oak_wood minecraft:stripped_dark_oak_wood, 1 smooth_quartz minecraft:smooth_quartz, 1 warped_stem minecraft:warped_stem, 1 diorite minecraft:diorite, 1 soap_block supplementaries:soap_block, 1 orange_terracotta minecraft:orange_terracotta, 1 redwood_log biomesoplenty:redwood_log, 1 dead_wood biomesoplenty:dead_wood, 1 gold_block minecraft:gold_block, 1 coal_block minecraft:coal_block, 1 polished_myalite quark:polished_myalite, 1 jacaranda_log biomesoplenty:jacaranda_log, 1 cracked_stone_bricks minecraft:cracked_stone_bricks, 1 palm_wood biomesoplenty:palm_wood, 1 jungle_log minecraft:jungle_log, 1 jacaranda_wood biomesoplenty:jacaranda_wood, 1 framed_glass quark:framed_glass, 1 yellow_stained_glass minecraft:yellow_stained_glass, 1 shale quark:shale, 1 waxed_exposed_copper minecraft:waxed_exposed_copper, 1 vertical_framed_glass create:vertical_framed_glass, 1 air minecraft:air, 1 blue_terracotta minecraft:blue_terracotta, 1 stripped_oak_log minecraft:stripped_oak_log, 1 magenta_concrete minecraft:magenta_concrete, 1 fir_leaves biomesoplenty:fir_leaves, 1 storage_nickel immersiveengineering:storage_nickel, 1 blue_wool minecraft:blue_wool, 1 air minecraft:air, 1 zinc_block create:zinc_block, 1 brown_stone_bricks domum_ornamentum:brown_stone_bricks, 1 mahogany_log biomesoplenty:mahogany_log, 1 birch_wood minecraft:birch_wood, 1 air minecraft:air, 1 white_cherry_leaves biomesoplenty:white_cherry_leaves, 1 magic_log biomesoplenty:magic_log, 1 light_gray_wool minecraft:light_gray_wool, 1 dark_oak_leaves minecraft:dark_oak_leaves, 1 willow_leaves biomesoplenty:willow_leaves, 1 storage_uranium immersiveengineering:storage_uranium, 1 framed_glass create:framed_glass, 1 magic_wood biomesoplenty:magic_wood, 1 kyanite_block silentgems:kyanite_block, 1 rose_quartz_block silentgems:rose_quartz_block, 1 gray_stained_glass minecraft:gray_stained_glass, 1 feather_block supplementaries:feather_block, 1 cherry_wood biomesoplenty:cherry_wood, 1 red_terracotta minecraft:red_terracotta, 1 air minecraft:air, 1 flint_block supplementaries:flint_block, 1 red_stained_glass minecraft:red_stained_glass, 1 stripped_red_archwood_wood ars_nouveau:stripped_red_archwood_wood, 1 stripped_netherwood_wood silentgear:stripped_netherwood_wood, 1 birch_leaves minecraft:birch_leaves, 1 iolite_block silentgems:iolite_block, 1 stripped_palm_wood biomesoplenty:stripped_palm_wood, 1 magenta_brick_extra domum_ornamentum:magenta_brick_extra, 1 air minecraft:air, 1 exposed_cut_copper minecraft:exposed_cut_copper, 1 ruby_block silentgems:ruby_block, 1 netherrack minecraft:netherrack, 1 purple_brick_extra domum_ornamentum:purple_brick_extra, 1 oak_log minecraft:oak_log, 1 orange_framed_glass quark:orange_framed_glass, 1 flax_block supplementaries:flax_block, 1 red_brick_extra domum_ornamentum:red_brick_extra, 1 brown_stained_glass minecraft:brown_stained_glass, 1 stripped_cinnamon_wood croptopia:stripped_cinnamon_wood, 1 flowering_azalea_leaves minecraft:flowering_azalea_leaves, 1 nether_wart_block minecraft:nether_wart_block, 1 stripped_acacia_log minecraft:stripped_acacia_log, 1 yellow_blossom_leaves quark:yellow_blossom_leaves, 1 netherwood_wood silentgear:netherwood_wood, 1 stripped_umbran_wood biomesoplenty:stripped_umbran_wood, 1 iron_block minecraft:iron_block, 1 magic_planks biomesoplenty:magic_planks, 1 stripped_birch_wood minecraft:stripped_birch_wood, 1 pink_blossom_leaves quark:pink_blossom_leaves, 1 smooth_sandstone minecraft:smooth_sandstone, 1 archwood_planks ars_nouveau:archwood_planks, 1 stripped_blue_archwood_wood ars_nouveau:stripped_blue_archwood_wood, 1 terracotta minecraft:terracotta, 1 black_stained_glass minecraft:black_stained_glass, 1 stripped_oak_wood minecraft:stripped_oak_wood, 1 oxidized_cut_copper minecraft:oxidized_cut_copper, 1 cut_sandstone minecraft:cut_sandstone, 1 oak_wood minecraft:oak_wood, 1 stripped_magic_wood biomesoplenty:stripped_magic_wood, 1 deepslate_bricks minecraft:deepslate_bricks, 1 stripped_netherwood_log silentgear:stripped_netherwood_log, 1 rooted_dirt minecraft:rooted_dirt, 1 stripped_magic_log biomesoplenty:stripped_magic_log, 1 polished_blackstone_bricks minecraft:polished_blackstone_bricks, 1 paper_extra domum_ornamentum:paper_extra, 1 dark_oak_wood minecraft:dark_oak_wood, 1 pink_stained_glass minecraft:pink_stained_glass, 1 stripped_purple_archwood_wood ars_nouveau:stripped_purple_archwood_wood, 1 jungle_leaves minecraft:jungle_leaves, 1 blue_blossom_leaves quark:blue_blossom_leaves, 1 dead_leaves biomesoplenty:dead_leaves, 1 yellow_brick_extra domum_ornamentum:yellow_brick_extra, 1 air minecraft:air, 1 green_archwood_log ars_nouveau:green_archwood_log, 1 air minecraft:air, 1 chiseled_sandstone minecraft:chiseled_sandstone, 1 brick_extra domum_ornamentum:brick_extra, 1 blue_framed_glass quark:blue_framed_glass, 1 white_terracotta minecraft:white_terracotta, 1 white_paper_extra domum_ornamentum:white_paper_extra, 1 spruce_wood minecraft:spruce_wood, 1 myalite quark:myalite, 1 air minecraft:air, 1 air minecraft:air, 1 blue_brick_extra domum_ornamentum:blue_brick_extra, 1 jungle_wood minecraft:jungle_wood, 1 palm_log biomesoplenty:palm_log, 1 air minecraft:air, 1 pink_concrete minecraft:pink_concrete, 1 stripped_dead_wood biomesoplenty:stripped_dead_wood, 1 glass minecraft:glass, 1 dead_log biomesoplenty:dead_log, 1 air minecraft:air, 1 ammolite_block silentgems:ammolite_block, 1 white_stained_glass minecraft:white_stained_glass, 1 obsidian minecraft:obsidian, 1 heliodor_block silentgems:heliodor_block, 1 cut_red_sandstone minecraft:cut_red_sandstone, 1 orange_autumn_leaves biomesoplenty:orange_autumn_leaves, 1 brown_framed_glass quark:brown_framed_glass, 1 black_terracotta minecraft:black_terracotta, 1 snow_block minecraft:snow_block, 1 storage_electrum immersiveengineering:storage_electrum, 1 stripped_hellbark_log biomesoplenty:stripped_hellbark_log, 1 topaz_block silentgems:topaz_block, 1 yellow_terracotta minecraft:yellow_terracotta, 1 light_blue_brick_extra domum_ornamentum:light_blue_brick_extra, 1 crimson_steel_block silentgear:crimson_steel_block, 1 brown_bricks domum_ornamentum:brown_bricks, 1 cherry_log biomesoplenty:cherry_log, 1 quartz_block minecraft:quartz_block, 1 fir_log biomesoplenty:fir_log, 1 glass_connected cyclic:glass_connected, 1 jasper quark:jasper, 1 blue_cobblestone_extra domum_ornamentum:blue_cobblestone_extra, 1 polished_shale quark:polished_shale, 1 cyan_brick_extra domum_ornamentum:cyan_brick_extra, 1 green_concrete minecraft:green_concrete, 1 orange_wool minecraft:orange_wool, 1 yellow_autumn_leaves biomesoplenty:yellow_autumn_leaves, 1 white_brick_extra domum_ornamentum:white_brick_extra, 1 storage_steel immersiveengineering:storage_steel, 1 grass_block minecraft:grass_block, 1 magenta_framed_glass quark:magenta_framed_glass, 1 air minecraft:air, 1 cherry_planks biomesoplenty:cherry_planks, 1 red_sandstone minecraft:red_sandstone, 1 hellbark_leaves biomesoplenty:hellbark_leaves, 1 black_brick_extra domum_ornamentum:black_brick_extra, 1 polished_deepslate minecraft:polished_deepslate, 1 mahogany_leaves biomesoplenty:mahogany_leaves, 1 air minecraft:air, 1 hellbark_wood biomesoplenty:hellbark_wood, 1 stripped_acacia_wood minecraft:stripped_acacia_wood, 1 cyan_framed_glass quark:cyan_framed_glass, 1 gray_brick_extra domum_ornamentum:gray_brick_extra, 1 stripped_dark_oak_log minecraft:stripped_dark_oak_log, 1 redstone_block minecraft:redstone_block, 1 air minecraft:air, 1 waxed_oxidized_cut_copper minecraft:waxed_oxidized_cut_copper, 1 waxed_exposed_cut_copper minecraft:waxed_exposed_cut_copper, 1 netherwood_leaves silentgear:netherwood_leaves, 1 redwood_planks biomesoplenty:redwood_planks, 1 purple_concrete minecraft:purple_concrete, 1 polished_blackstone minecraft:polished_blackstone, 1 willow_wood biomesoplenty:willow_wood, 1 storage_aluminum immersiveengineering:storage_aluminum, 1 stripped_fir_log biomesoplenty:stripped_fir_log, 1 end_stone minecraft:end_stone, 1 cyan_terracotta minecraft:cyan_terracotta, 1 limestone quark:limestone, 1 air minecraft:air, 1 white_framed_glass quark:white_framed_glass, 1 gray_framed_glass quark:gray_framed_glass, 1 light_gray_framed_glass quark:light_gray_framed_glass, 1 tuff minecraft:tuff, 1 hay_block minecraft:hay_block, 1 polished_andesite minecraft:polished_andesite, 1 palm_planks biomesoplenty:palm_planks, 1 light_gray_concrete minecraft:light_gray_concrete, 1 lime_concrete minecraft:lime_concrete, 1 crimson_stem minecraft:crimson_stem, 1 netherite_block minecraft:netherite_block, 1 brown_terracotta minecraft:brown_terracotta, 1 clay minecraft:clay, 1 emerald_block minecraft:emerald_block, 1 jacaranda_leaves biomesoplenty:jacaranda_leaves, 1 acacia_planks minecraft:acacia_planks, 1 gilded_blackstone minecraft:gilded_blackstone, 1 warped_planks minecraft:warped_planks, 1 lime_brick_extra domum_ornamentum:lime_brick_extra, 1 light_blue_terracotta minecraft:light_blue_terracotta, 1 air minecraft:air, 1 black_wool minecraft:black_wool, 1 acacia_log minecraft:acacia_log, 1 granite minecraft:granite, 1 cream_stone_bricks domum_ornamentum:cream_stone_bricks, 1 stripped_jungle_wood minecraft:stripped_jungle_wood, 1 gray_concrete minecraft:gray_concrete, 1 stripped_mahogany_log biomesoplenty:stripped_mahogany_log, 1 azure_electrum_block silentgear:azure_electrum_block, 1 willow_log biomesoplenty:willow_log, 1 purple_archwood_leaves ars_nouveau:purple_archwood_leaves, 1 orange_stained_glass minecraft:orange_stained_glass, 1 polished_calcite quark:polished_calcite, 1 white_diamond_block silentgems:white_diamond_block, 1 mossy_cobblestone_extra domum_ornamentum:mossy_cobblestone_extra, 1 palm_leaves biomesoplenty:palm_leaves, 1 azure_silver_block silentgear:azure_silver_block, 1 dark_oak_planks minecraft:dark_oak_planks, 1 brown_wool minecraft:brown_wool, 1 red_blossom_leaves quark:red_blossom_leaves, 1 light_gray_stained_glass minecraft:light_gray_stained_glass, 1 air minecraft:air, 1 dirty_glass quark:dirty_glass, 1 storage_constantan immersiveengineering:storage_constantan, 1 moss_block minecraft:moss_block, 1 warped_nylium minecraft:warped_nylium, 1 polished_granite minecraft:polished_granite, 1 red_framed_glass quark:red_framed_glass, 1 polished_diorite minecraft:polished_diorite, 1 lime_wool minecraft:lime_wool, 1 storage_lead immersiveengineering:storage_lead, 1 beige_stone_bricks domum_ornamentum:beige_stone_bricks, 1 orange_blossom_leaves quark:orange_blossom_leaves, 1 chiseled_stone_bricks minecraft:chiseled_stone_bricks, 1 polished_jasper quark:polished_jasper, 1 peridot_block silentgems:peridot_block, 1 waxed_oxidized_copper minecraft:waxed_oxidized_copper, 1 smooth_basalt minecraft:smooth_basalt, 1 magenta_stained_glass minecraft:magenta_stained_glass, 1 blue_concrete minecraft:blue_concrete, 1 stripped_dead_log biomesoplenty:stripped_dead_log, 1 tiled_glass create:tiled_glass, 1 fir_planks biomesoplenty:fir_planks, 1 crimson_planks minecraft:crimson_planks, 1 carnelian_block silentgems:carnelian_block, 1 magenta_wool minecraft:magenta_wool, 1 basalt minecraft:basalt, 1 lime_framed_glass quark:lime_framed_glass, 1 waxed_weathered_cut_copper minecraft:waxed_weathered_cut_copper, 1 air minecraft:air, 1 chiseled_red_sandstone minecraft:chiseled_red_sandstone, 1 brown_brick_extra domum_ornamentum:brown_brick_extra, 1 permafrost quark:permafrost, 1 stripped_warped_stem minecraft:stripped_warped_stem, 1 packed_ice minecraft:packed_ice, 1 warped_wart_block minecraft:warped_wart_block, 1 smooth_stone minecraft:smooth_stone, 1 purple_framed_glass quark:purple_framed_glass, 1 gray_terracotta minecraft:gray_terracotta, 1 brass_block create:brass_block, 1 crimson_nylium minecraft:crimson_nylium, 1 waxed_copper_block minecraft:waxed_copper_block, 1 crimson_iron_block silentgear:crimson_iron_block, 1 yellow_concrete minecraft:yellow_concrete, 1 redwood_leaves biomesoplenty:redwood_leaves, 1 turquoise_block silentgems:turquoise_block, 1 red_concrete minecraft:red_concrete, 1 fir_wood biomesoplenty:fir_wood, 1 cactus_extra domum_ornamentum:cactus_extra, 1 oak_planks minecraft:oak_planks, 1 green_brick_extra domum_ornamentum:green_brick_extra, 1 black_diamond_block silentgems:black_diamond_block, 1 lime_terracotta minecraft:lime_terracotta, 1 air minecraft:air, 1 green_terracotta minecraft:green_terracotta, 1 hellbark_planks biomesoplenty:hellbark_planks, 1 horizontal_framed_glass create:horizontal_framed_glass, 1 orange_concrete minecraft:orange_concrete, 1 stripped_jacaranda_wood biomesoplenty:stripped_jacaranda_wood, 1 redwood_wood biomesoplenty:redwood_wood, 1 stripped_palm_log biomesoplenty:stripped_palm_log, 1 green_framed_glass quark:green_framed_glass, 1 acacia_leaves minecraft:acacia_leaves, 1 chiseled_quartz_block minecraft:chiseled_quartz_block, 1 citrine_block silentgems:citrine_block, 1 cinnamon_wood croptopia:cinnamon_wood, 1 stripped_redwood_wood biomesoplenty:stripped_redwood_wood, 1 magic_leaves biomesoplenty:magic_leaves, 1 light_blue_stained_glass minecraft:light_blue_stained_glass, 1 origin_grass_block biomesoplenty:origin_grass_block, 1 stripped_warped_hyphae minecraft:stripped_warped_hyphae, 1 tyrian_steel_block silentgear:tyrian_steel_block, 1 purpur_pillar minecraft:purpur_pillar, 1 air minecraft:air, 1 air minecraft:air, 1 umbran_planks biomesoplenty:umbran_planks, 1 pink_terracotta minecraft:pink_terracotta, 1 stripped_willow_wood biomesoplenty:stripped_willow_wood, 1 birch_planks minecraft:birch_planks, 1 amethyst_block minecraft:amethyst_block, 1 purple_stained_glass minecraft:purple_stained_glass, 1 azalea_leaves minecraft:azalea_leaves, 1 mossy_stone_bricks minecraft:mossy_stone_bricks, 1 air minecraft:air, 1 air minecraft:air, 1 oak_leaves minecraft:oak_leaves, 1 cobblestone minecraft:cobblestone, 1 air minecraft:air, 1 pink_wool minecraft:pink_wool, 1 stripped_purple_archwood_log ars_nouveau:stripped_purple_archwood_log, 1 spruce_leaves minecraft:spruce_leaves, 1 stripped_cinnamon_log croptopia:stripped_cinnamon_log, 1 stripped_green_archwood_wood ars_nouveau:stripped_green_archwood_wood, 1 hellbark_log biomesoplenty:hellbark_log, 1 pink_brick_extra domum_ornamentum:pink_brick_extra, 1 cream_bricks domum_ornamentum:cream_bricks, 1 stripped_fir_wood biomesoplenty:stripped_fir_wood, 1 mahogany_planks biomesoplenty:mahogany_planks, 1 weathered_cut_copper minecraft:weathered_cut_copper, 1 light_blue_concrete minecraft:light_blue_concrete, 1 charcoal_block quark:charcoal_block, 1 cobblestone_extra domum_ornamentum:cobblestone_extra, 1 andesite minecraft:andesite, 1 stripped_mahogany_wood biomesoplenty:stripped_mahogany_wood, 1 red_archwood_leaves ars_nouveau:red_archwood_leaves, 1 dirt minecraft:dirt, 1 light_gray_terracotta minecraft:light_gray_terracotta, 1 cinnamon_log croptopia:cinnamon_log, 1 red_wool minecraft:red_wool, 1 origin_leaves biomesoplenty:origin_leaves, 1 lime_stained_glass minecraft:lime_stained_glass, 1 willow_planks biomesoplenty:willow_planks, 1 blaze_gold_block silentgear:blaze_gold_block, 1 umbran_log biomesoplenty:umbran_log, 1 stripped_birch_log minecraft:stripped_birch_log, 1 jacaranda_planks biomesoplenty:jacaranda_planks, 1 white_wool minecraft:white_wool, 1 magenta_terracotta minecraft:magenta_terracotta, 1 flowering_oak_leaves biomesoplenty:flowering_oak_leaves, 1 light_gray_brick_extra domum_ornamentum:light_gray_brick_extra, 1 waxed_weathered_copper minecraft:waxed_weathered_copper, 1 infested_stone minecraft:infested_stone, 1 stripped_spruce_log minecraft:stripped_spruce_log, 1 green_stained_glass minecraft:green_stained_glass, 1 spruce_planks minecraft:spruce_planks, 1 air minecraft:air, 1 netherwood_log silentgear:netherwood_log, 1 wheat_extra domum_ornamentum:wheat_extra, 1 stripped_umbran_log biomesoplenty:stripped_umbran_log, 1 stripped_hellbark_wood biomesoplenty:stripped_hellbark_wood, 1 lavender_blossom_leaves quark:lavender_blossom_leaves, 1 purple_terracotta minecraft:purple_terracotta, 1 stripped_cherry_log biomesoplenty:stripped_cherry_log, 1 umbran_wood biomesoplenty:umbran_wood, 1 blue_stained_glass minecraft:blue_stained_glass, 1 cobbled_deepslate minecraft:cobbled_deepslate, 1 spruce_log minecraft:spruce_log, 1 green_cactus_extra domum_ornamentum:green_cactus_extra, 1 yellow_framed_glass quark:yellow_framed_glass, 1 nether_bricks minecraft:nether_bricks, 1 green_cobblestone_extra domum_ornamentum:green_cobblestone_extra, 1 sandstone minecraft:sandstone, 1 budding_amethyst minecraft:budding_amethyst, 1 umbran_leaves biomesoplenty:umbran_leaves, 1 green_wool minecraft:green_wool, 1 blackstone minecraft:blackstone, 1 gray_wool minecraft:gray_wool, 1 stripped_spruce_wood minecraft:stripped_spruce_wood, 1 glowing_moss_block biomesoplenty:glowing_moss_block, 1 quartz_bricks minecraft:quartz_bricks, 1 smooth_red_sandstone minecraft:smooth_red_sandstone, 1 oxidized_copper minecraft:oxidized_copper, 1 cyan_stained_glass minecraft:cyan_stained_glass, 1 air minecraft:air, 1 mossy_cobblestone minecraft:mossy_cobblestone, 1 diamond_block minecraft:diamond_block, 1 red_nether_bricks minecraft:red_nether_bricks, 1 orange_brick_extra domum_ornamentum:orange_brick_extra, 1 infested_cobblestone minecraft:infested_cobblestone, 1 light_blue_framed_glass quark:light_blue_framed_glass, 1 sapphire_block silentgems:sapphire_block, 1 light_blue_wool minecraft:light_blue_wool, 1 beige_bricks domum_ornamentum:beige_bricks, 1 moldavite_block silentgems:moldavite_block, 1 mahogany_wood biomesoplenty:mahogany_wood, 1 mycelium minecraft:mycelium, 1 red_archwood_log ars_nouveau:red_archwood_log, 1 crimson_hyphae minecraft:crimson_hyphae, 1 pink_framed_glass quark:pink_framed_glass, 1 bricks minecraft:bricks, 1 cyan_concrete minecraft:cyan_concrete, 1 stripped_redwood_log biomesoplenty:stripped_redwood_log, 1 brown_concrete minecraft:brown_concrete, 1 copper_block minecraft:copper_block, 1 blue_archwood_leaves ars_nouveau:blue_archwood_leaves, 1 acacia_wood minecraft:acacia_wood, 1 pink_cherry_leaves biomesoplenty:pink_cherry_leaves, 1 stripped_cherry_wood biomesoplenty:stripped_cherry_wood, 1 purple_archwood_log ars_nouveau:purple_archwood_log, 1 netherwood_planks silentgear:netherwood_planks]]
}

java.lang.IllegalArgumentException: ItemStack value must not be empty. 1 air minecraft:air
	at mezz.jei.util.ErrorUtil.checkNotEmpty(ErrorUtil.java:209) ~[jei-1.18.1-9.1.2.61.jar%23123!:9.1.2.61]
	at mezz.jei.plugins.vanilla.ingredients.item.ItemStackHelper.getUniqueId(ItemStackHelper.java:82) ~[jei-1.18.1-9.1.2.61.jar%23123!:9.1.2.61]
	at mezz.jei.plugins.vanilla.ingredients.item.ItemStackHelper.getUniqueId(ItemStackHelper.java:30) ~[jei-1.18.1-9.1.2.61.jar%23123!:9.1.2.61]
	at mezz.jei.recipes.RecipeMap.addRecipe(RecipeMap.java:94) ~[jei-1.18.1-9.1.2.61.jar%23123!:9.1.2.61]
	at mezz.jei.recipes.RecipeMap.addRecipe(RecipeMap.java:75) ~[jei-1.18.1-9.1.2.61.jar%23123!:9.1.2.61]
	at mezz.jei.recipes.RecipeManagerInternal.addRecipe(RecipeManagerInternal.java:111) ~[jei-1.18.1-9.1.2.61.jar%23123!:9.1.2.61]
	at mezz.jei.recipes.RecipeManagerInternal.addRecipe(RecipeManagerInternal.java:94) ~[jei-1.18.1-9.1.2.61.jar%23123!:9.1.2.61]
	at mezz.jei.recipes.RecipeManagerInternal.addRecipes(RecipeManagerInternal.java:88) ~[jei-1.18.1-9.1.2.61.jar%23123!:9.1.2.61]
	at mezz.jei.load.registration.RecipeRegistration.addRecipes(RecipeRegistration.java:58) ~[jei-1.18.1-9.1.2.61.jar%23123!:9.1.2.61]
	at com.ldtteam.domumornamentum.jei.JEIPlugin.registerRecipes(JEIPlugin.java:63) ~[domum_ornamentum-1.18-1.0.31-ALPHA-universal.jar%2393!:1.18-1.0.31-ALPHA]
	at mezz.jei.load.PluginLoader.lambda$createRecipeManager$9(PluginLoader.java:139) ~[jei-1.18.1-9.1.2.61.jar%23123!:9.1.2.61]
	at mezz.jei.load.PluginCaller.callOnPlugins(PluginCaller.java:26) ~[jei-1.18.1-9.1.2.61.jar%23123!:9.1.2.61]
	at mezz.jei.load.PluginLoader.createRecipeManager(PluginLoader.java:139) ~[jei-1.18.1-9.1.2.61.jar%23123!:9.1.2.61]
	at mezz.jei.startup.JeiStarter.start(JeiStarter.java:85) ~[jei-1.18.1-9.1.2.61.jar%23123!:9.1.2.61]
	at mezz.jei.startup.ClientLifecycleHandler.startJEI(ClientLifecycleHandler.java:134) ~[jei-1.18.1-9.1.2.61.jar%23123!:9.1.2.61]
	at mezz.jei.startup.ClientLifecycleHandler.setupJEI(ClientLifecycleHandler.java:123) ~[jei-1.18.1-9.1.2.61.jar%23123!:9.1.2.61]
	at mezz.jei.startup.ClientLifecycleHandler.lambda$new$2(ClientLifecycleHandler.java:107) ~[jei-1.18.1-9.1.2.61.jar%23123!:9.1.2.61]
	at net.minecraftforge.eventbus.EventBus.doCastFilter(EventBus.java:247) ~[eventbus-5.0.3.jar%232!:?]
	at net.minecraftforge.eventbus.EventBus.lambda$addListener$11(EventBus.java:239) ~[eventbus-5.0.3.jar%232!:?]
	at net.minecraftforge.eventbus.EventBus.post(EventBus.java:302) ~[eventbus-5.0.3.jar%232!:?]
	at net.minecraftforge.eventbus.EventBus.post(EventBus.java:283) ~[eventbus-5.0.3.jar%232!:?]
	at net.minecraftforge.client.ForgeHooksClient.onRecipesUpdated(ForgeHooksClient.java:677) ~[forge-1.18.1-39.0.10-universal.jar%23194!:?]
	at net.minecraft.client.multiplayer.ClientPacketListener.m_6327_(ClientPacketListener.java:1166) ~[client-1.18.1-20211210.034407-srg.jar%23190!:?]
	at net.minecraft.network.protocol.game.ClientboundUpdateRecipesPacket.m_5797_(ClientboundUpdateRecipesPacket.java:32) ~[client-1.18.1-20211210.034407-srg.jar%23190!:?]
	at net.minecraft.network.protocol.game.ClientboundUpdateRecipesPacket.m_5797_(ClientboundUpdateRecipesPacket.java:14) ~[client-1.18.1-20211210.034407-srg.jar%23190!:?]
	at net.minecraft.network.protocol.PacketUtils.m_131356_(PacketUtils.java:21) ~[client-1.18.1-20211210.034407-srg.jar%23190!:?]
	at net.minecraft.util.thread.BlockableEventLoop.m_6367_(BlockableEventLoop.java:151) ~[client-1.18.1-20211210.034407-srg.jar%23190!:?]
	at net.minecraft.util.thread.ReentrantBlockableEventLoop.m_6367_(ReentrantBlockableEventLoop.java:23) ~[client-1.18.1-20211210.034407-srg.jar%23190!:?]
	at net.minecraft.util.thread.BlockableEventLoop.m_7245_(BlockableEventLoop.java:125) ~[client-1.18.1-20211210.034407-srg.jar%23190!:?]
	at net.minecraft.util.thread.BlockableEventLoop.m_18699_(BlockableEventLoop.java:110) ~[client-1.18.1-20211210.034407-srg.jar%23190!:?]
	at net.minecraft.client.Minecraft.m_91383_(Minecraft.java:1009) ~[client-1.18.1-20211210.034407-srg.jar%23190!:?]
	at net.minecraft.client.Minecraft.m_91374_(Minecraft.java:660) ~[client-1.18.1-20211210.034407-srg.jar%23190!:?]
	at net.minecraft.client.main.Main.main(Main.java:205) ~[client-1.18.1-20211210.034407-srg.jar%23190!:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:568) ~[?:?]
	at net.minecraftforge.fml.loading.targets.CommonClientLaunchHandler.lambda$launchService$0(CommonClientLaunchHandler.java:45) ~[fmlloader-1.18.1-39.0.10.jar%2323!:?]
	at cpw.mods.modlauncher.LaunchServiceHandlerDecorator.launch(LaunchServiceHandlerDecorator.java:37) [modlauncher-9.0.7.jar%235!:?]
	at cpw.mods.modlauncher.LaunchServiceHandler.launch(LaunchServiceHandler.java:53) [modlauncher-9.0.7.jar%235!:?]
	at cpw.mods.modlauncher.LaunchServiceHandler.launch(LaunchServiceHandler.java:71) [modlauncher-9.0.7.jar%235!:?]
	at cpw.mods.modlauncher.Launcher.run(Launcher.java:106) [modlauncher-9.0.7.jar%235!:?]
	at cpw.mods.modlauncher.Launcher.main(Launcher.java:77) [modlauncher-9.0.7.jar%235!:?]
	at cpw.mods.modlauncher.BootstrapLaunchConsumer.accept(BootstrapLaunchConsumer.java:26) [modlauncher-9.0.7.jar%235!:?]
	at cpw.mods.modlauncher.BootstrapLaunchConsumer.accept(BootstrapLaunchConsumer.java:23) [modlauncher-9.0.7.jar%235!:?]
	at cpw.mods.bootstraplauncher.BootstrapLauncher.main(BootstrapLauncher.java:90) [bootstraplauncher-0.1.17.jar:?]
[16:23:50] [Render thread/ERROR]: Found a broken recipe: Domum Ornamentum domum_ornamentum:vanilla_stairs_compat class com.ldtteam.domumornamentum.recipe.architectscutter.ArchitectsCutterRecipe {
  Outputs:
    net.minecraft.world.item.ItemStack: [[1 vanilla_stairs_compat domum_ornamentum:vanilla_stairs_compat]]
  Inputs:
    net.minecraft.world.item.ItemStack: [[1 cobblestone_extra domum_ornamentum:cobblestone_extra, 1 black_concrete minecraft:black_concrete, 1 white_concrete minecraft:white_concrete, 1 flowering_oak_leaves biomesoplenty:flowering_oak_leaves, 1 obsidian minecraft:obsidian, 1 ruby_block silentgems:ruby_block, 1 paper_extra domum_ornamentum:paper_extra, 1 air minecraft:air, 1 stripped_hellbark_log biomesoplenty:stripped_hellbark_log, 1 fire_coral_block minecraft:fire_coral_block, 1 tyrian_steel_block silentgear:tyrian_steel_block, 1 cherry_wood biomesoplenty:cherry_wood, 1 palm_leaves biomesoplenty:palm_leaves, 1 cyan_wool minecraft:cyan_wool, 1 netherwood_leaves silentgear:netherwood_leaves, 1 stripped_acacia_wood minecraft:stripped_acacia_wood, 1 black_terracotta minecraft:black_terracotta, 1 umbran_log biomesoplenty:umbran_log, 1 stripped_red_archwood_wood ars_nouveau:stripped_red_archwood_wood, 1 stripped_fir_wood biomesoplenty:stripped_fir_wood, 1 storage_silver immersiveengineering:storage_silver, 1 stripped_jacaranda_log biomesoplenty:stripped_jacaranda_log, 1 white_wool minecraft:white_wool, 1 gray_concrete minecraft:gray_concrete, 1 gray_wool minecraft:gray_wool, 1 blue_brick_extra domum_ornamentum:blue_brick_extra, 1 mahogany_log biomesoplenty:mahogany_log, 1 cyan_brick_extra domum_ornamentum:cyan_brick_extra, 1 warped_wart_block minecraft:warped_wart_block, 1 framed_glass quark:framed_glass, 1 air minecraft:air, 1 storage_uranium immersiveengineering:storage_uranium, 1 brown_concrete minecraft:brown_concrete, 1 dark_oak_log minecraft:dark_oak_log, 1 terracotta minecraft:terracotta, 1 brass_block create:brass_block, 1 red_stained_glass minecraft:red_stained_glass, 1 magenta_stained_glass minecraft:magenta_stained_glass, 1 palm_log biomesoplenty:palm_log, 1 brown_brick_extra domum_ornamentum:brown_brick_extra, 1 coal_block minecraft:coal_block, 1 white_brick_extra domum_ornamentum:white_brick_extra, 1 purple_stained_glass minecraft:purple_stained_glass, 1 citrine_block silentgems:citrine_block, 1 brown_bricks domum_ornamentum:brown_bricks, 1 light_blue_framed_glass quark:light_blue_framed_glass, 1 stripped_netherwood_wood silentgear:stripped_netherwood_wood, 1 cyan_stained_glass minecraft:cyan_stained_glass, 1 red_concrete minecraft:red_concrete, 1 bort_block silentgear:bort_block, 1 acacia_log minecraft:acacia_log, 1 quartz_pillar minecraft:quartz_pillar, 1 yellow_terracotta minecraft:yellow_terracotta, 1 netherwood_wood silentgear:netherwood_wood, 1 origin_leaves biomesoplenty:origin_leaves, 1 stripped_warped_hyphae minecraft:stripped_warped_hyphae, 1 neptunium_block aquaculture:neptunium_block, 1 white_diamond_block silentgems:white_diamond_block, 1 stripped_willow_wood biomesoplenty:stripped_willow_wood, 1 lime_framed_glass quark:lime_framed_glass, 1 stripped_magic_log biomesoplenty:stripped_magic_log, 1 air minecraft:air, 1 fir_log biomesoplenty:fir_log, 1 blue_framed_glass quark:blue_framed_glass, 1 cinnamon_wood croptopia:cinnamon_wood, 1 air minecraft:air, 1 netherrack minecraft:netherrack, 1 stripped_cinnamon_wood croptopia:stripped_cinnamon_wood, 1 brain_coral_block minecraft:brain_coral_block, 1 blue_archwood_log ars_nouveau:blue_archwood_log, 1 oak_wood minecraft:oak_wood, 1 air minecraft:air, 1 lime_terracotta minecraft:lime_terracotta, 1 stripped_red_archwood_log ars_nouveau:stripped_red_archwood_log, 1 light_gray_brick_extra domum_ornamentum:light_gray_brick_extra, 1 magic_log biomesoplenty:magic_log, 1 orange_concrete minecraft:orange_concrete, 1 stripped_spruce_log minecraft:stripped_spruce_log, 1 pink_wool minecraft:pink_wool, 1 red_archwood_log ars_nouveau:red_archwood_log, 1 exposed_copper minecraft:exposed_copper, 1 coarse_dirt minecraft:coarse_dirt, 1 acacia_leaves minecraft:acacia_leaves, 1 green_wool minecraft:green_wool, 1 chiseled_stone_bricks minecraft:chiseled_stone_bricks, 1 moss_block minecraft:moss_block, 1 vertical_framed_glass create:vertical_framed_glass, 1 black_diamond_block silentgems:black_diamond_block, 1 light_blue_terracotta minecraft:light_blue_terracotta, 1 hellbark_wood biomesoplenty:hellbark_wood, 1 carnelian_block silentgems:carnelian_block, 1 stripped_blue_archwood_log ars_nouveau:stripped_blue_archwood_log, 1 stripped_acacia_log minecraft:stripped_acacia_log, 1 blue_wool minecraft:blue_wool, 1 stripped_jungle_wood minecraft:stripped_jungle_wood, 1 budding_amethyst minecraft:budding_amethyst, 1 magenta_concrete minecraft:magenta_concrete, 1 gray_terracotta minecraft:gray_terracotta, 1 white_stained_glass minecraft:white_stained_glass, 1 air minecraft:air, 1 storage_electrum immersiveengineering:storage_electrum, 1 magenta_terracotta minecraft:magenta_terracotta, 1 black_wool minecraft:black_wool, 1 cut_sandstone minecraft:cut_sandstone, 1 magenta_framed_glass quark:magenta_framed_glass, 1 moldavite_block silentgems:moldavite_block, 1 lavender_blossom_leaves quark:lavender_blossom_leaves, 1 stripped_warped_stem minecraft:stripped_warped_stem, 1 air minecraft:air, 1 peridot_block silentgems:peridot_block, 1 polished_basalt minecraft:polished_basalt, 1 birch_leaves minecraft:birch_leaves, 1 spruce_leaves minecraft:spruce_leaves, 1 stripped_crimson_hyphae minecraft:stripped_crimson_hyphae, 1 warped_hyphae minecraft:warped_hyphae, 1 grass_block minecraft:grass_block, 1 stripped_birch_wood minecraft:stripped_birch_wood, 1 yellow_blossom_leaves quark:yellow_blossom_leaves, 1 gray_framed_glass quark:gray_framed_glass, 1 tiled_glass create:tiled_glass, 1 magic_wood biomesoplenty:magic_wood, 1 air minecraft:air, 1 purple_framed_glass quark:purple_framed_glass, 1 oak_leaves minecraft:oak_leaves, 1 palm_wood biomesoplenty:palm_wood, 1 stripped_oak_wood minecraft:stripped_oak_wood, 1 stripped_green_archwood_wood ars_nouveau:stripped_green_archwood_wood, 1 waxed_exposed_copper minecraft:waxed_exposed_copper, 1 blackstone minecraft:blackstone, 1 white_terracotta minecraft:white_terracotta, 1 air minecraft:air, 1 jungle_wood minecraft:jungle_wood, 1 stripped_cinnamon_log croptopia:stripped_cinnamon_log, 1 green_terracotta minecraft:green_terracotta, 1 gray_brick_extra domum_ornamentum:gray_brick_extra, 1 warped_stem minecraft:warped_stem, 1 green_brick_extra domum_ornamentum:green_brick_extra, 1 stripped_umbran_wood biomesoplenty:stripped_umbran_wood, 1 purple_terracotta minecraft:purple_terracotta, 1 snow_block minecraft:snow_block, 1 pink_terracotta minecraft:pink_terracotta, 1 umbran_wood biomesoplenty:umbran_wood, 1 purple_wool minecraft:purple_wool, 1 orange_wool minecraft:orange_wool, 1 spruce_log minecraft:spruce_log, 1 light_gray_stained_glass minecraft:light_gray_stained_glass, 1 black_stained_glass minecraft:black_stained_glass, 1 purple_archwood_leaves ars_nouveau:purple_archwood_leaves, 1 purple_concrete minecraft:purple_concrete, 1 stripped_netherwood_log silentgear:stripped_netherwood_log, 1 mahogany_wood biomesoplenty:mahogany_wood, 1 nether_wart_block minecraft:nether_wart_block, 1 lapis_block minecraft:lapis_block, 1 stripped_crimson_stem minecraft:stripped_crimson_stem, 1 storage_aluminum immersiveengineering:storage_aluminum, 1 storage_steel immersiveengineering:storage_steel, 1 light_blue_stained_glass minecraft:light_blue_stained_glass, 1 stripped_jacaranda_wood biomesoplenty:stripped_jacaranda_wood, 1 black_brick_extra domum_ornamentum:black_brick_extra, 1 air minecraft:air, 1 packed_ice minecraft:packed_ice, 1 cyan_concrete minecraft:cyan_concrete, 1 light_gray_framed_glass quark:light_gray_framed_glass, 1 air minecraft:air, 1 white_framed_glass quark:white_framed_glass, 1 light_blue_concrete minecraft:light_blue_concrete, 1 azalea_leaves minecraft:azalea_leaves, 1 purple_cobblestone_extra domum_ornamentum:purple_cobblestone_extra, 1 spruce_wood minecraft:spruce_wood, 1 light_blue_brick_extra domum_ornamentum:light_blue_brick_extra, 1 red_framed_glass quark:red_framed_glass, 1 blue_blossom_leaves quark:blue_blossom_leaves, 1 air minecraft:air, 1 smooth_basalt minecraft:smooth_basalt, 1 beige_bricks domum_ornamentum:beige_bricks, 1 white_paper_extra domum_ornamentum:white_paper_extra, 1 wheat_extra domum_ornamentum:wheat_extra, 1 green_archwood_leaves ars_nouveau:green_archwood_leaves, 1 cream_bricks domum_ornamentum:cream_bricks, 1 lime_wool minecraft:lime_wool, 1 copper_block minecraft:copper_block, 1 air minecraft:air, 1 cyan_framed_glass quark:cyan_framed_glass, 1 cream_stone_bricks domum_ornamentum:cream_stone_bricks, 1 hellbark_leaves biomesoplenty:hellbark_leaves, 1 redwood_leaves biomesoplenty:redwood_leaves, 1 jacaranda_log biomesoplenty:jacaranda_log, 1 crimson_steel_block silentgear:crimson_steel_block, 1 blue_concrete minecraft:blue_concrete, 1 air minecraft:air, 1 cyan_terracotta minecraft:cyan_terracotta, 1 jacaranda_leaves biomesoplenty:jacaranda_leaves, 1 oxidized_copper minecraft:oxidized_copper, 1 air minecraft:air, 1 stripped_cherry_log biomesoplenty:stripped_cherry_log, 1 azure_electrum_block silentgear:azure_electrum_block, 1 yellow_framed_glass quark:yellow_framed_glass, 1 quartz_block minecraft:quartz_block, 1 black_framed_glass quark:black_framed_glass, 1 yellow_wool minecraft:yellow_wool, 1 air minecraft:air, 1 stripped_redwood_wood biomesoplenty:stripped_redwood_wood, 1 yellow_autumn_leaves biomesoplenty:yellow_autumn_leaves, 1 blaze_gold_block silentgear:blaze_gold_block, 1 diamond_block minecraft:diamond_block, 1 pink_blossom_leaves quark:pink_blossom_leaves, 1 pink_concrete minecraft:pink_concrete, 1 red_terracotta minecraft:red_terracotta, 1 rainbow_birch_leaves biomesoplenty:rainbow_birch_leaves, 1 gray_stained_glass minecraft:gray_stained_glass, 1 basalt minecraft:basalt, 1 blue_archwood_leaves ars_nouveau:blue_archwood_leaves, 1 dead_log biomesoplenty:dead_log, 1 willow_log biomesoplenty:willow_log, 1 lime_concrete minecraft:lime_concrete, 1 chiseled_quartz_block minecraft:chiseled_quartz_block, 1 mahogany_leaves biomesoplenty:mahogany_leaves, 1 green_stained_glass minecraft:green_stained_glass, 1 green_cobblestone_extra domum_ornamentum:green_cobblestone_extra, 1 hay_block minecraft:hay_block, 1 air minecraft:air, 1 dark_oak_wood minecraft:dark_oak_wood, 1 brown_wool minecraft:brown_wool, 1 orange_terracotta minecraft:orange_terracotta, 1 stripped_jungle_log minecraft:stripped_jungle_log, 1 stripped_green_archwood_log ars_nouveau:stripped_green_archwood_log, 1 jungle_log minecraft:jungle_log, 1 stripped_dark_oak_log minecraft:stripped_dark_oak_log, 1 netherite_block minecraft:netherite_block, 1 redwood_wood biomesoplenty:redwood_wood, 1 lime_brick_extra domum_ornamentum:lime_brick_extra, 1 lime_stained_glass minecraft:lime_stained_glass, 1 jacaranda_wood biomesoplenty:jacaranda_wood, 1 yellow_concrete minecraft:yellow_concrete, 1 charcoal_block quark:charcoal_block, 1 hellbark_log biomesoplenty:hellbark_log, 1 jungle_leaves minecraft:jungle_leaves, 1 emerald_block minecraft:emerald_block, 1 turquoise_block silentgems:turquoise_block, 1 air minecraft:air, 1 air minecraft:air, 1 stripped_umbran_log biomesoplenty:stripped_umbran_log, 1 stripped_dead_log biomesoplenty:stripped_dead_log, 1 pink_stained_glass minecraft:pink_stained_glass, 1 red_brick_extra domum_ornamentum:red_brick_extra, 1 purple_archwood_log ars_nouveau:purple_archwood_log, 1 heliodor_block silentgems:heliodor_block, 1 redstone_block minecraft:redstone_block, 1 beige_stone_bricks domum_ornamentum:beige_stone_bricks, 1 orange_stained_glass minecraft:orange_stained_glass, 1 stripped_dead_wood biomesoplenty:stripped_dead_wood, 1 air minecraft:air, 1 gold_block minecraft:gold_block, 1 iron_block minecraft:iron_block, 1 cactus_extra domum_ornamentum:cactus_extra, 1 fir_leaves biomesoplenty:fir_leaves, 1 amethyst_block minecraft:amethyst_block, 1 framed_glass create:framed_glass, 1 netherwood_log silentgear:netherwood_log, 1 glass minecraft:glass, 1 air minecraft:air, 1 brown_stone_bricks domum_ornamentum:brown_stone_bricks, 1 stripped_magic_wood biomesoplenty:stripped_magic_wood, 1 cracked_stone_bricks minecraft:cracked_stone_bricks, 1 air minecraft:air, 1 storage_lead immersiveengineering:storage_lead, 1 waxed_weathered_copper minecraft:waxed_weathered_copper, 1 flax_block supplementaries:flax_block, 1 brown_stained_glass minecraft:brown_stained_glass, 1 light_blue_wool minecraft:light_blue_wool, 1 light_gray_terracotta minecraft:light_gray_terracotta, 1 green_concrete minecraft:green_concrete, 1 cut_copper minecraft:cut_copper, 1 blue_cobblestone_extra domum_ornamentum:blue_cobblestone_extra, 1 green_cactus_extra domum_ornamentum:green_cactus_extra, 1 feather_block supplementaries:feather_block, 1 alexandrite_block silentgems:alexandrite_block, 1 dirt minecraft:dirt, 1 stripped_willow_log biomesoplenty:stripped_willow_log, 1 stripped_palm_wood biomesoplenty:stripped_palm_wood, 1 mossy_cobblestone_extra domum_ornamentum:mossy_cobblestone_extra, 1 stripped_mahogany_log biomesoplenty:stripped_mahogany_log, 1 brown_terracotta minecraft:brown_terracotta, 1 flowering_azalea_leaves minecraft:flowering_azalea_leaves, 1 orange_framed_glass quark:orange_framed_glass, 1 stripped_hellbark_wood biomesoplenty:stripped_hellbark_wood, 1 cherry_log biomesoplenty:cherry_log, 1 weathered_copper minecraft:weathered_copper, 1 air minecraft:air, 1 light_gray_wool minecraft:light_gray_wool, 1 rose_quartz_block silentgems:rose_quartz_block, 1 stripped_dark_oak_wood minecraft:stripped_dark_oak_wood, 1 flint_block supplementaries:flint_block, 1 azure_silver_block silentgear:azure_silver_block, 1 stripped_fir_log biomesoplenty:stripped_fir_log, 1 redwood_log biomesoplenty:redwood_log, 1 red_archwood_leaves ars_nouveau:red_archwood_leaves, 1 brown_framed_glass quark:brown_framed_glass, 1 warped_nylium minecraft:warped_nylium, 1 stripped_mahogany_wood biomesoplenty:stripped_mahogany_wood, 1 maple_leaves biomesoplenty:maple_leaves, 1 waxed_copper_block minecraft:waxed_copper_block, 1 air minecraft:air, 1 dark_oak_leaves minecraft:dark_oak_leaves, 1 pink_brick_extra domum_ornamentum:pink_brick_extra, 1 green_archwood_log ars_nouveau:green_archwood_log, 1 magic_leaves biomesoplenty:magic_leaves, 1 orange_autumn_leaves biomesoplenty:orange_autumn_leaves, 1 tube_coral_block minecraft:tube_coral_block, 1 light_gray_concrete minecraft:light_gray_concrete, 1 glass_connected cyclic:glass_connected, 1 purple_brick_extra domum_ornamentum:purple_brick_extra, 1 stripped_birch_log minecraft:stripped_birch_log, 1 dead_leaves biomesoplenty:dead_leaves, 1 air minecraft:air, 1 birch_wood minecraft:birch_wood, 1 willow_wood biomesoplenty:willow_wood, 1 sapphire_block silentgems:sapphire_block, 1 topaz_block silentgems:topaz_block, 1 crimson_iron_block silentgear:crimson_iron_block, 1 podzol minecraft:podzol, 1 crimson_stem minecraft:crimson_stem, 1 air minecraft:air, 1 iolite_block silentgems:iolite_block, 1 blue_terracotta minecraft:blue_terracotta, 1 yellow_brick_extra domum_ornamentum:yellow_brick_extra, 1 fir_wood biomesoplenty:fir_wood, 1 storage_constantan immersiveengineering:storage_constantan, 1 kyanite_block silentgems:kyanite_block, 1 pink_cherry_leaves biomesoplenty:pink_cherry_leaves, 1 storage_nickel immersiveengineering:storage_nickel, 1 soap_block supplementaries:soap_block, 1 green_framed_glass quark:green_framed_glass, 1 white_cherry_leaves biomesoplenty:white_cherry_leaves, 1 stripped_redwood_log biomesoplenty:stripped_redwood_log, 1 orange_brick_extra domum_ornamentum:orange_brick_extra, 1 horizontal_framed_glass create:horizontal_framed_glass, 1 dead_wood biomesoplenty:dead_wood, 1 origin_grass_block biomesoplenty:origin_grass_block, 1 pink_framed_glass quark:pink_framed_glass, 1 stripped_palm_log biomesoplenty:stripped_palm_log, 1 blue_stained_glass minecraft:blue_stained_glass, 1 horn_coral_block minecraft:horn_coral_block, 1 orange_blossom_leaves quark:orange_blossom_leaves, 1 waxed_oxidized_copper minecraft:waxed_oxidized_copper, 1 crimson_nylium minecraft:crimson_nylium, 1 glowing_moss_block biomesoplenty:glowing_moss_block, 1 stripped_cherry_wood biomesoplenty:stripped_cherry_wood, 1 rooted_dirt minecraft:rooted_dirt, 1 magenta_brick_extra domum_ornamentum:magenta_brick_extra, 1 ammolite_block silentgems:ammolite_block, 1 stripped_blue_archwood_wood ars_nouveau:stripped_blue_archwood_wood, 1 zinc_block create:zinc_block, 1 dirty_glass quark:dirty_glass, 1 cinnamon_log croptopia:cinnamon_log, 1 mycelium minecraft:mycelium, 1 acacia_wood minecraft:acacia_wood, 1 stripped_oak_log minecraft:stripped_oak_log, 1 bubble_coral_block minecraft:bubble_coral_block, 1 stripped_purple_archwood_log ars_nouveau:stripped_purple_archwood_log, 1 birch_log minecraft:birch_log, 1 red_blossom_leaves quark:red_blossom_leaves, 1 magenta_wool minecraft:magenta_wool, 1 stripped_spruce_wood minecraft:stripped_spruce_wood, 1 willow_leaves biomesoplenty:willow_leaves, 1 brick_extra domum_ornamentum:brick_extra, 1 red_wool minecraft:red_wool, 1 umbran_leaves biomesoplenty:umbran_leaves, 1 chiseled_sandstone minecraft:chiseled_sandstone, 1 yellow_stained_glass minecraft:yellow_stained_glass, 1 oak_log minecraft:oak_log, 1 crimson_hyphae minecraft:crimson_hyphae, 1 air minecraft:air, 1 stripped_purple_archwood_wood ars_nouveau:stripped_purple_archwood_wood, 1 gilded_blackstone minecraft:gilded_blackstone]]
}

java.lang.IllegalArgumentException: ItemStack value must not be empty. 1 air minecraft:air
	at mezz.jei.util.ErrorUtil.checkNotEmpty(ErrorUtil.java:209) ~[jei-1.18.1-9.1.2.61.jar%23123!:9.1.2.61]
	at mezz.jei.plugins.vanilla.ingredients.item.ItemStackHelper.getUniqueId(ItemStackHelper.java:82) ~[jei-1.18.1-9.1.2.61.jar%23123!:9.1.2.61]
	at mezz.jei.plugins.vanilla.ingredients.item.ItemStackHelper.getUniqueId(ItemStackHelper.java:30) ~[jei-1.18.1-9.1.2.61.jar%23123!:9.1.2.61]
	at mezz.jei.recipes.RecipeMap.addRecipe(RecipeMap.java:94) ~[jei-1.18.1-9.1.2.61.jar%23123!:9.1.2.61]
	at mezz.jei.recipes.RecipeMap.addRecipe(RecipeMap.java:75) ~[jei-1.18.1-9.1.2.61.jar%23123!:9.1.2.61]
	at mezz.jei.recipes.RecipeManagerInternal.addRecipe(RecipeManagerInternal.java:111) ~[jei-1.18.1-9.1.2.61.jar%23123!:9.1.2.61]
	at mezz.jei.recipes.RecipeManagerInternal.addRecipe(RecipeManagerInternal.java:94) ~[jei-1.18.1-9.1.2.61.jar%23123!:9.1.2.61]
	at mezz.jei.recipes.RecipeManagerInternal.addRecipes(RecipeManagerInternal.java:88) ~[jei-1.18.1-9.1.2.61.jar%23123!:9.1.2.61]
	at mezz.jei.load.registration.RecipeRegistration.addRecipes(RecipeRegistration.java:58) ~[jei-1.18.1-9.1.2.61.jar%23123!:9.1.2.61]
	at com.ldtteam.domumornamentum.jei.JEIPlugin.registerRecipes(JEIPlugin.java:63) ~[domum_ornamentum-1.18-1.0.31-ALPHA-universal.jar%2393!:1.18-1.0.31-ALPHA]
	at mezz.jei.load.PluginLoader.lambda$createRecipeManager$9(PluginLoader.java:139) ~[jei-1.18.1-9.1.2.61.jar%23123!:9.1.2.61]
	at mezz.jei.load.PluginCaller.callOnPlugins(PluginCaller.java:26) ~[jei-1.18.1-9.1.2.61.jar%23123!:9.1.2.61]
	at mezz.jei.load.PluginLoader.createRecipeManager(PluginLoader.java:139) ~[jei-1.18.1-9.1.2.61.jar%23123!:9.1.2.61]
	at mezz.jei.startup.JeiStarter.start(JeiStarter.java:85) ~[jei-1.18.1-9.1.2.61.jar%23123!:9.1.2.61]
	at mezz.jei.startup.ClientLifecycleHandler.startJEI(ClientLifecycleHandler.java:134) ~[jei-1.18.1-9.1.2.61.jar%23123!:9.1.2.61]
	at mezz.jei.startup.ClientLifecycleHandler.setupJEI(ClientLifecycleHandler.java:123) ~[jei-1.18.1-9.1.2.61.jar%23123!:9.1.2.61]
	at mezz.jei.startup.ClientLifecycleHandler.lambda$new$2(ClientLifecycleHandler.java:107) ~[jei-1.18.1-9.1.2.61.jar%23123!:9.1.2.61]
	at net.minecraftforge.eventbus.EventBus.doCastFilter(EventBus.java:247) ~[eventbus-5.0.3.jar%232!:?]
	at net.minecraftforge.eventbus.EventBus.lambda$addListener$11(EventBus.java:239) ~[eventbus-5.0.3.jar%232!:?]
	at net.minecraftforge.eventbus.EventBus.post(EventBus.java:302) ~[eventbus-5.0.3.jar%232!:?]
	at net.minecraftforge.eventbus.EventBus.post(EventBus.java:283) ~[eventbus-5.0.3.jar%232!:?]
	at net.minecraftforge.client.ForgeHooksClient.onRecipesUpdated(ForgeHooksClient.java:677) ~[forge-1.18.1-39.0.10-universal.jar%23194!:?]
	at net.minecraft.client.multiplayer.ClientPacketListener.m_6327_(ClientPacketListener.java:1166) ~[client-1.18.1-20211210.034407-srg.jar%23190!:?]
	at net.minecraft.network.protocol.game.ClientboundUpdateRecipesPacket.m_5797_(ClientboundUpdateRecipesPacket.java:32) ~[client-1.18.1-20211210.034407-srg.jar%23190!:?]
	at net.minecraft.network.protocol.game.ClientboundUpdateRecipesPacket.m_5797_(ClientboundUpdateRecipesPacket.java:14) ~[client-1.18.1-20211210.034407-srg.jar%23190!:?]
	at net.minecraft.network.protocol.PacketUtils.m_131356_(PacketUtils.java:21) ~[client-1.18.1-20211210.034407-srg.jar%23190!:?]
	at net.minecraft.util.thread.BlockableEventLoop.m_6367_(BlockableEventLoop.java:151) ~[client-1.18.1-20211210.034407-srg.jar%23190!:?]
	at net.minecraft.util.thread.ReentrantBlockableEventLoop.m_6367_(ReentrantBlockableEventLoop.java:23) ~[client-1.18.1-20211210.034407-srg.jar%23190!:?]
	at net.minecraft.util.thread.BlockableEventLoop.m_7245_(BlockableEventLoop.java:125) ~[client-1.18.1-20211210.034407-srg.jar%23190!:?]
	at net.minecraft.util.thread.BlockableEventLoop.m_18699_(BlockableEventLoop.java:110) ~[client-1.18.1-20211210.034407-srg.jar%23190!:?]
	at net.minecraft.client.Minecraft.m_91383_(Minecraft.java:1009) ~[client-1.18.1-20211210.034407-srg.jar%23190!:?]
	at net.minecraft.client.Minecraft.m_91374_(Minecraft.java:660) ~[client-1.18.1-20211210.034407-srg.jar%23190!:?]
	at net.minecraft.client.main.Main.main(Main.java:205) ~[client-1.18.1-20211210.034407-srg.jar%23190!:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:568) ~[?:?]
	at net.minecraftforge.fml.loading.targets.CommonClientLaunchHandler.lambda$launchService$0(CommonClientLaunchHandler.java:45) ~[fmlloader-1.18.1-39.0.10.jar%2323!:?]
	at cpw.mods.modlauncher.LaunchServiceHandlerDecorator.launch(LaunchServiceHandlerDecorator.java:37) [modlauncher-9.0.7.jar%235!:?]
	at cpw.mods.modlauncher.LaunchServiceHandler.launch(LaunchServiceHandler.java:53) [modlauncher-9.0.7.jar%235!:?]
	at cpw.mods.modlauncher.LaunchServiceHandler.launch(LaunchServiceHandler.java:71) [modlauncher-9.0.7.jar%235!:?]
	at cpw.mods.modlauncher.Launcher.run(Launcher.java:106) [modlauncher-9.0.7.jar%235!:?]
	at cpw.mods.modlauncher.Launcher.main(Launcher.java:77) [modlauncher-9.0.7.jar%235!:?]
	at cpw.mods.modlauncher.BootstrapLaunchConsumer.accept(BootstrapLaunchConsumer.java:26) [modlauncher-9.0.7.jar%235!:?]
	at cpw.mods.modlauncher.BootstrapLaunchConsumer.accept(BootstrapLaunchConsumer.java:23) [modlauncher-9.0.7.jar%235!:?]
	at cpw.mods.bootstraplauncher.BootstrapLauncher.main(BootstrapLauncher.java:90) [bootstraplauncher-0.1.17.jar:?]
[16:23:52] [Render thread/WARN]: Error evaluating recipe quark:tweaks/crafting/dirty_glass; ignoring.
java.lang.NullPointerException: Cannot invoke "net.minecraft.world.level.Level.m_7465_()" because "worldIn" is null
	at vazkii.quark.base.recipe.ExclusionRecipe.matches(ExclusionRecipe.java:49) ~[Quark-3.0-334.jar%23156!:3.0-334]
	at vazkii.quark.base.recipe.ExclusionRecipe$ShapedExclusionRecipe.m_5818_(ExclusionRecipe.java:126) ~[Quark-3.0-334.jar%23156!:3.0-334]
	at com.minecolonies.api.crafting.GenericRecipe.calculateSecondaryOutputs(GenericRecipe.java:246) ~[minecolonies-1.18.1-1.0.278-RELEASE.jar%23141!:1.18.1-1.0.278-RELEASE]
	at com.minecolonies.api.crafting.GenericRecipe.of(GenericRecipe.java:54) ~[minecolonies-1.18.1-1.0.278-RELEASE.jar%23141!:1.18.1-1.0.278-RELEASE]
	at com.minecolonies.coremod.compatibility.jei.GenericRecipeUtils.create(GenericRecipeUtils.java:73) ~[minecolonies-1.18.1-1.0.278-RELEASE.jar%23141!:1.18.1-1.0.278-RELEASE]
	at com.minecolonies.coremod.compatibility.jei.JEIPlugin.tryAddingVanillaRecipe(JEIPlugin.java:199) ~[minecolonies-1.18.1-1.0.278-RELEASE.jar%23141!:1.18.1-1.0.278-RELEASE]
	at com.minecolonies.coremod.compatibility.jei.JEIPlugin.buildVanillaRecipesMap(JEIPlugin.java:177) ~[minecolonies-1.18.1-1.0.278-RELEASE.jar%23141!:1.18.1-1.0.278-RELEASE]
	at com.minecolonies.coremod.compatibility.jei.JEIPlugin.registerRecipes(JEIPlugin.java:131) ~[minecolonies-1.18.1-1.0.278-RELEASE.jar%23141!:1.18.1-1.0.278-RELEASE]
	at mezz.jei.load.PluginLoader.lambda$createRecipeManager$9(PluginLoader.java:139) ~[jei-1.18.1-9.1.2.61.jar%23123!:9.1.2.61]
	at mezz.jei.load.PluginCaller.callOnPlugins(PluginCaller.java:26) ~[jei-1.18.1-9.1.2.61.jar%23123!:9.1.2.61]
	at mezz.jei.load.PluginLoader.createRecipeManager(PluginLoader.java:139) ~[jei-1.18.1-9.1.2.61.jar%23123!:9.1.2.61]
	at mezz.jei.startup.JeiStarter.start(JeiStarter.java:85) ~[jei-1.18.1-9.1.2.61.jar%23123!:9.1.2.61]
	at mezz.jei.startup.ClientLifecycleHandler.startJEI(ClientLifecycleHandler.java:134) ~[jei-1.18.1-9.1.2.61.jar%23123!:9.1.2.61]
	at mezz.jei.startup.ClientLifecycleHandler.setupJEI(ClientLifecycleHandler.java:123) ~[jei-1.18.1-9.1.2.61.jar%23123!:9.1.2.61]
	at mezz.jei.startup.ClientLifecycleHandler.lambda$new$2(ClientLifecycleHandler.java:107) ~[jei-1.18.1-9.1.2.61.jar%23123!:9.1.2.61]
	at net.minecraftforge.eventbus.EventBus.doCastFilter(EventBus.java:247) ~[eventbus-5.0.3.jar%232!:?]
	at net.minecraftforge.eventbus.EventBus.lambda$addListener$11(EventBus.java:239) ~[eventbus-5.0.3.jar%232!:?]
	at net.minecraftforge.eventbus.EventBus.post(EventBus.java:302) ~[eventbus-5.0.3.jar%232!:?]
	at net.minecraftforge.eventbus.EventBus.post(EventBus.java:283) ~[eventbus-5.0.3.jar%232!:?]
	at net.minecraftforge.client.ForgeHooksClient.onRecipesUpdated(ForgeHooksClient.java:677) ~[forge-1.18.1-39.0.10-universal.jar%23194!:?]
	at net.minecraft.client.multiplayer.ClientPacketListener.m_6327_(ClientPacketListener.java:1166) ~[client-1.18.1-20211210.034407-srg.jar%23190!:?]
	at net.minecraft.network.protocol.game.ClientboundUpdateRecipesPacket.m_5797_(ClientboundUpdateRecipesPacket.java:32) ~[client-1.18.1-20211210.034407-srg.jar%23190!:?]
	at net.minecraft.network.protocol.game.ClientboundUpdateRecipesPacket.m_5797_(ClientboundUpdateRecipesPacket.java:14) ~[client-1.18.1-20211210.034407-srg.jar%23190!:?]
	at net.minecraft.network.protocol.PacketUtils.m_131356_(PacketUtils.java:21) ~[client-1.18.1-20211210.034407-srg.jar%23190!:?]
	at net.minecraft.util.thread.BlockableEventLoop.m_6367_(BlockableEventLoop.java:151) ~[client-1.18.1-20211210.034407-srg.jar%23190!:?]
	at net.minecraft.util.thread.ReentrantBlockableEventLoop.m_6367_(ReentrantBlockableEventLoop.java:23) ~[client-1.18.1-20211210.034407-srg.jar%23190!:?]
	at net.minecraft.util.thread.BlockableEventLoop.m_7245_(BlockableEventLoop.java:125) ~[client-1.18.1-20211210.034407-srg.jar%23190!:?]
	at net.minecraft.util.thread.BlockableEventLoop.m_18699_(BlockableEventLoop.java:110) ~[client-1.18.1-20211210.034407-srg.jar%23190!:?]
	at net.minecraft.client.Minecraft.m_91383_(Minecraft.java:1009) ~[client-1.18.1-20211210.034407-srg.jar%23190!:?]
	at net.minecraft.client.Minecraft.m_91374_(Minecraft.java:660) ~[client-1.18.1-20211210.034407-srg.jar%23190!:?]
	at net.minecraft.client.main.Main.main(Main.java:205) ~[client-1.18.1-20211210.034407-srg.jar%23190!:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:568) ~[?:?]
	at net.minecraftforge.fml.loading.targets.CommonClientLaunchHandler.lambda$launchService$0(CommonClientLaunchHandler.java:45) ~[fmlloader-1.18.1-39.0.10.jar%2323!:?]
	at cpw.mods.modlauncher.LaunchServiceHandlerDecorator.launch(LaunchServiceHandlerDecorator.java:37) [modlauncher-9.0.7.jar%235!:?]
	at cpw.mods.modlauncher.LaunchServiceHandler.launch(LaunchServiceHandler.java:53) [modlauncher-9.0.7.jar%235!:?]
	at cpw.mods.modlauncher.LaunchServiceHandler.launch(LaunchServiceHandler.java:71) [modlauncher-9.0.7.jar%235!:?]
	at cpw.mods.modlauncher.Launcher.run(Launcher.java:106) [modlauncher-9.0.7.jar%235!:?]
	at cpw.mods.modlauncher.Launcher.main(Launcher.java:77) [modlauncher-9.0.7.jar%235!:?]
	at cpw.mods.modlauncher.BootstrapLaunchConsumer.accept(BootstrapLaunchConsumer.java:26) [modlauncher-9.0.7.jar%235!:?]
	at cpw.mods.modlauncher.BootstrapLaunchConsumer.accept(BootstrapLaunchConsumer.java:23) [modlauncher-9.0.7.jar%235!:?]
	at cpw.mods.bootstraplauncher.BootstrapLauncher.main(BootstrapLauncher.java:90) [bootstraplauncher-0.1.17.jar:?]
[16:23:54] [Render thread/INFO]: Building runtime...
[16:23:54] [Render thread/INFO]: Building runtime took 69.02 ms
[16:23:54] [Render thread/INFO]: Ingredients are being removed at runtime: 1 net.minecraft.world.item.ItemStack
[16:23:54] [Render thread/INFO]: Ingredients are being added at runtime: 1 net.minecraft.world.item.ItemStack
[16:23:54] [Render thread/INFO]: Starting JEI took 27.19 s
[16:23:54] [Render thread/INFO]: [CHAT] Reloaded with no KubeJS errors!
[16:23:55] [Render thread/INFO]: Custom modded block handling enabled for biomesoplenty
[16:23:57] [Server thread/INFO]: Saving and pausing game...
[16:23:57] [Render thread/INFO]: Loaded 6298 advancements
[16:23:57] [Render thread/WARN]: Recipe mysticalagriculture:air_essence (of type minecraft:crafting) not found
[16:23:57] [Render thread/ERROR]: Error loading book rftoolsbase:manual, using empty contents and ignoring extensions
java.lang.IllegalArgumentException: `category` must be fully qualified (domain:name). Hint: Try `rftoolsbase:category_machines`
	at vazkii.patchouli.client.book.BookEntry.initCategory(BookEntry.java:104) ~[Patchouli-1.18.1-64.jar%23152!:1.18.1-64]
	at vazkii.patchouli.client.book.BookContentsBuilder.loadEntry(BookContentsBuilder.java:164) ~[Patchouli-1.18.1-64.jar%23152!:1.18.1-64]
	at vazkii.patchouli.client.book.BookContentsBuilder.lambda$loadFrom$0(BookContentsBuilder.java:80) ~[Patchouli-1.18.1-64.jar%23152!:1.18.1-64]
	at vazkii.patchouli.client.book.BookContentsBuilder.load(BookContentsBuilder.java:118) ~[Patchouli-1.18.1-64.jar%23152!:1.18.1-64]
	at vazkii.patchouli.client.book.BookContentsBuilder.loadFrom(BookContentsBuilder.java:79) ~[Patchouli-1.18.1-64.jar%23152!:1.18.1-64]
	at vazkii.patchouli.common.book.Book.reloadContents(Book.java:182) ~[Patchouli-1.18.1-64.jar%23152!:1.18.1-64]
	at vazkii.patchouli.common.book.BookRegistry.reloadContents(BookRegistry.java:128) ~[Patchouli-1.18.1-64.jar%23152!:1.18.1-64]
	at vazkii.patchouli.client.book.ClientBookRegistry.reload(ClientBookRegistry.java:63) ~[Patchouli-1.18.1-64.jar%23152!:1.18.1-64]
	at vazkii.patchouli.client.base.ClientAdvancements.onClientPacket(ClientAdvancements.java:34) ~[Patchouli-1.18.1-64.jar%23152!:1.18.1-64]
	at net.minecraft.client.multiplayer.ClientAdvancements.handler$zgf000$patchouli_onSync(ClientAdvancements.java:1017) ~[client-1.18.1-20211210.034407-srg.jar%23190!:?]
	at net.minecraft.client.multiplayer.ClientAdvancements.m_104399_(ClientAdvancements.java:57) ~[client-1.18.1-20211210.034407-srg.jar%23190!:?]
	at net.minecraft.client.multiplayer.ClientPacketListener.m_5498_(ClientPacketListener.java:1127) ~[client-1.18.1-20211210.034407-srg.jar%23190!:?]
	at net.minecraft.network.protocol.game.ClientboundUpdateAdvancementsPacket.m_5797_(ClientboundUpdateAdvancementsPacket.java:51) ~[client-1.18.1-20211210.034407-srg.jar%23190!:?]
	at net.minecraft.network.protocol.game.ClientboundUpdateAdvancementsPacket.m_5797_(ClientboundUpdateAdvancementsPacket.java:16) ~[client-1.18.1-20211210.034407-srg.jar%23190!:?]
	at net.minecraft.network.protocol.PacketUtils.m_131356_(PacketUtils.java:21) ~[client-1.18.1-20211210.034407-srg.jar%23190!:?]
	at net.minecraft.util.thread.BlockableEventLoop.m_6367_(BlockableEventLoop.java:151) ~[client-1.18.1-20211210.034407-srg.jar%23190!:?]
	at net.minecraft.util.thread.ReentrantBlockableEventLoop.m_6367_(ReentrantBlockableEventLoop.java:23) ~[client-1.18.1-20211210.034407-srg.jar%23190!:?]
	at net.minecraft.util.thread.BlockableEventLoop.m_7245_(BlockableEventLoop.java:125) ~[client-1.18.1-20211210.034407-srg.jar%23190!:?]
	at net.minecraft.util.thread.BlockableEventLoop.m_18699_(BlockableEventLoop.java:110) ~[client-1.18.1-20211210.034407-srg.jar%23190!:?]
	at net.minecraft.client.Minecraft.m_91383_(Minecraft.java:1009) ~[client-1.18.1-20211210.034407-srg.jar%23190!:?]
	at net.minecraft.client.Minecraft.m_91374_(Minecraft.java:660) ~[client-1.18.1-20211210.034407-srg.jar%23190!:?]
	at net.minecraft.client.main.Main.main(Main.java:205) ~[client-1.18.1-20211210.034407-srg.jar%23190!:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:568) ~[?:?]
	at net.minecraftforge.fml.loading.targets.CommonClientLaunchHandler.lambda$launchService$0(CommonClientLaunchHandler.java:45) ~[fmlloader-1.18.1-39.0.10.jar%2323!:?]
	at cpw.mods.modlauncher.LaunchServiceHandlerDecorator.launch(LaunchServiceHandlerDecorator.java:37) [modlauncher-9.0.7.jar%235!:?]
	at cpw.mods.modlauncher.LaunchServiceHandler.launch(LaunchServiceHandler.java:53) [modlauncher-9.0.7.jar%235!:?]
	at cpw.mods.modlauncher.LaunchServiceHandler.launch(LaunchServiceHandler.java:71) [modlauncher-9.0.7.jar%235!:?]
	at cpw.mods.modlauncher.Launcher.run(Launcher.java:106) [modlauncher-9.0.7.jar%235!:?]
	at cpw.mods.modlauncher.Launcher.main(Launcher.java:77) [modlauncher-9.0.7.jar%235!:?]
	at cpw.mods.modlauncher.BootstrapLaunchConsumer.accept(BootstrapLaunchConsumer.java:26) [modlauncher-9.0.7.jar%235!:?]
	at cpw.mods.modlauncher.BootstrapLaunchConsumer.accept(BootstrapLaunchConsumer.java:23) [modlauncher-9.0.7.jar%235!:?]
	at cpw.mods.bootstraplauncher.BootstrapLauncher.main(BootstrapLauncher.java:90) [bootstraplauncher-0.1.17.jar:?]
[16:23:57] [Render thread/ERROR]: Error compiling book rftoolsbase:manual, using empty contents
java.lang.RuntimeException: Error while building category rftoolsbase:category_machines
	at vazkii.patchouli.client.book.BookContentsBuilder.lambda$build$1(BookContentsBuilder.java:90) ~[Patchouli-1.18.1-64.jar%23152!:1.18.1-64]
	at java.util.HashMap.forEach(HashMap.java:1421) ~[?:?]
	at vazkii.patchouli.client.book.BookContentsBuilder.build(BookContentsBuilder.java:86) ~[Patchouli-1.18.1-64.jar%23152!:1.18.1-64]
	at vazkii.patchouli.common.book.Book.reloadContents(Book.java:197) ~[Patchouli-1.18.1-64.jar%23152!:1.18.1-64]
	at vazkii.patchouli.common.book.BookRegistry.reloadContents(BookRegistry.java:128) ~[Patchouli-1.18.1-64.jar%23152!:1.18.1-64]
	at vazkii.patchouli.client.book.ClientBookRegistry.reload(ClientBookRegistry.java:63) ~[Patchouli-1.18.1-64.jar%23152!:1.18.1-64]
	at vazkii.patchouli.client.base.ClientAdvancements.onClientPacket(ClientAdvancements.java:34) ~[Patchouli-1.18.1-64.jar%23152!:1.18.1-64]
	at net.minecraft.client.multiplayer.ClientAdvancements.handler$zgf000$patchouli_onSync(ClientAdvancements.java:1017) ~[client-1.18.1-20211210.034407-srg.jar%23190!:?]
	at net.minecraft.client.multiplayer.ClientAdvancements.m_104399_(ClientAdvancements.java:57) ~[client-1.18.1-20211210.034407-srg.jar%23190!:?]
	at net.minecraft.client.multiplayer.ClientPacketListener.m_5498_(ClientPacketListener.java:1127) ~[client-1.18.1-20211210.034407-srg.jar%23190!:?]
	at net.minecraft.network.protocol.game.ClientboundUpdateAdvancementsPacket.m_5797_(ClientboundUpdateAdvancementsPacket.java:51) ~[client-1.18.1-20211210.034407-srg.jar%23190!:?]
	at net.minecraft.network.protocol.game.ClientboundUpdateAdvancementsPacket.m_5797_(ClientboundUpdateAdvancementsPacket.java:16) ~[client-1.18.1-20211210.034407-srg.jar%23190!:?]
	at net.minecraft.network.protocol.PacketUtils.m_131356_(PacketUtils.java:21) ~[client-1.18.1-20211210.034407-srg.jar%23190!:?]
	at net.minecraft.util.thread.BlockableEventLoop.m_6367_(BlockableEventLoop.java:151) ~[client-1.18.1-20211210.034407-srg.jar%23190!:?]
	at net.minecraft.util.thread.ReentrantBlockableEventLoop.m_6367_(ReentrantBlockableEventLoop.java:23) ~[client-1.18.1-20211210.034407-srg.jar%23190!:?]
	at net.minecraft.util.thread.BlockableEventLoop.m_7245_(BlockableEventLoop.java:125) ~[client-1.18.1-20211210.034407-srg.jar%23190!:?]
	at net.minecraft.util.thread.BlockableEventLoop.m_18699_(BlockableEventLoop.java:110) ~[client-1.18.1-20211210.034407-srg.jar%23190!:?]
	at net.minecraft.client.Minecraft.m_91383_(Minecraft.java:1009) ~[client-1.18.1-20211210.034407-srg.jar%23190!:?]
	at net.minecraft.client.Minecraft.m_91374_(Minecraft.java:660) ~[client-1.18.1-20211210.034407-srg.jar%23190!:?]
	at net.minecraft.client.main.Main.main(Main.java:205) ~[client-1.18.1-20211210.034407-srg.jar%23190!:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:568) ~[?:?]
	at net.minecraftforge.fml.loading.targets.CommonClientLaunchHandler.lambda$launchService$0(CommonClientLaunchHandler.java:45) ~[fmlloader-1.18.1-39.0.10.jar%2323!:?]
	at cpw.mods.modlauncher.LaunchServiceHandlerDecorator.launch(LaunchServiceHandlerDecorator.java:37) [modlauncher-9.0.7.jar%235!:?]
	at cpw.mods.modlauncher.LaunchServiceHandler.launch(LaunchServiceHandler.java:53) [modlauncher-9.0.7.jar%235!:?]
	at cpw.mods.modlauncher.LaunchServiceHandler.launch(LaunchServiceHandler.java:71) [modlauncher-9.0.7.jar%235!:?]
	at cpw.mods.modlauncher.Launcher.run(Launcher.java:106) [modlauncher-9.0.7.jar%235!:?]
	at cpw.mods.modlauncher.Launcher.main(Launcher.java:77) [modlauncher-9.0.7.jar%235!:?]
	at cpw.mods.modlauncher.BootstrapLaunchConsumer.accept(BootstrapLaunchConsumer.java:26) [modlauncher-9.0.7.jar%235!:?]
	at cpw.mods.modlauncher.BootstrapLaunchConsumer.accept(BootstrapLaunchConsumer.java:23) [modlauncher-9.0.7.jar%235!:?]
	at cpw.mods.bootstraplauncher.BootstrapLauncher.main(BootstrapLauncher.java:90) [bootstraplauncher-0.1.17.jar:?]
Caused by: java.lang.IllegalArgumentException: `parent` must be fully qualified (domain:name). Hint: Try `rftoolsbase:category_rftoolsbase`
	at vazkii.patchouli.client.book.BookCategory.build(BookCategory.java:156) ~[Patchouli-1.18.1-64.jar%23152!:1.18.1-64]
	at vazkii.patchouli.client.book.BookContentsBuilder.lambda$build$1(BookContentsBuilder.java:88) ~[Patchouli-1.18.1-64.jar%23152!:1.18.1-64]
	... 32 more
[16:23:57] [Render thread/WARN]: Recipe croptopia:shaped_stuffed_artichoke (of type minecraft:crafting) not found
[16:23:57] [Server thread/INFO]: Saving chunks for level 'ServerLevel[New World3]'/minecraft:overworld
[16:23:57] [Render thread/WARN]: Recipe cyclic:location (of type minecraft:crafting) not found
[16:23:57] [Render thread/WARN]: Recipe cyclic:peat_fuel (of type minecraft:smelting) not found
[16:23:57] [Render thread/WARN]: Recipe cyclic:experience_food (of type minecraft:crafting) not found
[16:23:59] [Render thread/INFO]: Loaded 0 waypoints from /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/journeymap/data/sp/New World3/waypoints
[16:23:59] [Render thread/INFO]: Mapping started in /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/journeymap/data/sp/New World3//Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/journeymap/data/sp/New World3/overworld. Memory: 5120MB total, 2189MB free 
[16:23:59] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:24:04] [Server thread/INFO]: Saving chunks for level 'ServerLevel[New World3]'/minecraft:the_nether
[16:24:04] [Server thread/INFO]: Saving chunks for level 'ServerLevel[New World3]'/minecraft:the_end
[16:24:04] [Server thread/INFO]: Saving chunks for level 'ServerLevel[New World3]'/mahoutsukai:reality_marble
[16:24:04] [Server thread/INFO]: Saving chunks for level 'ServerLevel[New World3]'/dimdungeons:dungeon_dimension
[16:24:05] [Server thread/WARN]: Can't keep up! Is the server overloaded? Running 8754ms or 175 ticks behind
[16:24:09] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:24:19] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:24:29] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:24:31] [Render thread/INFO]: [CHAT] §eJourneyMap:§f Press [§bJ§f]
[16:24:32] [Render thread/INFO]: 
[16:24:35] [Server thread/WARN]: Can't keep up! Is the server overloaded? Running 4365ms or 87 ticks behind
[16:24:39] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:24:49] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:24:59] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:25:09] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:25:19] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:25:29] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:25:39] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:25:49] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:25:59] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:26:09] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:26:17] [Server thread/INFO]: Saving and pausing game...
[16:26:17] [Server thread/INFO]: Saving chunks for level 'ServerLevel[New World3]'/minecraft:overworld
[16:26:17] [Server thread/INFO]: Saving chunks for level 'ServerLevel[New World3]'/minecraft:the_nether
[16:26:17] [Server thread/INFO]: Saving chunks for level 'ServerLevel[New World3]'/minecraft:the_end
[16:26:17] [Server thread/INFO]: Saving chunks for level 'ServerLevel[New World3]'/mahoutsukai:reality_marble
[16:26:17] [Server thread/INFO]: Saving chunks for level 'ServerLevel[New World3]'/dimdungeons:dungeon_dimension
[16:26:19] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:26:29] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:26:36] [Server thread/INFO]: Saving and pausing game...
[16:26:36] [Server thread/INFO]: Saving chunks for level 'ServerLevel[New World3]'/minecraft:overworld
[16:26:36] [Server thread/INFO]: Saving chunks for level 'ServerLevel[New World3]'/minecraft:the_nether
[16:26:36] [Server thread/INFO]: Saving chunks for level 'ServerLevel[New World3]'/minecraft:the_end
[16:26:36] [Server thread/INFO]: Saving chunks for level 'ServerLevel[New World3]'/mahoutsukai:reality_marble
[16:26:36] [Server thread/INFO]: Saving chunks for level 'ServerLevel[New World3]'/dimdungeons:dungeon_dimension
[16:26:39] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:26:49] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:26:58] [Server thread/INFO]: Progress has been changed!
[16:26:58] [Render thread/INFO]: [CHAT] [Server: Progress has been changed!]
[16:26:59] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:27:09] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:27:19] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:27:29] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:27:39] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:27:49] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:27:59] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:28:09] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:28:19] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:28:29] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:28:39] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:28:46] [FTBLibrary-ItemSearch/INFO]: Done updating item list in 45244μs!
[16:28:48] [FTBLibrary-ItemSearch/INFO]: Done updating item list in 124567μs!
[16:28:48] [FTBLibrary-ItemSearch/INFO]: Done updating item list in 53685μs!
[16:28:48] [FTBLibrary-ItemSearch/INFO]: Done updating item list in 40726μs!
[16:28:49] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:28:57] [FTBLibrary-ItemSearch/INFO]: Done updating item list in 67652μs!
[16:28:59] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:29:05] [FTBLibrary-ItemSearch/INFO]: Done updating item list in 63418μs!
[16:29:09] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:29:10] [FTBLibrary-ItemSearch/INFO]: Done updating item list in 8104μs!
[16:29:13] [FTBLibrary-ItemSearch/INFO]: Done updating item list in 66131μs!
[16:29:13] [FTBLibrary-ItemSearch/INFO]: Done updating item list in 95170μs!
[16:29:13] [FTBLibrary-ItemSearch/INFO]: Done updating item list in 57256μs!
[16:29:14] [FTBLibrary-ItemSearch/INFO]: Done updating item list in 40072μs!
[16:29:19] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:29:20] [FTBLibrary-ItemSearch/INFO]: Done updating item list in 115887μs!
[16:29:23] [FTBLibrary-ItemSearch/INFO]: Done updating item list in 67316μs!
[16:29:29] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:29:39] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:29:49] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:29:59] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:30:09] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:30:19] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:30:29] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:30:39] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:30:49] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:30:59] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:31:09] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:31:19] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:31:29] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:31:39] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:31:49] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:31:59] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:32:09] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:32:19] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:32:29] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:32:39] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:32:48] [FTBLibrary-ItemSearch/INFO]: Done updating item list in 59595μs!
[16:32:49] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:32:50] [FTBLibrary-ItemSearch/INFO]: Done updating item list in 191103μs!
[16:32:50] [FTBLibrary-ItemSearch/INFO]: Done updating item list in 100798μs!
[16:32:50] [FTBLibrary-ItemSearch/INFO]: Done updating item list in 69948μs!
[16:32:50] [FTBLibrary-ItemSearch/INFO]: Done updating item list in 53531μs!
[16:32:59] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:33:09] [FTBLibrary-ItemSearch/INFO]: Done updating item list in 8525μs!
[16:33:09] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:33:10] [FTBLibrary-ItemSearch/INFO]: Done updating item list in 110253μs!
[16:33:10] [FTBLibrary-ItemSearch/INFO]: Done updating item list in 31096μs!
[16:33:11] [FTBLibrary-ItemSearch/INFO]: Done updating item list in 37013μs!
[16:33:11] [FTBLibrary-ItemSearch/INFO]: Done updating item list in 27924μs!
[16:33:19] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:33:29] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:33:39] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:33:49] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:33:59] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:34:09] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:34:19] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:34:29] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:34:39] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:34:49] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:34:59] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:35:09] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:35:19] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:35:29] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:35:39] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:35:49] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:35:59] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:36:09] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:36:19] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:36:29] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:36:39] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:36:49] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:36:59] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:37:09] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:37:19] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:37:29] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:37:39] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:37:49] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:37:59] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:38:09] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:38:19] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:38:29] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:38:39] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:38:49] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:38:59] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:39:09] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:39:19] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:39:29] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:39:32] [Server thread/INFO]: Saving and pausing game...
[16:39:32] [Server thread/INFO]: Saving chunks for level 'ServerLevel[New World3]'/minecraft:overworld
[16:39:32] [Server thread/INFO]: Saving chunks for level 'ServerLevel[New World3]'/minecraft:the_nether
[16:39:32] [Server thread/INFO]: Saving chunks for level 'ServerLevel[New World3]'/minecraft:the_end
[16:39:32] [Server thread/INFO]: Saving chunks for level 'ServerLevel[New World3]'/mahoutsukai:reality_marble
[16:39:32] [Server thread/INFO]: Saving chunks for level 'ServerLevel[New World3]'/dimdungeons:dungeon_dimension
[16:39:37] [Server thread/INFO]: Saving and pausing game...
[16:39:38] [Server thread/INFO]: Saving chunks for level 'ServerLevel[New World3]'/minecraft:overworld
[16:39:38] [Server thread/INFO]: Saving chunks for level 'ServerLevel[New World3]'/minecraft:the_nether
[16:39:38] [Server thread/INFO]: Saving chunks for level 'ServerLevel[New World3]'/minecraft:the_end
[16:39:38] [Server thread/INFO]: Saving chunks for level 'ServerLevel[New World3]'/mahoutsukai:reality_marble
[16:39:38] [Server thread/INFO]: Saving chunks for level 'ServerLevel[New World3]'/dimdungeons:dungeon_dimension
[16:39:39] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:39:49] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:39:49] [Server thread/INFO]: Saving and pausing game...
[16:39:49] [Server thread/INFO]: Saving chunks for level 'ServerLevel[New World3]'/minecraft:overworld
[16:39:49] [Server thread/INFO]: Saving chunks for level 'ServerLevel[New World3]'/minecraft:the_nether
[16:39:49] [Server thread/INFO]: Saving chunks for level 'ServerLevel[New World3]'/minecraft:the_end
[16:39:49] [Server thread/INFO]: Saving chunks for level 'ServerLevel[New World3]'/mahoutsukai:reality_marble
[16:39:49] [Server thread/INFO]: Saving chunks for level 'ServerLevel[New World3]'/dimdungeons:dungeon_dimension
[16:39:59] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:40:09] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:40:12] [FTBLibrary-ItemSearch/INFO]: Done updating item list in 16093μs!
[16:40:14] [FTBLibrary-ItemSearch/INFO]: Done updating item list in 117723μs!
[16:40:14] [FTBLibrary-ItemSearch/INFO]: Done updating item list in 39455μs!
[16:40:14] [FTBLibrary-ItemSearch/INFO]: Done updating item list in 58591μs!
[16:40:14] [FTBLibrary-ItemSearch/INFO]: Done updating item list in 32739μs!
[16:40:19] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:40:29] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:40:39] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:40:49] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:40:59] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:41:09] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:41:19] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:41:29] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:41:39] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:41:42] [FTBLibrary-ItemSearch/INFO]: Done updating item list in 36488μs!
[16:41:44] [FTBLibrary-ItemSearch/INFO]: Done updating item list in 116806μs!
[16:41:44] [FTBLibrary-ItemSearch/INFO]: Done updating item list in 43961μs!
[16:41:44] [FTBLibrary-ItemSearch/INFO]: Done updating item list in 41752μs!
[16:41:44] [FTBLibrary-ItemSearch/INFO]: Done updating item list in 70991μs!
[16:41:44] [FTBLibrary-ItemSearch/INFO]: Done updating item list in 78728μs!
[16:41:49] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:41:59] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:42:09] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:42:19] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:42:29] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:42:39] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:42:49] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:42:59] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:43:09] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:43:14] [Server thread/INFO]: All players have been successfully backed up
[16:43:19] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:43:29] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:43:29] [FTBLibrary-ItemSearch/INFO]: Done updating item list in 22311μs!
[16:43:32] [FTBLibrary-ItemSearch/INFO]: Done updating item list in 94696μs!
[16:43:32] [FTBLibrary-ItemSearch/INFO]: Done updating item list in 34015μs!
[16:43:32] [FTBLibrary-ItemSearch/INFO]: Done updating item list in 37556μs!
[16:43:39] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:43:49] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:43:59] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:44:09] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:44:19] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:44:29] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:44:39] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:44:49] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:44:59] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:45:09] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:45:19] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:45:29] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:45:39] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:45:49] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:45:59] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:46:09] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:46:19] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:46:29] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:46:37] [FTBLibrary-ItemSearch/INFO]: Done updating item list in 16885μs!
[16:46:39] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:46:39] [FTBLibrary-ItemSearch/INFO]: Done updating item list in 109847μs!
[16:46:39] [FTBLibrary-ItemSearch/INFO]: Done updating item list in 39351μs!
[16:46:39] [FTBLibrary-ItemSearch/INFO]: Done updating item list in 35109μs!
[16:46:39] [FTBLibrary-ItemSearch/INFO]: Done updating item list in 50131μs!
[16:46:40] [FTBLibrary-ItemSearch/INFO]: Done updating item list in 78122μs!
[16:46:41] [FTBLibrary-ItemSearch/INFO]: Done updating item list in 31661μs!
[16:46:41] [FTBLibrary-ItemSearch/INFO]: Done updating item list in 31347μs!
[16:46:41] [FTBLibrary-ItemSearch/INFO]: Done updating item list in 33967μs!
[16:46:41] [FTBLibrary-ItemSearch/INFO]: Done updating item list in 1368μs!
[16:46:42] [FTBLibrary-ItemSearch/INFO]: Done updating item list in 234970μs!
[16:46:42] [FTBLibrary-ItemSearch/INFO]: Done updating item list in 51511μs!
[16:46:42] [FTBLibrary-ItemSearch/INFO]: Done updating item list in 42030μs!
[16:46:49] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:46:59] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:47:09] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:47:19] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:47:22] [FTBLibrary-ItemSearch/INFO]: Done updating item list in 29964μs!
[16:47:25] [FTBLibrary-ItemSearch/INFO]: Done updating item list in 88706μs!
[16:47:25] [FTBLibrary-ItemSearch/INFO]: Done updating item list in 50034μs!
[16:47:26] [FTBLibrary-ItemSearch/INFO]: Done updating item list in 42548μs!
[16:47:27] [FTBLibrary-ItemSearch/INFO]: Done updating item list in 58861μs!
[16:47:28] [FTBLibrary-ItemSearch/INFO]: Done updating item list in 39330μs!
[16:47:29] [FTBLibrary-ItemSearch/INFO]: Done updating item list in 34688μs!
[16:47:29] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:47:29] [FTBLibrary-ItemSearch/INFO]: Done updating item list in 1862μs!
[16:47:30] [FTBLibrary-ItemSearch/INFO]: Done updating item list in 30460μs!
[16:47:30] [FTBLibrary-ItemSearch/INFO]: Done updating item list in 27690μs!
[16:47:30] [FTBLibrary-ItemSearch/INFO]: Done updating item list in 31492μs!
[16:47:39] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:47:49] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:47:59] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:48:09] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:48:19] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:48:29] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:48:39] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:48:49] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:48:59] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:49:09] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:49:19] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:49:29] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:49:39] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:49:49] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:49:57] [FTBLibrary-ItemSearch/INFO]: Done updating item list in 17330μs!
[16:49:59] [FTBLibrary-ItemSearch/INFO]: Done updating item list in 117092μs!
[16:49:59] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:49:59] [FTBLibrary-ItemSearch/INFO]: Done updating item list in 38519μs!
[16:49:59] [FTBLibrary-ItemSearch/INFO]: Done updating item list in 195369μs!
[16:50:09] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:50:19] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:50:29] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:50:39] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:50:49] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:50:59] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:51:09] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:51:19] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:51:29] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:51:39] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:51:45] [FTBLibrary-ItemSearch/INFO]: Done updating item list in 25790μs!
[16:51:47] [FTBLibrary-ItemSearch/INFO]: Done updating item list in 85162μs!
[16:51:47] [FTBLibrary-ItemSearch/INFO]: Done updating item list in 33711μs!
[16:51:47] [FTBLibrary-ItemSearch/INFO]: Done updating item list in 38700μs!
[16:51:49] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:51:55] [FTBLibrary-ItemSearch/INFO]: Done updating item list in 1537μs!
[16:51:56] [FTBLibrary-ItemSearch/INFO]: Done updating item list in 36830μs!
[16:51:57] [FTBLibrary-ItemSearch/INFO]: Done updating item list in 33079μs!
[16:51:57] [FTBLibrary-ItemSearch/INFO]: Done updating item list in 46071μs!
[16:51:58] [FTBLibrary-ItemSearch/INFO]: Done updating item list in 30994μs!
[16:51:59] [FTBLibrary-ItemSearch/INFO]: Done updating item list in 40983μs!
[16:51:59] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:51:59] [FTBLibrary-ItemSearch/INFO]: Done updating item list in 62732μs!
[16:51:59] [FTBLibrary-ItemSearch/INFO]: Done updating item list in 31132μs!
[16:51:59] [FTBLibrary-ItemSearch/INFO]: Done updating item list in 1464μs!
[16:52:00] [FTBLibrary-ItemSearch/INFO]: Done updating item list in 32086μs!
[16:52:00] [FTBLibrary-ItemSearch/INFO]: Done updating item list in 71532μs!
[16:52:00] [FTBLibrary-ItemSearch/INFO]: Done updating item list in 134641μs!
[16:52:09] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:52:13] [FTBLibrary-ItemSearch/INFO]: Done updating item list in 14925μs!
[16:52:16] [FTBLibrary-ItemSearch/INFO]: Done updating item list in 69247μs!
[16:52:16] [FTBLibrary-ItemSearch/INFO]: Done updating item list in 50624μs!
[16:52:16] [FTBLibrary-ItemSearch/INFO]: Done updating item list in 34886μs!
[16:52:19] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:52:24] [FTBLibrary-ItemSearch/INFO]: Done updating item list in 55592μs!
[16:52:29] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:52:30] [FTBLibrary-ItemSearch/INFO]: Done updating item list in 46971μs!
[16:52:39] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:52:49] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:52:59] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:53:09] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:53:19] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:53:29] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:53:39] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:53:49] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:53:59] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:54:09] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:54:19] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:54:29] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:54:39] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:54:49] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:54:52] [FTBLibrary-ItemSearch/INFO]: Done updating item list in 16522μs!
[16:54:54] [FTBLibrary-ItemSearch/INFO]: Done updating item list in 82536μs!
[16:54:54] [FTBLibrary-ItemSearch/INFO]: Done updating item list in 45675μs!
[16:54:59] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:55:09] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:55:19] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:55:29] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:55:39] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:55:49] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:55:59] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:56:09] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:56:19] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:56:29] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:56:31] [FTBLibrary-ItemSearch/INFO]: Done updating item list in 67973μs!
[16:56:37] [FTBLibrary-ItemSearch/INFO]: Done updating item list in 91265μs!
[16:56:37] [FTBLibrary-ItemSearch/INFO]: Done updating item list in 42447μs!
[16:56:38] [FTBLibrary-ItemSearch/INFO]: Done updating item list in 38566μs!
[16:56:38] [FTBLibrary-ItemSearch/INFO]: Done updating item list in 37669μs!
[16:56:39] [FTBLibrary-ItemSearch/INFO]: Done updating item list in 82545μs!
[16:56:39] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:56:39] [FTBLibrary-ItemSearch/INFO]: Done updating item list in 36639μs!
[16:56:39] [FTBLibrary-ItemSearch/INFO]: Done updating item list in 54003μs!
[16:56:39] [FTBLibrary-ItemSearch/INFO]: Done updating item list in 69980μs!
[16:56:40] [FTBLibrary-ItemSearch/INFO]: Done updating item list in 41239μs!
[16:56:40] [FTBLibrary-ItemSearch/INFO]: Done updating item list in 37898μs!
[16:56:40] [FTBLibrary-ItemSearch/INFO]: Done updating item list in 1410μs!
[16:56:41] [FTBLibrary-ItemSearch/INFO]: Done updating item list in 46667μs!
[16:56:41] [FTBLibrary-ItemSearch/INFO]: Done updating item list in 40345μs!
[16:56:41] [FTBLibrary-ItemSearch/INFO]: Done updating item list in 37830μs!
[16:56:43] [FTBLibrary-ItemSearch/INFO]: Done updating item list in 37661μs!
[16:56:43] [FTBLibrary-ItemSearch/INFO]: Done updating item list in 70341μs!
[16:56:44] [FTBLibrary-ItemSearch/INFO]: Done updating item list in 42129μs!
[16:56:45] [FTBLibrary-ItemSearch/INFO]: Done updating item list in 111780μs!
[16:56:46] [FTBLibrary-ItemSearch/INFO]: Done updating item list in 55917μs!
[16:56:46] [FTBLibrary-ItemSearch/INFO]: Done updating item list in 45081μs!
[16:56:47] [FTBLibrary-ItemSearch/INFO]: Done updating item list in 48723μs!
[16:56:47] [FTBLibrary-ItemSearch/INFO]: Done updating item list in 47218μs!
[16:56:49] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:56:51] [FTBLibrary-ItemSearch/INFO]: Done updating item list in 43727μs!
[16:56:52] [FTBLibrary-ItemSearch/INFO]: Done updating item list in 32388μs!
[16:56:52] [FTBLibrary-ItemSearch/INFO]: Done updating item list in 55854μs!
[16:56:52] [FTBLibrary-ItemSearch/INFO]: Done updating item list in 31451μs!
[16:56:52] [FTBLibrary-ItemSearch/INFO]: Done updating item list in 31411μs!
[16:56:52] [FTBLibrary-ItemSearch/INFO]: Done updating item list in 1510μs!
[16:56:53] [FTBLibrary-ItemSearch/INFO]: Done updating item list in 28332μs!
[16:56:53] [FTBLibrary-ItemSearch/INFO]: Done updating item list in 54609μs!
[16:56:53] [FTBLibrary-ItemSearch/INFO]: Done updating item list in 31000μs!
[16:56:53] [FTBLibrary-ItemSearch/INFO]: Done updating item list in 29855μs!
[16:56:55] [FTBLibrary-ItemSearch/INFO]: Done updating item list in 27769μs!
[16:56:55] [FTBLibrary-ItemSearch/INFO]: Done updating item list in 37349μs!
[16:56:55] [FTBLibrary-ItemSearch/INFO]: Done updating item list in 37803μs!
[16:56:55] [FTBLibrary-ItemSearch/INFO]: Done updating item list in 1452μs!
[16:56:56] [FTBLibrary-ItemSearch/INFO]: Done updating item list in 27161μs!
[16:56:56] [FTBLibrary-ItemSearch/INFO]: Done updating item list in 37388μs!
[16:56:56] [FTBLibrary-ItemSearch/INFO]: Done updating item list in 32647μs!
[16:56:59] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:57:09] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:57:19] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:57:29] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:57:34] [Render thread/ERROR]: ########## GL ERROR ##########
[16:57:34] [Render thread/ERROR]: @ Render
[16:57:34] [Render thread/ERROR]: 65544: Cocoa: Failed to find service port for display
[16:57:39] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:57:40] [Server thread/INFO]: Saving and pausing game...
[16:57:40] [Server thread/INFO]: Saving chunks for level 'ServerLevel[New World3]'/minecraft:overworld
[16:57:40] [Server thread/INFO]: Saving chunks for level 'ServerLevel[New World3]'/minecraft:the_nether
[16:57:40] [Server thread/INFO]: Saving chunks for level 'ServerLevel[New World3]'/minecraft:the_end
[16:57:40] [Server thread/INFO]: Saving chunks for level 'ServerLevel[New World3]'/mahoutsukai:reality_marble
[16:57:40] [Server thread/INFO]: Saving chunks for level 'ServerLevel[New World3]'/dimdungeons:dungeon_dimension
[16:57:49] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:57:59] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:58:09] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:58:19] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:58:20] [FTBLibrary-ItemSearch/INFO]: Done updating item list in 7580μs!
[16:58:21] [FTBLibrary-ItemSearch/INFO]: Done updating item list in 83233μs!
[16:58:22] [FTBLibrary-ItemSearch/INFO]: Done updating item list in 38160μs!
[16:58:22] [FTBLibrary-ItemSearch/INFO]: Done updating item list in 38654μs!
[16:58:29] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:58:37] [FTBLibrary-ItemSearch/INFO]: Done updating item list in 15400μs!
[16:58:38] [FTBLibrary-ItemSearch/INFO]: Done updating item list in 48257μs!
[16:58:38] [FTBLibrary-ItemSearch/INFO]: Done updating item list in 34744μs!
[16:58:39] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:58:44] [FTBLibrary-ItemSearch/INFO]: Done updating item list in 47052μs!
[16:58:44] [FTBLibrary-ItemSearch/INFO]: Done updating item list in 40393μs!
[16:58:45] [FTBLibrary-ItemSearch/INFO]: Done updating item list in 1382μs!
[16:58:49] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:58:59] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:59:09] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:59:19] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:59:29] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:59:39] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:59:49] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[16:59:59] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[17:00:09] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[17:00:19] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[17:00:27] [FTBLibrary-ItemSearch/INFO]: Done updating item list in 32543μs!
[17:00:29] [FTBLibrary-ItemSearch/INFO]: Done updating item list in 104451μs!
[17:00:29] [FTBLibrary-ItemSearch/INFO]: Done updating item list in 39106μs!
[17:00:29] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[17:00:30] [FTBLibrary-ItemSearch/INFO]: Done updating item list in 39999μs!
[17:00:34] [FTBLibrary-ItemSearch/INFO]: Done updating item list in 67055μs!
[17:00:34] [FTBLibrary-ItemSearch/INFO]: Done updating item list in 51062μs!
[17:00:35] [FTBLibrary-ItemSearch/INFO]: Done updating item list in 29757μs!
[17:00:39] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[17:00:49] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[17:00:59] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[17:01:09] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[17:01:19] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[17:01:29] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[17:01:39] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[17:01:49] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[17:01:59] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[17:02:09] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[17:02:19] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[17:02:29] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[17:02:39] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[17:02:49] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[17:02:59] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[17:03:09] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[17:03:14] [Server thread/INFO]: All players have been successfully backed up
[17:03:19] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[17:03:28] [FTBLibrary-ItemSearch/INFO]: Done updating item list in 38172μs!
[17:03:29] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[17:03:39] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[17:03:49] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[17:03:59] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[17:04:02] [FTBLibrary-ItemSearch/INFO]: Done updating item list in 16486μs!
[17:04:03] [FTBLibrary-ItemSearch/INFO]: Done updating item list in 103015μs!
[17:04:04] [FTBLibrary-ItemSearch/INFO]: Done updating item list in 46301μs!
[17:04:04] [FTBLibrary-ItemSearch/INFO]: Done updating item list in 52681μs!
[17:04:09] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[17:04:12] [FTBLibrary-ItemSearch/INFO]: Done updating item list in 5984μs!
[17:04:13] [FTBLibrary-ItemSearch/INFO]: Done updating item list in 54846μs!
[17:04:13] [FTBLibrary-ItemSearch/INFO]: Done updating item list in 55485μs!
[17:04:13] [FTBLibrary-ItemSearch/INFO]: Done updating item list in 35971μs!
[17:04:19] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[17:04:29] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[17:04:39] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[17:04:49] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[17:04:59] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[17:05:09] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[17:05:19] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[17:05:29] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[17:05:33] [Server thread/INFO]: Saving and pausing game...
[17:05:34] [Server thread/INFO]: Saving chunks for level 'ServerLevel[New World3]'/minecraft:overworld
[17:05:34] [Server thread/INFO]: Saving chunks for level 'ServerLevel[New World3]'/minecraft:the_nether
[17:05:34] [Server thread/INFO]: Saving chunks for level 'ServerLevel[New World3]'/minecraft:the_end
[17:05:34] [Server thread/INFO]: Saving chunks for level 'ServerLevel[New World3]'/mahoutsukai:reality_marble
[17:05:34] [Server thread/INFO]: Saving chunks for level 'ServerLevel[New World3]'/dimdungeons:dungeon_dimension
[17:05:35] [Render thread/INFO]: Removed all colony views
[17:05:35] [Render thread/INFO]: Mapping halted in /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/journeymap/data/mp/offline/minecraft:overworld
[17:05:35] [Server thread/INFO]: Keirtain lost connection: Disconnected
[17:05:35] [Server thread/INFO]: Keirtain left the game
[17:05:35] [Server thread/INFO]: Stopping singleplayer server as player logged out
[17:05:36] [Server thread/INFO]: Stopping server
[17:05:36] [Server thread/INFO]: Saving players
[17:05:36] [Server thread/INFO]: Saving worlds
[17:05:36] [Server thread/INFO]: Saving chunks for level 'ServerLevel[New World3]'/minecraft:overworld
[17:05:36] [Server thread/INFO]: Saving chunks for level 'ServerLevel[New World3]'/minecraft:the_nether
[17:05:36] [Server thread/INFO]: Saving chunks for level 'ServerLevel[New World3]'/minecraft:the_end
[17:05:36] [Server thread/INFO]: Saving chunks for level 'ServerLevel[New World3]'/mahoutsukai:reality_marble
[17:05:36] [Server thread/INFO]: Saving chunks for level 'ServerLevel[New World3]'/dimdungeons:dungeon_dimension
[17:05:36] [Server thread/INFO]: ThreadedAnvilChunkStorage (New World3): All chunks are saved
[17:05:36] [Server thread/INFO]: ThreadedAnvilChunkStorage (DIM-1): All chunks are saved
[17:05:36] [Server thread/INFO]: ThreadedAnvilChunkStorage (DIM1): All chunks are saved
[17:05:36] [Server thread/INFO]: ThreadedAnvilChunkStorage (reality_marble): All chunks are saved
[17:05:36] [Server thread/INFO]: ThreadedAnvilChunkStorage (dungeon_dimension): All chunks are saved
[17:05:36] [Server thread/INFO]: ThreadedAnvilChunkStorage: All dimensions are saved
[17:05:39] [Thread-0/WARN]: Configuration file /Users/matt/Documents/curseforge/minecraft/Instances/Test Pack/config/patchouli-client.toml is not correct. Correcting
[17:05:47] [Server thread/INFO]: Unloading EnderTank Data
[17:05:47] [Server thread/INFO]: Finished Unloading EnderTank Data
[17:05:47] [Server thread/INFO]: Unloading EnderChest Data
[17:05:47] [Server thread/INFO]: Finished Unloading EnderChest Data
[17:05:49] [Render thread/INFO]: Stopping!
